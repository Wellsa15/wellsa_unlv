
final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009e  00800100  00001692  00001726  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001692  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000c8  0080019e  0080019e  000017c4  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000017c4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001820  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00001860  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013be  00000000  00000000  00001970  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000481  00000000  00000000  00002d2e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ef4  00000000  00000000  000031af  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002ec  00000000  00000000  000040a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000089f2  00000000  00000000  00004390  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c27  00000000  00000000  0000cd82  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  0000d9a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  000031e3  00000000  00000000  0000da89  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b0 c0       	rjmp	.+352    	; 0x162 <__ctors_end>
       2:	00 00       	nop
       4:	ca c0       	rjmp	.+404    	; 0x19a <__bad_interrupt>
       6:	00 00       	nop
       8:	c8 c0       	rjmp	.+400    	; 0x19a <__bad_interrupt>
       a:	00 00       	nop
       c:	c6 c0       	rjmp	.+396    	; 0x19a <__bad_interrupt>
       e:	00 00       	nop
      10:	c4 c0       	rjmp	.+392    	; 0x19a <__bad_interrupt>
      12:	00 00       	nop
      14:	c2 c0       	rjmp	.+388    	; 0x19a <__bad_interrupt>
      16:	00 00       	nop
      18:	c0 c0       	rjmp	.+384    	; 0x19a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	be c0       	rjmp	.+380    	; 0x19a <__bad_interrupt>
      1e:	00 00       	nop
      20:	bc c0       	rjmp	.+376    	; 0x19a <__bad_interrupt>
      22:	00 00       	nop
      24:	ba c0       	rjmp	.+372    	; 0x19a <__bad_interrupt>
      26:	00 00       	nop
      28:	b8 c0       	rjmp	.+368    	; 0x19a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	b6 c0       	rjmp	.+364    	; 0x19a <__bad_interrupt>
      2e:	00 00       	nop
      30:	b4 c0       	rjmp	.+360    	; 0x19a <__bad_interrupt>
      32:	00 00       	nop
      34:	b2 c0       	rjmp	.+356    	; 0x19a <__bad_interrupt>
      36:	00 00       	nop
      38:	b0 c0       	rjmp	.+352    	; 0x19a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	ae c0       	rjmp	.+348    	; 0x19a <__bad_interrupt>
      3e:	00 00       	nop
      40:	ac c0       	rjmp	.+344    	; 0x19a <__bad_interrupt>
      42:	00 00       	nop
      44:	aa c0       	rjmp	.+340    	; 0x19a <__bad_interrupt>
      46:	00 00       	nop
      48:	a8 c0       	rjmp	.+336    	; 0x19a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	a6 c0       	rjmp	.+332    	; 0x19a <__bad_interrupt>
      4e:	00 00       	nop
      50:	a4 c0       	rjmp	.+328    	; 0x19a <__bad_interrupt>
      52:	00 00       	nop
      54:	a2 c0       	rjmp	.+324    	; 0x19a <__bad_interrupt>
      56:	00 00       	nop
      58:	a0 c0       	rjmp	.+320    	; 0x19a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	9e c0       	rjmp	.+316    	; 0x19a <__bad_interrupt>
      5e:	00 00       	nop
      60:	9c c0       	rjmp	.+312    	; 0x19a <__bad_interrupt>
      62:	00 00       	nop
      64:	9a c0       	rjmp	.+308    	; 0x19a <__bad_interrupt>
	...

00000068 <__trampolines_end>:
      68:	00 40       	sbci	r16, 0x00	; 0
      6a:	7a 10       	cpse	r7, r10
      6c:	f3 5a       	subi	r31, 0xA3	; 163
      6e:	00 a0       	ldd	r0, Z+32	; 0x20
      70:	72 4e       	sbci	r23, 0xE2	; 226
      72:	18 09       	sbc	r17, r8
      74:	00 10       	cpse	r0, r0
      76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__floatsisf+0x3c>
      78:	e8 00       	.word	0x00e8	; ????
      7a:	00 e8       	ldi	r16, 0x80	; 128
      7c:	76 48       	sbci	r23, 0x86	; 134
      7e:	17 00       	.word	0x0017	; ????
      80:	00 e4       	ldi	r16, 0x40	; 64
      82:	0b 54       	subi	r16, 0x4B	; 75
      84:	02 00       	.word	0x0002	; ????
      86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
      88:	9a 3b       	cpi	r25, 0xBA	; 186
      8a:	00 00       	nop
      8c:	00 e1       	ldi	r16, 0x10	; 16
      8e:	f5 05       	cpc	r31, r5
      90:	00 00       	nop
      92:	80 96       	adiw	r24, 0x20	; 32
      94:	98 00       	.word	0x0098	; ????
      96:	00 00       	nop
      98:	40 42       	sbci	r20, 0x20	; 32
      9a:	0f 00       	.word	0x000f	; ????
      9c:	00 00       	nop
      9e:	a0 86       	std	Z+8, r10	; 0x08
      a0:	01 00       	.word	0x0001	; ????
      a2:	00 00       	nop
      a4:	10 27       	eor	r17, r16
      a6:	00 00       	nop
      a8:	00 00       	nop
      aa:	e8 03       	fmulsu	r22, r16
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	64 00       	.word	0x0064	; ????
      b2:	00 00       	nop
      b4:	00 00       	nop
      b6:	0a 00       	.word	0x000a	; ????
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	01 00       	.word	0x0001	; ????
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	2c 76       	andi	r18, 0x6C	; 108
      c4:	d8 88       	ldd	r13, Y+16	; 0x10
      c6:	dc 67       	ori	r29, 0x7C	; 124
      c8:	4f 08       	sbc	r4, r15
      ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
      cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
      ce:	ae 59       	subi	r26, 0x9E	; 158
      d0:	e1 b1       	in	r30, 0x01	; 1
      d2:	b7 96       	adiw	r30, 0x27	; 39
      d4:	e5 e3       	ldi	r30, 0x35	; 53
      d6:	e4 53       	subi	r30, 0x34	; 52
      d8:	c6 3a       	cpi	r28, 0xA6	; 166
      da:	e6 51       	subi	r30, 0x16	; 22
      dc:	99 76       	andi	r25, 0x69	; 105
      de:	96 e8       	ldi	r25, 0x86	; 134
      e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <i2c_read_byte+0x8>
      e2:	84 26       	eor	r8, r20
      e4:	eb 89       	ldd	r30, Y+19	; 0x13
      e6:	8c 9b       	sbis	0x11, 4	; 17
      e8:	62 ed       	ldi	r22, 0xD2	; 210
      ea:	40 7c       	andi	r20, 0xC0	; 192
      ec:	6f fc       	.word	0xfc6f	; ????
      ee:	ef bc       	out	0x2f, r14	; 47
      f0:	9c 9f       	mul	r25, r28
      f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
      f4:	ba a5       	ldd	r27, Y+42	; 0x2a
      f6:	6f a5       	ldd	r22, Y+47	; 0x2f
      f8:	f4 90       	lpm	r15, Z
      fa:	05 5a       	subi	r16, 0xA5	; 165
      fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
      fe:	5c 93       	st	X, r21
     100:	6b 6c       	ori	r22, 0xCB	; 203
     102:	f9 67       	ori	r31, 0x79	; 121
     104:	6d c1       	rjmp	.+730    	; 0x3e0 <main+0x1fa>
     106:	1b fc       	.word	0xfc1b	; ????
     108:	e0 e4       	ldi	r30, 0x40	; 64
     10a:	0d 47       	sbci	r16, 0x7D	; 125
     10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
     10e:	20 e6       	ldi	r18, 0x60	; 96
     110:	b5 00       	.word	0x00b5	; ????
     112:	d0 ed       	ldi	r29, 0xD0	; 208
     114:	90 2e       	mov	r9, r16
     116:	03 00       	.word	0x0003	; ????
     118:	94 35       	cpi	r25, 0x54	; 84
     11a:	77 05       	cpc	r23, r7
     11c:	00 80       	ld	r0, Z
     11e:	84 1e       	adc	r8, r20
     120:	08 00       	.word	0x0008	; ????
     122:	00 20       	and	r0, r0
     124:	4e 0a       	sbc	r4, r30
     126:	00 00       	nop
     128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
     12a:	0c 33       	cpi	r16, 0x3C	; 60
     12c:	33 33       	cpi	r19, 0x33	; 51
     12e:	33 0f       	add	r19, r19
     130:	98 6e       	ori	r25, 0xE8	; 232
     132:	12 83       	std	Z+2, r17	; 0x02
     134:	11 41       	sbci	r17, 0x11	; 17
     136:	ef 8d       	ldd	r30, Y+31	; 0x1f
     138:	21 14       	cp	r2, r1
     13a:	89 3b       	cpi	r24, 0xB9	; 185
     13c:	e6 55       	subi	r30, 0x56	; 86
     13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
     140:	fe e6       	ldi	r31, 0x6E	; 110
     142:	db 18       	sub	r13, r11
     144:	d1 84       	ldd	r13, Z+9	; 0x09
     146:	4b 38       	cpi	r20, 0x8B	; 139
     148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
     14a:	7c 1d       	adc	r23, r12
     14c:	90 1d       	adc	r25, r0
     14e:	a4 bb       	out	0x14, r26	; 20
     150:	e4 24       	eor	r14, r4
     152:	20 32       	cpi	r18, 0x20	; 32
     154:	84 72       	andi	r24, 0x24	; 36
     156:	5e 22       	and	r5, r30
     158:	81 00       	.word	0x0081	; ????
     15a:	c9 f1       	breq	.+114    	; 0x1ce <USART_tx_string+0x14>
     15c:	24 ec       	ldi	r18, 0xC4	; 196
     15e:	a1 e5       	ldi	r26, 0x51	; 81
     160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
     162:	11 24       	eor	r1, r1
     164:	1f be       	out	0x3f, r1	; 63
     166:	cf ef       	ldi	r28, 0xFF	; 255
     168:	d8 e0       	ldi	r29, 0x08	; 8
     16a:	de bf       	out	0x3e, r29	; 62
     16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
     16e:	11 e0       	ldi	r17, 0x01	; 1
     170:	a0 e0       	ldi	r26, 0x00	; 0
     172:	b1 e0       	ldi	r27, 0x01	; 1
     174:	e2 e9       	ldi	r30, 0x92	; 146
     176:	f6 e1       	ldi	r31, 0x16	; 22
     178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
     17a:	05 90       	lpm	r0, Z+
     17c:	0d 92       	st	X+, r0
     17e:	ae 39       	cpi	r26, 0x9E	; 158
     180:	b1 07       	cpc	r27, r17
     182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
     184:	22 e0       	ldi	r18, 0x02	; 2
     186:	ae e9       	ldi	r26, 0x9E	; 158
     188:	b1 e0       	ldi	r27, 0x01	; 1
     18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
     18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
     18e:	a6 36       	cpi	r26, 0x66	; 102
     190:	b2 07       	cpc	r27, r18
     192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
     194:	28 d0       	rcall	.+80     	; 0x1e6 <main>
     196:	0c 94 47 0b 	jmp	0x168e	; 0x168e <_exit>

0000019a <__bad_interrupt>:
     19a:	32 cf       	rjmp	.-412    	; 0x0 <__vectors>

0000019c <USARTstart>:
	return 0;
}

void USARTstart(unsigned int ubrr)
{
	UBRR0H = (unsigned char)(ubrr>>8);// set baud rate to 115200
     19c:	90 93 c5 00 	sts	0x00C5, r25
	UBRR0L = (unsigned char)ubrr;
     1a0:	80 93 c4 00 	sts	0x00C4, r24
	
	UCSR0B |= (1<<RXEN0) | (1<<TXEN0); // Enable Transmit and Receive
     1a4:	e1 ec       	ldi	r30, 0xC1	; 193
     1a6:	f0 e0       	ldi	r31, 0x00	; 0
     1a8:	80 81       	ld	r24, Z
     1aa:	88 61       	ori	r24, 0x18	; 24
     1ac:	80 83       	st	Z, r24
	UCSR0C |= (1<<UCSZ01) | (1<<UCSZ00); // Set Frame: 8bit, 1 Stop
     1ae:	e2 ec       	ldi	r30, 0xC2	; 194
     1b0:	f0 e0       	ldi	r31, 0x00	; 0
     1b2:	80 81       	ld	r24, Z
     1b4:	86 60       	ori	r24, 0x06	; 6
     1b6:	80 83       	st	Z, r24
     1b8:	08 95       	ret

000001ba <USART_tx_string>:
	
	return;
}

void USART_tx_string(char *data)// transmit value function
{
     1ba:	cf 93       	push	r28
     1bc:	df 93       	push	r29
	while ((*data != '\0'))// loop to send each character over the serial connection
     1be:	fc 01       	movw	r30, r24
     1c0:	20 81       	ld	r18, Z
     1c2:	22 23       	and	r18, r18
     1c4:	69 f0       	breq	.+26     	; 0x1e0 <USART_tx_string+0x26>
     1c6:	dc 01       	movw	r26, r24
     1c8:	11 96       	adiw	r26, 0x01	; 1
	{
		while (!(UCSR0A & (1<<UDRE0)))// wait until transmit buffer is clear
     1ca:	e0 ec       	ldi	r30, 0xC0	; 192
     1cc:	f0 e0       	ldi	r31, 0x00	; 0
		{
		}
		UDR0 = *data; // load character into transmit buffer
     1ce:	c6 ec       	ldi	r28, 0xC6	; 198
     1d0:	d0 e0       	ldi	r29, 0x00	; 0

void USART_tx_string(char *data)// transmit value function
{
	while ((*data != '\0'))// loop to send each character over the serial connection
	{
		while (!(UCSR0A & (1<<UDRE0)))// wait until transmit buffer is clear
     1d2:	90 81       	ld	r25, Z
     1d4:	95 ff       	sbrs	r25, 5
     1d6:	fd cf       	rjmp	.-6      	; 0x1d2 <USART_tx_string+0x18>
		{
		}
		UDR0 = *data; // load character into transmit buffer
     1d8:	28 83       	st	Y, r18
	return;
}

void USART_tx_string(char *data)// transmit value function
{
	while ((*data != '\0'))// loop to send each character over the serial connection
     1da:	2d 91       	ld	r18, X+
     1dc:	21 11       	cpse	r18, r1
     1de:	f9 cf       	rjmp	.-14     	; 0x1d2 <USART_tx_string+0x18>
		{
		}
		UDR0 = *data; // load character into transmit buffer
		data++; // go to next character
	}
     1e0:	df 91       	pop	r29
     1e2:	cf 91       	pop	r28
     1e4:	08 95       	ret

000001e6 <main>:
// Connect to Thinkspeak: AT+CIPSTART= "TCP","%s(IP)" , 80 *Add \ in front of " for it to be read properly 
// Send data: AT+CIPSEND=(string.length())
// Data string to send: "GET /update?api_key=%s&field1=(sensor value)\r\n\r\n",APIKEY,Sensor)

int main(void)
{
     1e6:	cf 93       	push	r28
     1e8:	df 93       	push	r29
     1ea:	cd b7       	in	r28, 0x3d	; 61
     1ec:	de b7       	in	r29, 0x3e	; 62
     1ee:	a0 97       	sbiw	r28, 0x20	; 32
     1f0:	0f b6       	in	r0, 0x3f	; 63
     1f2:	f8 94       	cli
     1f4:	de bf       	out	0x3e, r29	; 62
     1f6:	0f be       	out	0x3f, r0	; 63
     1f8:	cd bf       	out	0x3d, r28	; 61
	uint8_t ret; 
	int16_t accel_buff[3];// buffer to hold acceleration raw data
	int16_t gyro_buff[3]; // buffer to hold gyroscope raw data
	double accelX, accelY, accelZ; // Holds calculated acceleration values 
	double gyroX, gyroY, gyroZ; // Holds calculated gyroscope values
	sei (); // enable global interrupts
     1fa:	78 94       	sei
	USARTstart(UBRR_115200); // initialize the USART port
     1fc:	88 e0       	ldi	r24, 0x08	; 8
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	cd df       	rcall	.-102    	; 0x19c <USARTstart>
	i2c_init();// initialize I2C
     202:	d4 d1       	rcall	.+936    	; 0x5ac <i2c_init>
//	Build command connect to Wifi and transmit
// 	strcat(WIFI_COMMAND,SSID);
// 	strcat(WIFI_COMMAND,PASSWORD);
//	USART_tx_string(WIFI_COMMAND);// Connect to Wifi

	DDRB |= (1<<5);
     204:	25 9a       	sbi	0x04, 5	; 4
		
	//initialize & test MPU5060 availability
	ret = i2c_start(MPU6050_ADDRESS+I2C_WRITE);
     206:	80 ed       	ldi	r24, 0xD0	; 208
     208:	d7 d1       	rcall	.+942    	; 0x5b8 <i2c_start>
	if(~ret)
	{
  		PORTB |= (1<<5);
     20a:	2d 9a       	sbi	0x05, 5	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     20c:	2f ef       	ldi	r18, 0xFF	; 255
     20e:	31 ee       	ldi	r19, 0xE1	; 225
     210:	44 e0       	ldi	r20, 0x04	; 4
     212:	21 50       	subi	r18, 0x01	; 1
     214:	30 40       	sbci	r19, 0x00	; 0
     216:	40 40       	sbci	r20, 0x00	; 0
     218:	e1 f7       	brne	.-8      	; 0x212 <main+0x2c>
     21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0x36>
     21c:	00 00       	nop
  		_delay_ms(200);
  		PORTB &= ~(1<<5);
     21e:	2d 98       	cbi	0x05, 5	; 5
	}

	mpu6050_init();// Initialize MPU
     220:	65 d2       	rcall	.+1226   	; 0x6ec <mpu6050_init>
     222:	8a e0       	ldi	r24, 0x0A	; 10
     224:	90 e0       	ldi	r25, 0x00	; 0
     226:	ef ef       	ldi	r30, 0xFF	; 255
     228:	f9 e6       	ldi	r31, 0x69	; 105
     22a:	28 e1       	ldi	r18, 0x18	; 24
     22c:	e1 50       	subi	r30, 0x01	; 1
     22e:	f0 40       	sbci	r31, 0x00	; 0
     230:	20 40       	sbci	r18, 0x00	; 0
     232:	e1 f7       	brne	.-8      	; 0x22c <main+0x46>
     234:	00 c0       	rjmp	.+0      	; 0x236 <main+0x50>
     236:	00 00       	nop
     238:	01 97       	sbiw	r24, 0x01	; 1
	


	for (int b=0; b<10;b++) // Delay to give wifi time to connect and be ready
     23a:	a9 f7       	brne	.-22     	; 0x226 <main+0x40>
			dtostrf(gyroZ, 6, 3, GyroZout);
			memmove(GyroZout, GyroZout+1,sizeof(GyroZout));
		}
		
		// Build Data string to send to cloud
		snprintf(DATA_STR, sizeof(DATA_STR),"GET /update?api_key=U6KEQ2CNJNAK85WX&field1=%s&field2=%s&field3=%s&field4=%s&field5=%s&field6=%s\r\n", Xout, Yout, Zout, GyroXout, GyroYout, GyroZout);
     23c:	0f 2e       	mov	r0, r31
     23e:	fa e2       	ldi	r31, 0x2A	; 42
     240:	af 2e       	mov	r10, r31
     242:	f1 e0       	ldi	r31, 0x01	; 1
     244:	bf 2e       	mov	r11, r31
     246:	f0 2d       	mov	r31, r0
     248:	0f 2e       	mov	r0, r31
     24a:	f8 e7       	ldi	r31, 0x78	; 120
     24c:	8f 2e       	mov	r8, r31
     24e:	f0 2d       	mov	r31, r0
     250:	0f 2e       	mov	r0, r31
     252:	f8 ea       	ldi	r31, 0xA8	; 168
     254:	2f 2e       	mov	r2, r31
     256:	f1 e0       	ldi	r31, 0x01	; 1
     258:	3f 2e       	mov	r3, r31
     25a:	f0 2d       	mov	r31, r0
		while (DATA_STR[counter] != '\0') // Count how many characters in the output string
		{
			counter++;
		}
		// Build Command to Send the length of the string to follow
		snprintf(SEND_COMMAND, sizeof(SEND_COMMAND),"AT+CIPSEND=%d\r\n",counter);
     25c:	0f 2e       	mov	r0, r31
     25e:	fd e8       	ldi	r31, 0x8D	; 141
     260:	cf 2e       	mov	r12, r31
     262:	f1 e0       	ldi	r31, 0x01	; 1
     264:	df 2e       	mov	r13, r31
     266:	f0 2d       	mov	r31, r0
     268:	0f 2e       	mov	r0, r31
     26a:	f4 e1       	ldi	r31, 0x14	; 20
     26c:	9f 2e       	mov	r9, r31
     26e:	f0 2d       	mov	r31, r0
     270:	0f 2e       	mov	r0, r31
     272:	f8 e4       	ldi	r31, 0x48	; 72
     274:	ef 2e       	mov	r14, r31
     276:	f2 e0       	ldi	r31, 0x02	; 2
     278:	ff 2e       	mov	r15, r31
     27a:	f0 2d       	mov	r31, r0
		_delay_ms(1000);
		
	while (1) // infinite loop to transmit the sensor value over serial port
	{
		counter = 0;
		mpu6050_read_accel_ALL(accel_buff);// Read acceleration data
     27c:	ce 01       	movw	r24, r28
     27e:	01 96       	adiw	r24, 0x01	; 1
     280:	e1 d2       	rcall	.+1474   	; 0x844 <mpu6050_read_accel_ALL>
		mpu6050_read_gyro_ALL(gyro_buff);// Read gyroscopic data
     282:	ce 01       	movw	r24, r28
     284:	07 96       	adiw	r24, 0x07	; 7
     286:	7b d2       	rcall	.+1270   	; 0x77e <mpu6050_read_gyro_ALL>
			
		// acceleration (m/s^2)
		accelX = accel_buff[0]/16384.0; // Calculate Acceleration X-axis value
     288:	69 81       	ldd	r22, Y+1	; 0x01
     28a:	7a 81       	ldd	r23, Y+2	; 0x02
     28c:	07 2e       	mov	r0, r23
     28e:	00 0c       	add	r0, r0
     290:	88 0b       	sbc	r24, r24
     292:	99 0b       	sbc	r25, r25
     294:	78 d3       	rcall	.+1776   	; 0x986 <__floatsisf>
     296:	20 e0       	ldi	r18, 0x00	; 0
     298:	30 e0       	ldi	r19, 0x00	; 0
     29a:	40 e8       	ldi	r20, 0x80	; 128
     29c:	58 e3       	ldi	r21, 0x38	; 56
     29e:	23 d4       	rcall	.+2118   	; 0xae6 <__mulsf3>
     2a0:	6d 87       	std	Y+13, r22	; 0x0d
     2a2:	7e 87       	std	Y+14, r23	; 0x0e
     2a4:	8f 87       	std	Y+15, r24	; 0x0f
     2a6:	98 8b       	std	Y+16, r25	; 0x10
		accelY = accel_buff[1]/16384.0; // Calculate Acceleration Y-axis value
     2a8:	6b 81       	ldd	r22, Y+3	; 0x03
     2aa:	7c 81       	ldd	r23, Y+4	; 0x04
     2ac:	07 2e       	mov	r0, r23
     2ae:	00 0c       	add	r0, r0
     2b0:	88 0b       	sbc	r24, r24
     2b2:	99 0b       	sbc	r25, r25
     2b4:	68 d3       	rcall	.+1744   	; 0x986 <__floatsisf>
     2b6:	20 e0       	ldi	r18, 0x00	; 0
     2b8:	30 e0       	ldi	r19, 0x00	; 0
     2ba:	40 e8       	ldi	r20, 0x80	; 128
     2bc:	58 e3       	ldi	r21, 0x38	; 56
     2be:	13 d4       	rcall	.+2086   	; 0xae6 <__mulsf3>
     2c0:	2b 01       	movw	r4, r22
     2c2:	3c 01       	movw	r6, r24
		accelZ = accel_buff[2]/16384.0; // Calculate Acceleration Z-axis value
     2c4:	6d 81       	ldd	r22, Y+5	; 0x05
     2c6:	7e 81       	ldd	r23, Y+6	; 0x06
     2c8:	07 2e       	mov	r0, r23
     2ca:	00 0c       	add	r0, r0
     2cc:	88 0b       	sbc	r24, r24
     2ce:	99 0b       	sbc	r25, r25
     2d0:	5a d3       	rcall	.+1716   	; 0x986 <__floatsisf>
     2d2:	20 e0       	ldi	r18, 0x00	; 0
     2d4:	30 e0       	ldi	r19, 0x00	; 0
     2d6:	40 e8       	ldi	r20, 0x80	; 128
     2d8:	58 e3       	ldi	r21, 0x38	; 56
     2da:	05 d4       	rcall	.+2058   	; 0xae6 <__mulsf3>
     2dc:	69 8b       	std	Y+17, r22	; 0x11
     2de:	7a 8b       	std	Y+18, r23	; 0x12
     2e0:	8b 8b       	std	Y+19, r24	; 0x13
     2e2:	9c 8b       	std	Y+20, r25	; 0x14
		//
		gyroX = gyro_buff[0]/32.8; // Calculate Gyroscopic X-axis value
     2e4:	6f 81       	ldd	r22, Y+7	; 0x07
     2e6:	78 85       	ldd	r23, Y+8	; 0x08
     2e8:	07 2e       	mov	r0, r23
     2ea:	00 0c       	add	r0, r0
     2ec:	88 0b       	sbc	r24, r24
     2ee:	99 0b       	sbc	r25, r25
     2f0:	4a d3       	rcall	.+1684   	; 0x986 <__floatsisf>
     2f2:	23 e3       	ldi	r18, 0x33	; 51
     2f4:	33 e3       	ldi	r19, 0x33	; 51
     2f6:	43 e0       	ldi	r20, 0x03	; 3
     2f8:	52 e4       	ldi	r21, 0x42	; 66
     2fa:	db d2       	rcall	.+1462   	; 0x8b2 <__divsf3>
     2fc:	6d 8b       	std	Y+21, r22	; 0x15
     2fe:	7e 8b       	std	Y+22, r23	; 0x16
     300:	8f 8b       	std	Y+23, r24	; 0x17
     302:	98 8f       	std	Y+24, r25	; 0x18
		gyroY = gyro_buff[1]/32.8; // Calculate Gyroscopic Y-axis value
     304:	69 85       	ldd	r22, Y+9	; 0x09
     306:	7a 85       	ldd	r23, Y+10	; 0x0a
     308:	07 2e       	mov	r0, r23
     30a:	00 0c       	add	r0, r0
     30c:	88 0b       	sbc	r24, r24
     30e:	99 0b       	sbc	r25, r25
     310:	3a d3       	rcall	.+1652   	; 0x986 <__floatsisf>
     312:	23 e3       	ldi	r18, 0x33	; 51
     314:	33 e3       	ldi	r19, 0x33	; 51
     316:	43 e0       	ldi	r20, 0x03	; 3
     318:	52 e4       	ldi	r21, 0x42	; 66
     31a:	cb d2       	rcall	.+1430   	; 0x8b2 <__divsf3>
     31c:	69 8f       	std	Y+25, r22	; 0x19
     31e:	7a 8f       	std	Y+26, r23	; 0x1a
     320:	8b 8f       	std	Y+27, r24	; 0x1b
     322:	9c 8f       	std	Y+28, r25	; 0x1c
		gyroZ = gyro_buff[2]/32.8; // Calculate Gyroscopic Z-axis value
     324:	6b 85       	ldd	r22, Y+11	; 0x0b
     326:	7c 85       	ldd	r23, Y+12	; 0x0c
     328:	07 2e       	mov	r0, r23
     32a:	00 0c       	add	r0, r0
     32c:	88 0b       	sbc	r24, r24
     32e:	99 0b       	sbc	r25, r25
     330:	2a d3       	rcall	.+1620   	; 0x986 <__floatsisf>
     332:	23 e3       	ldi	r18, 0x33	; 51
     334:	33 e3       	ldi	r19, 0x33	; 51
     336:	43 e0       	ldi	r20, 0x03	; 3
     338:	52 e4       	ldi	r21, 0x42	; 66
     33a:	bb d2       	rcall	.+1398   	; 0x8b2 <__divsf3>
     33c:	6d 8f       	std	Y+29, r22	; 0x1d
     33e:	7e 8f       	std	Y+30, r23	; 0x1e
     340:	8f 8f       	std	Y+31, r24	; 0x1f
     342:	98 a3       	std	Y+32, r25	; 0x20
		
		//Convert Acceleration X,Y, and Z values to Strings
		if (accelX < 0)
     344:	20 e0       	ldi	r18, 0x00	; 0
     346:	30 e0       	ldi	r19, 0x00	; 0
     348:	a9 01       	movw	r20, r18
     34a:	6d 85       	ldd	r22, Y+13	; 0x0d
     34c:	7e 85       	ldd	r23, Y+14	; 0x0e
     34e:	8f 85       	ldd	r24, Y+15	; 0x0f
     350:	98 89       	ldd	r25, Y+16	; 0x10
     352:	ab d2       	rcall	.+1366   	; 0x8aa <__cmpsf2>
     354:	88 23       	and	r24, r24
     356:	54 f4       	brge	.+20     	; 0x36c <main+0x186>
			dtostrf(accelX, 6, 3, Xout);
     358:	00 e2       	ldi	r16, 0x20	; 32
     35a:	12 e0       	ldi	r17, 0x02	; 2
     35c:	23 e0       	ldi	r18, 0x03	; 3
     35e:	46 e0       	ldi	r20, 0x06	; 6
     360:	6d 85       	ldd	r22, Y+13	; 0x0d
     362:	7e 85       	ldd	r23, Y+14	; 0x0e
     364:	8f 85       	ldd	r24, Y+15	; 0x0f
     366:	98 89       	ldd	r25, Y+16	; 0x10
     368:	21 d4       	rcall	.+2114   	; 0xbac <dtostrf>
     36a:	0f c0       	rjmp	.+30     	; 0x38a <main+0x1a4>
		else
		{
			dtostrf(accelX, 6, 3, Xout);
     36c:	00 e2       	ldi	r16, 0x20	; 32
     36e:	12 e0       	ldi	r17, 0x02	; 2
     370:	23 e0       	ldi	r18, 0x03	; 3
     372:	46 e0       	ldi	r20, 0x06	; 6
     374:	6d 85       	ldd	r22, Y+13	; 0x0d
     376:	7e 85       	ldd	r23, Y+14	; 0x0e
     378:	8f 85       	ldd	r24, Y+15	; 0x0f
     37a:	98 89       	ldd	r25, Y+16	; 0x10
     37c:	17 d4       	rcall	.+2094   	; 0xbac <dtostrf>
			memmove(Xout, Xout+1,sizeof(Xout)); 
     37e:	4a e0       	ldi	r20, 0x0A	; 10
     380:	50 e0       	ldi	r21, 0x00	; 0
     382:	61 e2       	ldi	r22, 0x21	; 33
     384:	72 e0       	ldi	r23, 0x02	; 2
     386:	c8 01       	movw	r24, r16
     388:	30 d4       	rcall	.+2144   	; 0xbea <memmove>
		}
		if (accelY < 0)
     38a:	20 e0       	ldi	r18, 0x00	; 0
     38c:	30 e0       	ldi	r19, 0x00	; 0
     38e:	a9 01       	movw	r20, r18
     390:	c3 01       	movw	r24, r6
     392:	b2 01       	movw	r22, r4
     394:	8a d2       	rcall	.+1300   	; 0x8aa <__cmpsf2>
     396:	88 23       	and	r24, r24
     398:	44 f4       	brge	.+16     	; 0x3aa <main+0x1c4>
			dtostrf(accelY, 6, 3, Yout);
     39a:	0c e5       	ldi	r16, 0x5C	; 92
     39c:	12 e0       	ldi	r17, 0x02	; 2
     39e:	23 e0       	ldi	r18, 0x03	; 3
     3a0:	46 e0       	ldi	r20, 0x06	; 6
     3a2:	c3 01       	movw	r24, r6
     3a4:	b2 01       	movw	r22, r4
     3a6:	02 d4       	rcall	.+2052   	; 0xbac <dtostrf>
     3a8:	0d c0       	rjmp	.+26     	; 0x3c4 <main+0x1de>
		else
		{
			dtostrf(accelY, 6, 3, Yout);
     3aa:	0c e5       	ldi	r16, 0x5C	; 92
     3ac:	12 e0       	ldi	r17, 0x02	; 2
     3ae:	23 e0       	ldi	r18, 0x03	; 3
     3b0:	46 e0       	ldi	r20, 0x06	; 6
     3b2:	c3 01       	movw	r24, r6
     3b4:	b2 01       	movw	r22, r4
     3b6:	fa d3       	rcall	.+2036   	; 0xbac <dtostrf>
			memmove(Yout, Yout+1,sizeof(Yout));
     3b8:	4a e0       	ldi	r20, 0x0A	; 10
     3ba:	50 e0       	ldi	r21, 0x00	; 0
     3bc:	6d e5       	ldi	r22, 0x5D	; 93
     3be:	72 e0       	ldi	r23, 0x02	; 2
     3c0:	c8 01       	movw	r24, r16
     3c2:	13 d4       	rcall	.+2086   	; 0xbea <memmove>
		}
		if (accelZ < 0)
     3c4:	20 e0       	ldi	r18, 0x00	; 0
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	a9 01       	movw	r20, r18
     3ca:	69 89       	ldd	r22, Y+17	; 0x11
     3cc:	7a 89       	ldd	r23, Y+18	; 0x12
     3ce:	8b 89       	ldd	r24, Y+19	; 0x13
     3d0:	9c 89       	ldd	r25, Y+20	; 0x14
     3d2:	6b d2       	rcall	.+1238   	; 0x8aa <__cmpsf2>
     3d4:	88 23       	and	r24, r24
     3d6:	54 f4       	brge	.+20     	; 0x3ec <main+0x206>
			dtostrf(accelZ, 6, 3, Zout);
     3d8:	0e e3       	ldi	r16, 0x3E	; 62
     3da:	12 e0       	ldi	r17, 0x02	; 2
     3dc:	23 e0       	ldi	r18, 0x03	; 3
     3de:	46 e0       	ldi	r20, 0x06	; 6
     3e0:	69 89       	ldd	r22, Y+17	; 0x11
     3e2:	7a 89       	ldd	r23, Y+18	; 0x12
     3e4:	8b 89       	ldd	r24, Y+19	; 0x13
     3e6:	9c 89       	ldd	r25, Y+20	; 0x14
     3e8:	e1 d3       	rcall	.+1986   	; 0xbac <dtostrf>
     3ea:	0f c0       	rjmp	.+30     	; 0x40a <main+0x224>
		else
		{
			dtostrf(accelZ, 6, 3, Zout);
     3ec:	0e e3       	ldi	r16, 0x3E	; 62
     3ee:	12 e0       	ldi	r17, 0x02	; 2
     3f0:	23 e0       	ldi	r18, 0x03	; 3
     3f2:	46 e0       	ldi	r20, 0x06	; 6
     3f4:	69 89       	ldd	r22, Y+17	; 0x11
     3f6:	7a 89       	ldd	r23, Y+18	; 0x12
     3f8:	8b 89       	ldd	r24, Y+19	; 0x13
     3fa:	9c 89       	ldd	r25, Y+20	; 0x14
     3fc:	d7 d3       	rcall	.+1966   	; 0xbac <dtostrf>
			memmove(Zout, Zout+1,sizeof(Zout));
     3fe:	4a e0       	ldi	r20, 0x0A	; 10
     400:	50 e0       	ldi	r21, 0x00	; 0
     402:	6f e3       	ldi	r22, 0x3F	; 63
     404:	72 e0       	ldi	r23, 0x02	; 2
     406:	c8 01       	movw	r24, r16
     408:	f0 d3       	rcall	.+2016   	; 0xbea <memmove>
		}
		
		// Convert Gyroscopic X,Y, and Z values to strings		
		if (gyroX < 0)
     40a:	20 e0       	ldi	r18, 0x00	; 0
     40c:	30 e0       	ldi	r19, 0x00	; 0
     40e:	a9 01       	movw	r20, r18
     410:	6d 89       	ldd	r22, Y+21	; 0x15
     412:	7e 89       	ldd	r23, Y+22	; 0x16
     414:	8f 89       	ldd	r24, Y+23	; 0x17
     416:	98 8d       	ldd	r25, Y+24	; 0x18
     418:	48 d2       	rcall	.+1168   	; 0x8aa <__cmpsf2>
     41a:	88 23       	and	r24, r24
     41c:	54 f4       	brge	.+20     	; 0x432 <main+0x24c>
			dtostrf(gyroX, 6, 3, GyroXout);
     41e:	04 e3       	ldi	r16, 0x34	; 52
     420:	12 e0       	ldi	r17, 0x02	; 2
     422:	23 e0       	ldi	r18, 0x03	; 3
     424:	46 e0       	ldi	r20, 0x06	; 6
     426:	6d 89       	ldd	r22, Y+21	; 0x15
     428:	7e 89       	ldd	r23, Y+22	; 0x16
     42a:	8f 89       	ldd	r24, Y+23	; 0x17
     42c:	98 8d       	ldd	r25, Y+24	; 0x18
     42e:	be d3       	rcall	.+1916   	; 0xbac <dtostrf>
     430:	0f c0       	rjmp	.+30     	; 0x450 <main+0x26a>
		else
		{
			dtostrf(gyroX, 6, 3, GyroXout);
     432:	04 e3       	ldi	r16, 0x34	; 52
     434:	12 e0       	ldi	r17, 0x02	; 2
     436:	23 e0       	ldi	r18, 0x03	; 3
     438:	46 e0       	ldi	r20, 0x06	; 6
     43a:	6d 89       	ldd	r22, Y+21	; 0x15
     43c:	7e 89       	ldd	r23, Y+22	; 0x16
     43e:	8f 89       	ldd	r24, Y+23	; 0x17
     440:	98 8d       	ldd	r25, Y+24	; 0x18
     442:	b4 d3       	rcall	.+1896   	; 0xbac <dtostrf>
			memmove(GyroXout, GyroXout+1,sizeof(GyroXout));
     444:	4a e0       	ldi	r20, 0x0A	; 10
     446:	50 e0       	ldi	r21, 0x00	; 0
     448:	65 e3       	ldi	r22, 0x35	; 53
     44a:	72 e0       	ldi	r23, 0x02	; 2
     44c:	c8 01       	movw	r24, r16
     44e:	cd d3       	rcall	.+1946   	; 0xbea <memmove>
		}
		if (gyroY < 0)
     450:	20 e0       	ldi	r18, 0x00	; 0
     452:	30 e0       	ldi	r19, 0x00	; 0
     454:	a9 01       	movw	r20, r18
     456:	69 8d       	ldd	r22, Y+25	; 0x19
     458:	7a 8d       	ldd	r23, Y+26	; 0x1a
     45a:	8b 8d       	ldd	r24, Y+27	; 0x1b
     45c:	9c 8d       	ldd	r25, Y+28	; 0x1c
     45e:	25 d2       	rcall	.+1098   	; 0x8aa <__cmpsf2>
     460:	88 23       	and	r24, r24
     462:	54 f4       	brge	.+20     	; 0x478 <main+0x292>
		dtostrf(gyroY, 6, 3, GyroYout);
     464:	0e e9       	ldi	r16, 0x9E	; 158
     466:	11 e0       	ldi	r17, 0x01	; 1
     468:	23 e0       	ldi	r18, 0x03	; 3
     46a:	46 e0       	ldi	r20, 0x06	; 6
     46c:	69 8d       	ldd	r22, Y+25	; 0x19
     46e:	7a 8d       	ldd	r23, Y+26	; 0x1a
     470:	8b 8d       	ldd	r24, Y+27	; 0x1b
     472:	9c 8d       	ldd	r25, Y+28	; 0x1c
     474:	9b d3       	rcall	.+1846   	; 0xbac <dtostrf>
     476:	0f c0       	rjmp	.+30     	; 0x496 <main+0x2b0>
		else
		{
			dtostrf(gyroY, 6, 3, GyroYout);
     478:	0e e9       	ldi	r16, 0x9E	; 158
     47a:	11 e0       	ldi	r17, 0x01	; 1
     47c:	23 e0       	ldi	r18, 0x03	; 3
     47e:	46 e0       	ldi	r20, 0x06	; 6
     480:	69 8d       	ldd	r22, Y+25	; 0x19
     482:	7a 8d       	ldd	r23, Y+26	; 0x1a
     484:	8b 8d       	ldd	r24, Y+27	; 0x1b
     486:	9c 8d       	ldd	r25, Y+28	; 0x1c
     488:	91 d3       	rcall	.+1826   	; 0xbac <dtostrf>
			memmove(GyroYout, GyroYout+1,sizeof(GyroYout));
     48a:	4a e0       	ldi	r20, 0x0A	; 10
     48c:	50 e0       	ldi	r21, 0x00	; 0
     48e:	6f e9       	ldi	r22, 0x9F	; 159
     490:	71 e0       	ldi	r23, 0x01	; 1
     492:	c8 01       	movw	r24, r16
     494:	aa d3       	rcall	.+1876   	; 0xbea <memmove>
		}
		if (gyroZ < 0)
     496:	20 e0       	ldi	r18, 0x00	; 0
     498:	30 e0       	ldi	r19, 0x00	; 0
     49a:	a9 01       	movw	r20, r18
     49c:	6d 8d       	ldd	r22, Y+29	; 0x1d
     49e:	7e 8d       	ldd	r23, Y+30	; 0x1e
     4a0:	8f 8d       	ldd	r24, Y+31	; 0x1f
     4a2:	98 a1       	ldd	r25, Y+32	; 0x20
     4a4:	02 d2       	rcall	.+1028   	; 0x8aa <__cmpsf2>
     4a6:	88 23       	and	r24, r24
     4a8:	54 f4       	brge	.+20     	; 0x4be <main+0x2d8>
		dtostrf(gyroZ, 6, 3, GyroZout);
     4aa:	0a e2       	ldi	r16, 0x2A	; 42
     4ac:	12 e0       	ldi	r17, 0x02	; 2
     4ae:	23 e0       	ldi	r18, 0x03	; 3
     4b0:	46 e0       	ldi	r20, 0x06	; 6
     4b2:	6d 8d       	ldd	r22, Y+29	; 0x1d
     4b4:	7e 8d       	ldd	r23, Y+30	; 0x1e
     4b6:	8f 8d       	ldd	r24, Y+31	; 0x1f
     4b8:	98 a1       	ldd	r25, Y+32	; 0x20
     4ba:	78 d3       	rcall	.+1776   	; 0xbac <dtostrf>
     4bc:	0f c0       	rjmp	.+30     	; 0x4dc <main+0x2f6>
		else
		{
			dtostrf(gyroZ, 6, 3, GyroZout);
     4be:	0a e2       	ldi	r16, 0x2A	; 42
     4c0:	12 e0       	ldi	r17, 0x02	; 2
     4c2:	23 e0       	ldi	r18, 0x03	; 3
     4c4:	46 e0       	ldi	r20, 0x06	; 6
     4c6:	6d 8d       	ldd	r22, Y+29	; 0x1d
     4c8:	7e 8d       	ldd	r23, Y+30	; 0x1e
     4ca:	8f 8d       	ldd	r24, Y+31	; 0x1f
     4cc:	98 a1       	ldd	r25, Y+32	; 0x20
     4ce:	6e d3       	rcall	.+1756   	; 0xbac <dtostrf>
			memmove(GyroZout, GyroZout+1,sizeof(GyroZout));
     4d0:	4a e0       	ldi	r20, 0x0A	; 10
     4d2:	50 e0       	ldi	r21, 0x00	; 0
     4d4:	6b e2       	ldi	r22, 0x2B	; 43
     4d6:	72 e0       	ldi	r23, 0x02	; 2
     4d8:	c8 01       	movw	r24, r16
     4da:	87 d3       	rcall	.+1806   	; 0xbea <memmove>
		}
		
		// Build Data string to send to cloud
		snprintf(DATA_STR, sizeof(DATA_STR),"GET /update?api_key=U6KEQ2CNJNAK85WX&field1=%s&field2=%s&field3=%s&field4=%s&field5=%s&field6=%s\r\n", Xout, Yout, Zout, GyroXout, GyroYout, GyroZout);
     4dc:	8a e2       	ldi	r24, 0x2A	; 42
     4de:	92 e0       	ldi	r25, 0x02	; 2
     4e0:	9f 93       	push	r25
     4e2:	8f 93       	push	r24
     4e4:	8e e9       	ldi	r24, 0x9E	; 158
     4e6:	91 e0       	ldi	r25, 0x01	; 1
     4e8:	9f 93       	push	r25
     4ea:	8f 93       	push	r24
     4ec:	84 e3       	ldi	r24, 0x34	; 52
     4ee:	92 e0       	ldi	r25, 0x02	; 2
     4f0:	9f 93       	push	r25
     4f2:	8f 93       	push	r24
     4f4:	8e e3       	ldi	r24, 0x3E	; 62
     4f6:	92 e0       	ldi	r25, 0x02	; 2
     4f8:	9f 93       	push	r25
     4fa:	8f 93       	push	r24
     4fc:	8c e5       	ldi	r24, 0x5C	; 92
     4fe:	92 e0       	ldi	r25, 0x02	; 2
     500:	9f 93       	push	r25
     502:	8f 93       	push	r24
     504:	80 e2       	ldi	r24, 0x20	; 32
     506:	92 e0       	ldi	r25, 0x02	; 2
     508:	9f 93       	push	r25
     50a:	8f 93       	push	r24
     50c:	bf 92       	push	r11
     50e:	af 92       	push	r10
     510:	1f 92       	push	r1
     512:	8f 92       	push	r8
     514:	3f 92       	push	r3
     516:	2f 92       	push	r2
     518:	79 d3       	rcall	.+1778   	; 0xc0c <snprintf>
	
		while (DATA_STR[counter] != '\0') // Count how many characters in the output string
     51a:	0f b6       	in	r0, 0x3f	; 63
     51c:	f8 94       	cli
     51e:	de bf       	out	0x3e, r29	; 62
     520:	0f be       	out	0x3f, r0	; 63
     522:	cd bf       	out	0x3d, r28	; 61
     524:	f1 01       	movw	r30, r2
     526:	80 81       	ld	r24, Z
     528:	88 23       	and	r24, r24
     52a:	49 f0       	breq	.+18     	; 0x53e <main+0x358>
     52c:	e9 ea       	ldi	r30, 0xA9	; 169
     52e:	f1 e0       	ldi	r31, 0x01	; 1
     530:	80 e0       	ldi	r24, 0x00	; 0
     532:	90 e0       	ldi	r25, 0x00	; 0
		{
			counter++;
     534:	01 96       	adiw	r24, 0x01	; 1
		}
		
		// Build Data string to send to cloud
		snprintf(DATA_STR, sizeof(DATA_STR),"GET /update?api_key=U6KEQ2CNJNAK85WX&field1=%s&field2=%s&field3=%s&field4=%s&field5=%s&field6=%s\r\n", Xout, Yout, Zout, GyroXout, GyroYout, GyroZout);
	
		while (DATA_STR[counter] != '\0') // Count how many characters in the output string
     536:	21 91       	ld	r18, Z+
     538:	21 11       	cpse	r18, r1
     53a:	fc cf       	rjmp	.-8      	; 0x534 <main+0x34e>
     53c:	02 c0       	rjmp	.+4      	; 0x542 <main+0x35c>
	for (int b=0; b<10;b++) // Delay to give wifi time to connect and be ready
		_delay_ms(1000);
		
	while (1) // infinite loop to transmit the sensor value over serial port
	{
		counter = 0;
     53e:	80 e0       	ldi	r24, 0x00	; 0
     540:	90 e0       	ldi	r25, 0x00	; 0
		while (DATA_STR[counter] != '\0') // Count how many characters in the output string
		{
			counter++;
		}
		// Build Command to Send the length of the string to follow
		snprintf(SEND_COMMAND, sizeof(SEND_COMMAND),"AT+CIPSEND=%d\r\n",counter);
     542:	9f 93       	push	r25
     544:	8f 93       	push	r24
     546:	df 92       	push	r13
     548:	cf 92       	push	r12
     54a:	1f 92       	push	r1
     54c:	9f 92       	push	r9
     54e:	ff 92       	push	r15
     550:	ef 92       	push	r14
     552:	5c d3       	rcall	.+1720   	; 0xc0c <snprintf>

		USART_tx_string(CONNECT_COMMAND);// Connect to Thinkspeak.com
     554:	80 e0       	ldi	r24, 0x00	; 0
     556:	91 e0       	ldi	r25, 0x01	; 1
     558:	30 de       	rcall	.-928    	; 0x1ba <USART_tx_string>
     55a:	ff ef       	ldi	r31, 0xFF	; 255
     55c:	23 ec       	ldi	r18, 0xC3	; 195
     55e:	39 e0       	ldi	r19, 0x09	; 9
     560:	f1 50       	subi	r31, 0x01	; 1
     562:	20 40       	sbci	r18, 0x00	; 0
     564:	30 40       	sbci	r19, 0x00	; 0
     566:	e1 f7       	brne	.-8      	; 0x560 <main+0x37a>
     568:	00 c0       	rjmp	.+0      	; 0x56a <main+0x384>
     56a:	00 00       	nop
		_delay_ms(400);
		USART_tx_string(SEND_COMMAND);// Transmit command to send data
     56c:	c7 01       	movw	r24, r14
     56e:	25 de       	rcall	.-950    	; 0x1ba <USART_tx_string>
     570:	4f ef       	ldi	r20, 0xFF	; 255
     572:	80 e7       	ldi	r24, 0x70	; 112
     574:	92 e0       	ldi	r25, 0x02	; 2
     576:	41 50       	subi	r20, 0x01	; 1
     578:	80 40       	sbci	r24, 0x00	; 0
     57a:	90 40       	sbci	r25, 0x00	; 0
     57c:	e1 f7       	brne	.-8      	; 0x576 <main+0x390>
     57e:	00 c0       	rjmp	.+0      	; 0x580 <main+0x39a>
     580:	00 00       	nop
		_delay_ms(100);
		USART_tx_string(DATA_STR); // transmit data over serial connection
     582:	c1 01       	movw	r24, r2
     584:	1a de       	rcall	.-972    	; 0x1ba <USART_tx_string>
     586:	0f b6       	in	r0, 0x3f	; 63
     588:	f8 94       	cli
     58a:	de bf       	out	0x3e, r29	; 62
     58c:	0f be       	out	0x3f, r0	; 63
     58e:	cd bf       	out	0x3d, r28	; 61
     590:	80 e1       	ldi	r24, 0x10	; 16
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	ff ef       	ldi	r31, 0xFF	; 255
     596:	29 e6       	ldi	r18, 0x69	; 105
     598:	38 e1       	ldi	r19, 0x18	; 24
     59a:	f1 50       	subi	r31, 0x01	; 1
     59c:	20 40       	sbci	r18, 0x00	; 0
     59e:	30 40       	sbci	r19, 0x00	; 0
     5a0:	e1 f7       	brne	.-8      	; 0x59a <main+0x3b4>
     5a2:	00 c0       	rjmp	.+0      	; 0x5a4 <main+0x3be>
     5a4:	00 00       	nop
     5a6:	01 97       	sbiw	r24, 0x01	; 1
		for (int i = 0; i<16; i++)// Wait 15sec to upload next dataset
     5a8:	a9 f7       	brne	.-22     	; 0x594 <main+0x3ae>
     5aa:	68 ce       	rjmp	.-816    	; 0x27c <main+0x96>

000005ac <i2c_init>:
	TWCR = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
	while(!(TWCR & (1<<TWINT)));    

    return TWDR;

}/* i2c_readAck */
     5ac:	10 92 b9 00 	sts	0x00B9, r1
     5b0:	88 e4       	ldi	r24, 0x48	; 72
     5b2:	80 93 b8 00 	sts	0x00B8, r24
     5b6:	08 95       	ret

000005b8 <i2c_start>:
     5b8:	94 ea       	ldi	r25, 0xA4	; 164
     5ba:	90 93 bc 00 	sts	0x00BC, r25
     5be:	ec eb       	ldi	r30, 0xBC	; 188
     5c0:	f0 e0       	ldi	r31, 0x00	; 0
     5c2:	90 81       	ld	r25, Z
     5c4:	99 23       	and	r25, r25
     5c6:	ec f7       	brge	.-6      	; 0x5c2 <i2c_start+0xa>
     5c8:	90 91 b9 00 	lds	r25, 0x00B9
     5cc:	98 7f       	andi	r25, 0xF8	; 248
     5ce:	98 30       	cpi	r25, 0x08	; 8
     5d0:	11 f0       	breq	.+4      	; 0x5d6 <i2c_start+0x1e>
     5d2:	90 31       	cpi	r25, 0x10	; 16
     5d4:	a1 f4       	brne	.+40     	; 0x5fe <i2c_start+0x46>
     5d6:	80 93 bb 00 	sts	0x00BB, r24
     5da:	84 e8       	ldi	r24, 0x84	; 132
     5dc:	80 93 bc 00 	sts	0x00BC, r24
     5e0:	ec eb       	ldi	r30, 0xBC	; 188
     5e2:	f0 e0       	ldi	r31, 0x00	; 0
     5e4:	80 81       	ld	r24, Z
     5e6:	88 23       	and	r24, r24
     5e8:	ec f7       	brge	.-6      	; 0x5e4 <i2c_start+0x2c>
     5ea:	90 91 b9 00 	lds	r25, 0x00B9
     5ee:	98 7f       	andi	r25, 0xF8	; 248
     5f0:	98 31       	cpi	r25, 0x18	; 24
     5f2:	39 f0       	breq	.+14     	; 0x602 <i2c_start+0x4a>
     5f4:	81 e0       	ldi	r24, 0x01	; 1
     5f6:	90 34       	cpi	r25, 0x40	; 64
     5f8:	29 f4       	brne	.+10     	; 0x604 <i2c_start+0x4c>
     5fa:	80 e0       	ldi	r24, 0x00	; 0
     5fc:	08 95       	ret
     5fe:	81 e0       	ldi	r24, 0x01	; 1
     600:	08 95       	ret
     602:	80 e0       	ldi	r24, 0x00	; 0
     604:	08 95       	ret

00000606 <i2c_start_wait>:
     606:	cf 93       	push	r28
     608:	df 93       	push	r29
     60a:	ec eb       	ldi	r30, 0xBC	; 188
     60c:	f0 e0       	ldi	r31, 0x00	; 0
     60e:	24 ea       	ldi	r18, 0xA4	; 164
     610:	a9 eb       	ldi	r26, 0xB9	; 185
     612:	b0 e0       	ldi	r27, 0x00	; 0
     614:	cb eb       	ldi	r28, 0xBB	; 187
     616:	d0 e0       	ldi	r29, 0x00	; 0
     618:	34 e8       	ldi	r19, 0x84	; 132
     61a:	44 e9       	ldi	r20, 0x94	; 148
     61c:	20 83       	st	Z, r18
     61e:	90 81       	ld	r25, Z
     620:	99 23       	and	r25, r25
     622:	ec f7       	brge	.-6      	; 0x61e <i2c_start_wait+0x18>
     624:	9c 91       	ld	r25, X
     626:	98 7f       	andi	r25, 0xF8	; 248
     628:	98 30       	cpi	r25, 0x08	; 8
     62a:	11 f0       	breq	.+4      	; 0x630 <i2c_start_wait+0x2a>
     62c:	90 31       	cpi	r25, 0x10	; 16
     62e:	b1 f7       	brne	.-20     	; 0x61c <i2c_start_wait+0x16>
     630:	88 83       	st	Y, r24
     632:	30 83       	st	Z, r19
     634:	90 81       	ld	r25, Z
     636:	99 23       	and	r25, r25
     638:	ec f7       	brge	.-6      	; 0x634 <i2c_start_wait+0x2e>
     63a:	9c 91       	ld	r25, X
     63c:	98 7f       	andi	r25, 0xF8	; 248
     63e:	90 32       	cpi	r25, 0x20	; 32
     640:	11 f0       	breq	.+4      	; 0x646 <i2c_start_wait+0x40>
     642:	98 35       	cpi	r25, 0x58	; 88
     644:	29 f4       	brne	.+10     	; 0x650 <i2c_start_wait+0x4a>
     646:	40 83       	st	Z, r20
     648:	90 81       	ld	r25, Z
     64a:	94 fd       	sbrc	r25, 4
     64c:	fd cf       	rjmp	.-6      	; 0x648 <i2c_start_wait+0x42>
     64e:	e6 cf       	rjmp	.-52     	; 0x61c <i2c_start_wait+0x16>
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	08 95       	ret

00000656 <i2c_rep_start>:
     656:	b0 cf       	rjmp	.-160    	; 0x5b8 <i2c_start>
     658:	08 95       	ret

0000065a <i2c_stop>:
     65a:	84 e9       	ldi	r24, 0x94	; 148
     65c:	80 93 bc 00 	sts	0x00BC, r24
     660:	ec eb       	ldi	r30, 0xBC	; 188
     662:	f0 e0       	ldi	r31, 0x00	; 0
     664:	80 81       	ld	r24, Z
     666:	84 fd       	sbrc	r24, 4
     668:	fd cf       	rjmp	.-6      	; 0x664 <i2c_stop+0xa>
     66a:	08 95       	ret

0000066c <i2c_write>:
     66c:	80 93 bb 00 	sts	0x00BB, r24
     670:	84 e8       	ldi	r24, 0x84	; 132
     672:	80 93 bc 00 	sts	0x00BC, r24
     676:	ec eb       	ldi	r30, 0xBC	; 188
     678:	f0 e0       	ldi	r31, 0x00	; 0
     67a:	80 81       	ld	r24, Z
     67c:	88 23       	and	r24, r24
     67e:	ec f7       	brge	.-6      	; 0x67a <i2c_write+0xe>
     680:	90 91 b9 00 	lds	r25, 0x00B9
     684:	98 7f       	andi	r25, 0xF8	; 248
     686:	81 e0       	ldi	r24, 0x01	; 1
     688:	98 32       	cpi	r25, 0x28	; 40
     68a:	09 f4       	brne	.+2      	; 0x68e <i2c_write+0x22>
     68c:	80 e0       	ldi	r24, 0x00	; 0
     68e:	08 95       	ret

00000690 <i2c_readNak>:
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void)
{
	TWCR = (1<<TWINT) | (1<<TWEN);
     690:	84 e8       	ldi	r24, 0x84	; 132
     692:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
     696:	ec eb       	ldi	r30, 0xBC	; 188
     698:	f0 e0       	ldi	r31, 0x00	; 0
     69a:	80 81       	ld	r24, Z
     69c:	88 23       	and	r24, r24
     69e:	ec f7       	brge	.-6      	; 0x69a <i2c_readNak+0xa>
	
    return TWDR;
     6a0:	80 91 bb 00 	lds	r24, 0x00BB

}/* i2c_readNak */
     6a4:	08 95       	ret

000006a6 <i2c_read_byte>:




// read one byte from dev, stored in value, return 1 for error
void i2c_read_byte(uint8_t dev_addr, uint8_t reg_addr, uint8_t* data){
     6a6:	0f 93       	push	r16
     6a8:	1f 93       	push	r17
     6aa:	cf 93       	push	r28
     6ac:	df 93       	push	r29
     6ae:	c8 2f       	mov	r28, r24
     6b0:	d6 2f       	mov	r29, r22
     6b2:	8a 01       	movw	r16, r20

	i2c_start_wait(dev_addr+I2C_WRITE); 	//start i2c to write register address
     6b4:	a8 df       	rcall	.-176    	; 0x606 <i2c_start_wait>
	i2c_write(reg_addr);			//write address of register to read
     6b6:	8d 2f       	mov	r24, r29
     6b8:	d9 df       	rcall	.-78     	; 0x66c <i2c_write>
	i2c_rep_start(dev_addr+I2C_READ);	//restart i2c to start reading
     6ba:	81 e0       	ldi	r24, 0x01	; 1
     6bc:	8c 0f       	add	r24, r28
     6be:	cb df       	rcall	.-106    	; 0x656 <i2c_rep_start>
	*data = i2c_readNak();
     6c0:	e7 df       	rcall	.-50     	; 0x690 <i2c_readNak>
     6c2:	f8 01       	movw	r30, r16
     6c4:	80 83       	st	Z, r24
        i2c_stop();
     6c6:	c9 df       	rcall	.-110    	; 0x65a <i2c_stop>

}
     6c8:	df 91       	pop	r29
     6ca:	cf 91       	pop	r28
     6cc:	1f 91       	pop	r17
     6ce:	0f 91       	pop	r16
     6d0:	08 95       	ret

000006d2 <i2c_write_byte>:



// write one byte to dev
void i2c_write_byte(uint8_t dev_addr, uint8_t reg_addr, uint8_t data){
     6d2:	cf 93       	push	r28
     6d4:	df 93       	push	r29
     6d6:	d6 2f       	mov	r29, r22
     6d8:	c4 2f       	mov	r28, r20
	
	i2c_start_wait(dev_addr+I2C_WRITE);
     6da:	95 df       	rcall	.-214    	; 0x606 <i2c_start_wait>
 	i2c_write(reg_addr);                     
     6dc:	8d 2f       	mov	r24, r29
     6de:	c6 df       	rcall	.-116    	; 0x66c <i2c_write>
        i2c_write(data);
     6e0:	8c 2f       	mov	r24, r28
     6e2:	c4 df       	rcall	.-120    	; 0x66c <i2c_write>
	i2c_stop();
     6e4:	ba df       	rcall	.-140    	; 0x65a <i2c_stop>

}
     6e6:	df 91       	pop	r29
     6e8:	cf 91       	pop	r28
     6ea:	08 95       	ret

000006ec <mpu6050_init>:

//configure important settings in mpu6050
//subject to change app(ilcation) by app
void mpu6050_init(void){
	
	i2c_write_byte(MPU6050_ADDRESS, MPU6050_RA_PWR_MGMT_1, 0x00); //exit sleep mode
     6ec:	40 e0       	ldi	r20, 0x00	; 0
     6ee:	6b e6       	ldi	r22, 0x6B	; 107
     6f0:	80 ed       	ldi	r24, 0xD0	; 208
     6f2:	ef df       	rcall	.-34     	; 0x6d2 <i2c_write_byte>
	i2c_write_byte(MPU6050_ADDRESS, MPU6050_RA_CONFIG, 0x01); // LPF, bandwidth = 184(accel) and 188(gyro)
     6f4:	41 e0       	ldi	r20, 0x01	; 1
     6f6:	6a e1       	ldi	r22, 0x1A	; 26
     6f8:	80 ed       	ldi	r24, 0xD0	; 208
     6fa:	eb df       	rcall	.-42     	; 0x6d2 <i2c_write_byte>
	i2c_write_byte(MPU6050_ADDRESS, MPU6050_RA_GYRO_CONFIG, 1<<4); // gyro ADC scale: 1000 deg/s
     6fc:	40 e1       	ldi	r20, 0x10	; 16
     6fe:	6b e1       	ldi	r22, 0x1B	; 27
     700:	80 ed       	ldi	r24, 0xD0	; 208
     702:	e7 df       	rcall	.-50     	; 0x6d2 <i2c_write_byte>
	i2c_write_byte(MPU6050_ADDRESS, MPU6050_RA_ACCEL_CONFIG, 0x00); //accel ADC scale: 2 g
     704:	40 e0       	ldi	r20, 0x00	; 0
     706:	6c e1       	ldi	r22, 0x1C	; 28
     708:	80 ed       	ldi	r24, 0xD0	; 208
     70a:	e3 df       	rcall	.-58     	; 0x6d2 <i2c_write_byte>
	
	i2c_write_byte(MPU6050_ADDRESS, MPU6050_RA_INT_ENABLE, 0x00); //enable data ready interrupt
     70c:	40 e0       	ldi	r20, 0x00	; 0
     70e:	68 e3       	ldi	r22, 0x38	; 56
     710:	80 ed       	ldi	r24, 0xD0	; 208
     712:	df df       	rcall	.-66     	; 0x6d2 <i2c_write_byte>
	i2c_write_byte(MPU6050_ADDRESS, MPU6050_RA_SIGNAL_PATH_RESET, 0x00); //don't reset signal path
     714:	40 e0       	ldi	r20, 0x00	; 0
     716:	68 e6       	ldi	r22, 0x68	; 104
     718:	80 ed       	ldi	r24, 0xD0	; 208
     71a:	db cf       	rjmp	.-74     	; 0x6d2 <i2c_write_byte>
     71c:	08 95       	ret

0000071e <mpu6050_read_gyro_X>:

	
//read gyro X, high- & low-8-bits separated, high first
//buff must have at least 2 available places
//no error handling for too small buff
void mpu6050_read_gyro_X(uint8_t * buff){
     71e:	cf 93       	push	r28
     720:	df 93       	push	r29
     722:	ec 01       	movw	r28, r24

	i2c_read_byte(MPU6050_ADDRESS, MPU6050_RA_GYRO_XOUT_H, buff);
     724:	ac 01       	movw	r20, r24
     726:	63 e4       	ldi	r22, 0x43	; 67
     728:	80 ed       	ldi	r24, 0xD0	; 208
     72a:	bd df       	rcall	.-134    	; 0x6a6 <i2c_read_byte>
	i2c_read_byte(MPU6050_ADDRESS, MPU6050_RA_GYRO_XOUT_L, buff+1);
     72c:	ae 01       	movw	r20, r28
     72e:	4f 5f       	subi	r20, 0xFF	; 255
     730:	5f 4f       	sbci	r21, 0xFF	; 255
     732:	64 e4       	ldi	r22, 0x44	; 68
     734:	80 ed       	ldi	r24, 0xD0	; 208
     736:	b7 df       	rcall	.-146    	; 0x6a6 <i2c_read_byte>
}
     738:	df 91       	pop	r29
     73a:	cf 91       	pop	r28
     73c:	08 95       	ret

0000073e <mpu6050_read_gyro_Y>:

//read gyro Y, high- & low-8-bits separated, high first
//buff must have at least 2 available places
//no error handling for too small buff
void mpu6050_read_gyro_Y(uint8_t * buff){
     73e:	cf 93       	push	r28
     740:	df 93       	push	r29
     742:	ec 01       	movw	r28, r24

	i2c_read_byte(MPU6050_ADDRESS, MPU6050_RA_GYRO_YOUT_H, buff);
     744:	ac 01       	movw	r20, r24
     746:	65 e4       	ldi	r22, 0x45	; 69
     748:	80 ed       	ldi	r24, 0xD0	; 208
     74a:	ad df       	rcall	.-166    	; 0x6a6 <i2c_read_byte>
	i2c_read_byte(MPU6050_ADDRESS, MPU6050_RA_GYRO_YOUT_L, buff+1);
     74c:	ae 01       	movw	r20, r28
     74e:	4f 5f       	subi	r20, 0xFF	; 255
     750:	5f 4f       	sbci	r21, 0xFF	; 255
     752:	66 e4       	ldi	r22, 0x46	; 70
     754:	80 ed       	ldi	r24, 0xD0	; 208
     756:	a7 df       	rcall	.-178    	; 0x6a6 <i2c_read_byte>
}
     758:	df 91       	pop	r29
     75a:	cf 91       	pop	r28
     75c:	08 95       	ret

0000075e <mpu6050_read_gyro_Z>:

//read gyro Z, high- & low-8-bits separated, high first
//buff must have at least 2 available places
//no error handling for too small buff
void mpu6050_read_gyro_Z(uint8_t * buff){
     75e:	cf 93       	push	r28
     760:	df 93       	push	r29
     762:	ec 01       	movw	r28, r24

	i2c_read_byte(MPU6050_ADDRESS, MPU6050_RA_GYRO_ZOUT_H, buff);
     764:	ac 01       	movw	r20, r24
     766:	67 e4       	ldi	r22, 0x47	; 71
     768:	80 ed       	ldi	r24, 0xD0	; 208
     76a:	9d df       	rcall	.-198    	; 0x6a6 <i2c_read_byte>
	i2c_read_byte(MPU6050_ADDRESS, MPU6050_RA_GYRO_ZOUT_L, buff+1);
     76c:	ae 01       	movw	r20, r28
     76e:	4f 5f       	subi	r20, 0xFF	; 255
     770:	5f 4f       	sbci	r21, 0xFF	; 255
     772:	68 e4       	ldi	r22, 0x48	; 72
     774:	80 ed       	ldi	r24, 0xD0	; 208
     776:	97 df       	rcall	.-210    	; 0x6a6 <i2c_read_byte>
}
     778:	df 91       	pop	r29
     77a:	cf 91       	pop	r28
     77c:	08 95       	ret

0000077e <mpu6050_read_gyro_ALL>:

// read gyro X, Y, Z all at once, high- & low-8-bits combined
// return int16_t (signed) in buff
//buff must have at least 3 available places
//no error handling for too small buff
void mpu6050_read_gyro_ALL(int16_t * buff){
     77e:	0f 93       	push	r16
     780:	1f 93       	push	r17
     782:	cf 93       	push	r28
     784:	df 93       	push	r29
     786:	00 d0       	rcall	.+0      	; 0x788 <mpu6050_read_gyro_ALL+0xa>
     788:	cd b7       	in	r28, 0x3d	; 61
     78a:	de b7       	in	r29, 0x3e	; 62
     78c:	8c 01       	movw	r16, r24
	
	uint8_t tmp[2];

	mpu6050_read_gyro_X(tmp);
     78e:	ce 01       	movw	r24, r28
     790:	01 96       	adiw	r24, 0x01	; 1
     792:	c5 df       	rcall	.-118    	; 0x71e <mpu6050_read_gyro_X>
	buff[0] = (tmp[0]<<8)|(tmp[1]);
     794:	89 81       	ldd	r24, Y+1	; 0x01
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	98 2f       	mov	r25, r24
     79a:	88 27       	eor	r24, r24
     79c:	2a 81       	ldd	r18, Y+2	; 0x02
     79e:	82 2b       	or	r24, r18
     7a0:	f8 01       	movw	r30, r16
     7a2:	91 83       	std	Z+1, r25	; 0x01
     7a4:	80 83       	st	Z, r24
	mpu6050_read_gyro_Y(tmp);
     7a6:	ce 01       	movw	r24, r28
     7a8:	01 96       	adiw	r24, 0x01	; 1
     7aa:	c9 df       	rcall	.-110    	; 0x73e <mpu6050_read_gyro_Y>
	buff[1] = (tmp[0]<<8)|(tmp[1]);
     7ac:	89 81       	ldd	r24, Y+1	; 0x01
     7ae:	90 e0       	ldi	r25, 0x00	; 0
     7b0:	98 2f       	mov	r25, r24
     7b2:	88 27       	eor	r24, r24
     7b4:	2a 81       	ldd	r18, Y+2	; 0x02
     7b6:	82 2b       	or	r24, r18
     7b8:	f8 01       	movw	r30, r16
     7ba:	93 83       	std	Z+3, r25	; 0x03
     7bc:	82 83       	std	Z+2, r24	; 0x02
	mpu6050_read_gyro_Z(tmp);
     7be:	ce 01       	movw	r24, r28
     7c0:	01 96       	adiw	r24, 0x01	; 1
     7c2:	cd df       	rcall	.-102    	; 0x75e <mpu6050_read_gyro_Z>
	buff[2] = (tmp[0]<<8)|(tmp[1]);
     7c4:	29 81       	ldd	r18, Y+1	; 0x01
     7c6:	30 e0       	ldi	r19, 0x00	; 0
     7c8:	32 2f       	mov	r19, r18
     7ca:	22 27       	eor	r18, r18
     7cc:	8a 81       	ldd	r24, Y+2	; 0x02
     7ce:	28 2b       	or	r18, r24
     7d0:	f8 01       	movw	r30, r16
     7d2:	35 83       	std	Z+5, r19	; 0x05
     7d4:	24 83       	std	Z+4, r18	; 0x04
}
     7d6:	0f 90       	pop	r0
     7d8:	0f 90       	pop	r0
     7da:	df 91       	pop	r29
     7dc:	cf 91       	pop	r28
     7de:	1f 91       	pop	r17
     7e0:	0f 91       	pop	r16
     7e2:	08 95       	ret

000007e4 <mpu6050_read_accel_X>:


//read accel X, high- & low-8-bits separated, high first
//buff must have at least 2 available places
//no error handling for too small buff
void mpu6050_read_accel_X(uint8_t * buff){
     7e4:	cf 93       	push	r28
     7e6:	df 93       	push	r29
     7e8:	ec 01       	movw	r28, r24

	i2c_read_byte(MPU6050_ADDRESS, MPU6050_RA_ACCEL_XOUT_H, buff);
     7ea:	ac 01       	movw	r20, r24
     7ec:	6b e3       	ldi	r22, 0x3B	; 59
     7ee:	80 ed       	ldi	r24, 0xD0	; 208
     7f0:	5a df       	rcall	.-332    	; 0x6a6 <i2c_read_byte>
	i2c_read_byte(MPU6050_ADDRESS, MPU6050_RA_ACCEL_XOUT_L, buff+1);
     7f2:	ae 01       	movw	r20, r28
     7f4:	4f 5f       	subi	r20, 0xFF	; 255
     7f6:	5f 4f       	sbci	r21, 0xFF	; 255
     7f8:	6c e3       	ldi	r22, 0x3C	; 60
     7fa:	80 ed       	ldi	r24, 0xD0	; 208
     7fc:	54 df       	rcall	.-344    	; 0x6a6 <i2c_read_byte>
}
     7fe:	df 91       	pop	r29
     800:	cf 91       	pop	r28
     802:	08 95       	ret

00000804 <mpu6050_read_accel_Y>:

//read accel Y, high- & low-8-bits separated, high first
//buff must have at least 2 available places
//no error handling for too small buff
void mpu6050_read_accel_Y(uint8_t * buff){
     804:	cf 93       	push	r28
     806:	df 93       	push	r29
     808:	ec 01       	movw	r28, r24

	i2c_read_byte(MPU6050_ADDRESS, MPU6050_RA_ACCEL_YOUT_H, buff);
     80a:	ac 01       	movw	r20, r24
     80c:	6d e3       	ldi	r22, 0x3D	; 61
     80e:	80 ed       	ldi	r24, 0xD0	; 208
     810:	4a df       	rcall	.-364    	; 0x6a6 <i2c_read_byte>
	i2c_read_byte(MPU6050_ADDRESS, MPU6050_RA_ACCEL_YOUT_L, buff+1);
     812:	ae 01       	movw	r20, r28
     814:	4f 5f       	subi	r20, 0xFF	; 255
     816:	5f 4f       	sbci	r21, 0xFF	; 255
     818:	6e e3       	ldi	r22, 0x3E	; 62
     81a:	80 ed       	ldi	r24, 0xD0	; 208
     81c:	44 df       	rcall	.-376    	; 0x6a6 <i2c_read_byte>
}
     81e:	df 91       	pop	r29
     820:	cf 91       	pop	r28
     822:	08 95       	ret

00000824 <mpu6050_read_accel_Z>:

//read accel Z, high- & low-8-bits separated, high first
//buff must have at least 2 available places
//no error handling for too small buff
void mpu6050_read_accel_Z(uint8_t * buff){
     824:	cf 93       	push	r28
     826:	df 93       	push	r29
     828:	ec 01       	movw	r28, r24

	i2c_read_byte(MPU6050_ADDRESS, MPU6050_RA_ACCEL_ZOUT_H, buff);
     82a:	ac 01       	movw	r20, r24
     82c:	6f e3       	ldi	r22, 0x3F	; 63
     82e:	80 ed       	ldi	r24, 0xD0	; 208
     830:	3a df       	rcall	.-396    	; 0x6a6 <i2c_read_byte>
	i2c_read_byte(MPU6050_ADDRESS, MPU6050_RA_ACCEL_ZOUT_L, buff+1);
     832:	ae 01       	movw	r20, r28
     834:	4f 5f       	subi	r20, 0xFF	; 255
     836:	5f 4f       	sbci	r21, 0xFF	; 255
     838:	60 e4       	ldi	r22, 0x40	; 64
     83a:	80 ed       	ldi	r24, 0xD0	; 208
     83c:	34 df       	rcall	.-408    	; 0x6a6 <i2c_read_byte>
}
     83e:	df 91       	pop	r29
     840:	cf 91       	pop	r28
     842:	08 95       	ret

00000844 <mpu6050_read_accel_ALL>:

// read accel X, Y, Z all at once, high- & low-8-bits combined
// return int16_t (signed) in buff
//buff must have at least 3 available places
//no error handling for too small buff
void mpu6050_read_accel_ALL(int16_t * buff){
     844:	0f 93       	push	r16
     846:	1f 93       	push	r17
     848:	cf 93       	push	r28
     84a:	df 93       	push	r29
     84c:	00 d0       	rcall	.+0      	; 0x84e <mpu6050_read_accel_ALL+0xa>
     84e:	cd b7       	in	r28, 0x3d	; 61
     850:	de b7       	in	r29, 0x3e	; 62
     852:	8c 01       	movw	r16, r24
	
	uint8_t tmp[2];

	mpu6050_read_accel_X(tmp);
     854:	ce 01       	movw	r24, r28
     856:	01 96       	adiw	r24, 0x01	; 1
     858:	c5 df       	rcall	.-118    	; 0x7e4 <mpu6050_read_accel_X>
	buff[0] = (tmp[0]<<8)|(tmp[1]);
     85a:	89 81       	ldd	r24, Y+1	; 0x01
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	98 2f       	mov	r25, r24
     860:	88 27       	eor	r24, r24
     862:	2a 81       	ldd	r18, Y+2	; 0x02
     864:	82 2b       	or	r24, r18
     866:	f8 01       	movw	r30, r16
     868:	91 83       	std	Z+1, r25	; 0x01
     86a:	80 83       	st	Z, r24
	mpu6050_read_accel_Y(tmp);
     86c:	ce 01       	movw	r24, r28
     86e:	01 96       	adiw	r24, 0x01	; 1
     870:	c9 df       	rcall	.-110    	; 0x804 <mpu6050_read_accel_Y>
	buff[1] = (tmp[0]<<8)|(tmp[1]);
     872:	89 81       	ldd	r24, Y+1	; 0x01
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	98 2f       	mov	r25, r24
     878:	88 27       	eor	r24, r24
     87a:	2a 81       	ldd	r18, Y+2	; 0x02
     87c:	82 2b       	or	r24, r18
     87e:	f8 01       	movw	r30, r16
     880:	93 83       	std	Z+3, r25	; 0x03
     882:	82 83       	std	Z+2, r24	; 0x02
	mpu6050_read_accel_Z(tmp);
     884:	ce 01       	movw	r24, r28
     886:	01 96       	adiw	r24, 0x01	; 1
     888:	cd df       	rcall	.-102    	; 0x824 <mpu6050_read_accel_Z>
	buff[2] = (tmp[0]<<8)|(tmp[1]);
     88a:	29 81       	ldd	r18, Y+1	; 0x01
     88c:	30 e0       	ldi	r19, 0x00	; 0
     88e:	32 2f       	mov	r19, r18
     890:	22 27       	eor	r18, r18
     892:	8a 81       	ldd	r24, Y+2	; 0x02
     894:	28 2b       	or	r18, r24
     896:	f8 01       	movw	r30, r16
     898:	35 83       	std	Z+5, r19	; 0x05
     89a:	24 83       	std	Z+4, r18	; 0x04
}
     89c:	0f 90       	pop	r0
     89e:	0f 90       	pop	r0
     8a0:	df 91       	pop	r29
     8a2:	cf 91       	pop	r28
     8a4:	1f 91       	pop	r17
     8a6:	0f 91       	pop	r16
     8a8:	08 95       	ret

000008aa <__cmpsf2>:
     8aa:	a8 d0       	rcall	.+336    	; 0x9fc <__fp_cmp>
     8ac:	08 f4       	brcc	.+2      	; 0x8b0 <__cmpsf2+0x6>
     8ae:	81 e0       	ldi	r24, 0x01	; 1
     8b0:	08 95       	ret

000008b2 <__divsf3>:
     8b2:	0c d0       	rcall	.+24     	; 0x8cc <__divsf3x>
     8b4:	de c0       	rjmp	.+444    	; 0xa72 <__fp_round>
     8b6:	d6 d0       	rcall	.+428    	; 0xa64 <__fp_pscB>
     8b8:	40 f0       	brcs	.+16     	; 0x8ca <__divsf3+0x18>
     8ba:	cd d0       	rcall	.+410    	; 0xa56 <__fp_pscA>
     8bc:	30 f0       	brcs	.+12     	; 0x8ca <__divsf3+0x18>
     8be:	21 f4       	brne	.+8      	; 0x8c8 <__divsf3+0x16>
     8c0:	5f 3f       	cpi	r21, 0xFF	; 255
     8c2:	19 f0       	breq	.+6      	; 0x8ca <__divsf3+0x18>
     8c4:	bf c0       	rjmp	.+382    	; 0xa44 <__fp_inf>
     8c6:	51 11       	cpse	r21, r1
     8c8:	08 c1       	rjmp	.+528    	; 0xada <__fp_szero>
     8ca:	c2 c0       	rjmp	.+388    	; 0xa50 <__fp_nan>

000008cc <__divsf3x>:
     8cc:	e3 d0       	rcall	.+454    	; 0xa94 <__fp_split3>
     8ce:	98 f3       	brcs	.-26     	; 0x8b6 <__divsf3+0x4>

000008d0 <__divsf3_pse>:
     8d0:	99 23       	and	r25, r25
     8d2:	c9 f3       	breq	.-14     	; 0x8c6 <__divsf3+0x14>
     8d4:	55 23       	and	r21, r21
     8d6:	b1 f3       	breq	.-20     	; 0x8c4 <__divsf3+0x12>
     8d8:	95 1b       	sub	r25, r21
     8da:	55 0b       	sbc	r21, r21
     8dc:	bb 27       	eor	r27, r27
     8de:	aa 27       	eor	r26, r26
     8e0:	62 17       	cp	r22, r18
     8e2:	73 07       	cpc	r23, r19
     8e4:	84 07       	cpc	r24, r20
     8e6:	38 f0       	brcs	.+14     	; 0x8f6 <__divsf3_pse+0x26>
     8e8:	9f 5f       	subi	r25, 0xFF	; 255
     8ea:	5f 4f       	sbci	r21, 0xFF	; 255
     8ec:	22 0f       	add	r18, r18
     8ee:	33 1f       	adc	r19, r19
     8f0:	44 1f       	adc	r20, r20
     8f2:	aa 1f       	adc	r26, r26
     8f4:	a9 f3       	breq	.-22     	; 0x8e0 <__divsf3_pse+0x10>
     8f6:	33 d0       	rcall	.+102    	; 0x95e <__stack+0x5f>
     8f8:	0e 2e       	mov	r0, r30
     8fa:	3a f0       	brmi	.+14     	; 0x90a <__stack+0xb>
     8fc:	e0 e8       	ldi	r30, 0x80	; 128
     8fe:	30 d0       	rcall	.+96     	; 0x960 <__stack+0x61>
     900:	91 50       	subi	r25, 0x01	; 1
     902:	50 40       	sbci	r21, 0x00	; 0
     904:	e6 95       	lsr	r30
     906:	00 1c       	adc	r0, r0
     908:	ca f7       	brpl	.-14     	; 0x8fc <__divsf3_pse+0x2c>
     90a:	29 d0       	rcall	.+82     	; 0x95e <__stack+0x5f>
     90c:	fe 2f       	mov	r31, r30
     90e:	27 d0       	rcall	.+78     	; 0x95e <__stack+0x5f>
     910:	66 0f       	add	r22, r22
     912:	77 1f       	adc	r23, r23
     914:	88 1f       	adc	r24, r24
     916:	bb 1f       	adc	r27, r27
     918:	26 17       	cp	r18, r22
     91a:	37 07       	cpc	r19, r23
     91c:	48 07       	cpc	r20, r24
     91e:	ab 07       	cpc	r26, r27
     920:	b0 e8       	ldi	r27, 0x80	; 128
     922:	09 f0       	breq	.+2      	; 0x926 <__stack+0x27>
     924:	bb 0b       	sbc	r27, r27
     926:	80 2d       	mov	r24, r0
     928:	bf 01       	movw	r22, r30
     92a:	ff 27       	eor	r31, r31
     92c:	93 58       	subi	r25, 0x83	; 131
     92e:	5f 4f       	sbci	r21, 0xFF	; 255
     930:	2a f0       	brmi	.+10     	; 0x93c <__stack+0x3d>
     932:	9e 3f       	cpi	r25, 0xFE	; 254
     934:	51 05       	cpc	r21, r1
     936:	68 f0       	brcs	.+26     	; 0x952 <__stack+0x53>
     938:	85 c0       	rjmp	.+266    	; 0xa44 <__fp_inf>
     93a:	cf c0       	rjmp	.+414    	; 0xada <__fp_szero>
     93c:	5f 3f       	cpi	r21, 0xFF	; 255
     93e:	ec f3       	brlt	.-6      	; 0x93a <__stack+0x3b>
     940:	98 3e       	cpi	r25, 0xE8	; 232
     942:	dc f3       	brlt	.-10     	; 0x93a <__stack+0x3b>
     944:	86 95       	lsr	r24
     946:	77 95       	ror	r23
     948:	67 95       	ror	r22
     94a:	b7 95       	ror	r27
     94c:	f7 95       	ror	r31
     94e:	9f 5f       	subi	r25, 0xFF	; 255
     950:	c9 f7       	brne	.-14     	; 0x944 <__stack+0x45>
     952:	88 0f       	add	r24, r24
     954:	91 1d       	adc	r25, r1
     956:	96 95       	lsr	r25
     958:	87 95       	ror	r24
     95a:	97 f9       	bld	r25, 7
     95c:	08 95       	ret
     95e:	e1 e0       	ldi	r30, 0x01	; 1
     960:	66 0f       	add	r22, r22
     962:	77 1f       	adc	r23, r23
     964:	88 1f       	adc	r24, r24
     966:	bb 1f       	adc	r27, r27
     968:	62 17       	cp	r22, r18
     96a:	73 07       	cpc	r23, r19
     96c:	84 07       	cpc	r24, r20
     96e:	ba 07       	cpc	r27, r26
     970:	20 f0       	brcs	.+8      	; 0x97a <__stack+0x7b>
     972:	62 1b       	sub	r22, r18
     974:	73 0b       	sbc	r23, r19
     976:	84 0b       	sbc	r24, r20
     978:	ba 0b       	sbc	r27, r26
     97a:	ee 1f       	adc	r30, r30
     97c:	88 f7       	brcc	.-30     	; 0x960 <__stack+0x61>
     97e:	e0 95       	com	r30
     980:	08 95       	ret

00000982 <__floatunsisf>:
     982:	e8 94       	clt
     984:	09 c0       	rjmp	.+18     	; 0x998 <__floatsisf+0x12>

00000986 <__floatsisf>:
     986:	97 fb       	bst	r25, 7
     988:	3e f4       	brtc	.+14     	; 0x998 <__floatsisf+0x12>
     98a:	90 95       	com	r25
     98c:	80 95       	com	r24
     98e:	70 95       	com	r23
     990:	61 95       	neg	r22
     992:	7f 4f       	sbci	r23, 0xFF	; 255
     994:	8f 4f       	sbci	r24, 0xFF	; 255
     996:	9f 4f       	sbci	r25, 0xFF	; 255
     998:	99 23       	and	r25, r25
     99a:	a9 f0       	breq	.+42     	; 0x9c6 <__floatsisf+0x40>
     99c:	f9 2f       	mov	r31, r25
     99e:	96 e9       	ldi	r25, 0x96	; 150
     9a0:	bb 27       	eor	r27, r27
     9a2:	93 95       	inc	r25
     9a4:	f6 95       	lsr	r31
     9a6:	87 95       	ror	r24
     9a8:	77 95       	ror	r23
     9aa:	67 95       	ror	r22
     9ac:	b7 95       	ror	r27
     9ae:	f1 11       	cpse	r31, r1
     9b0:	f8 cf       	rjmp	.-16     	; 0x9a2 <__floatsisf+0x1c>
     9b2:	fa f4       	brpl	.+62     	; 0x9f2 <__floatsisf+0x6c>
     9b4:	bb 0f       	add	r27, r27
     9b6:	11 f4       	brne	.+4      	; 0x9bc <__floatsisf+0x36>
     9b8:	60 ff       	sbrs	r22, 0
     9ba:	1b c0       	rjmp	.+54     	; 0x9f2 <__floatsisf+0x6c>
     9bc:	6f 5f       	subi	r22, 0xFF	; 255
     9be:	7f 4f       	sbci	r23, 0xFF	; 255
     9c0:	8f 4f       	sbci	r24, 0xFF	; 255
     9c2:	9f 4f       	sbci	r25, 0xFF	; 255
     9c4:	16 c0       	rjmp	.+44     	; 0x9f2 <__floatsisf+0x6c>
     9c6:	88 23       	and	r24, r24
     9c8:	11 f0       	breq	.+4      	; 0x9ce <__floatsisf+0x48>
     9ca:	96 e9       	ldi	r25, 0x96	; 150
     9cc:	11 c0       	rjmp	.+34     	; 0x9f0 <__floatsisf+0x6a>
     9ce:	77 23       	and	r23, r23
     9d0:	21 f0       	breq	.+8      	; 0x9da <__floatsisf+0x54>
     9d2:	9e e8       	ldi	r25, 0x8E	; 142
     9d4:	87 2f       	mov	r24, r23
     9d6:	76 2f       	mov	r23, r22
     9d8:	05 c0       	rjmp	.+10     	; 0x9e4 <__floatsisf+0x5e>
     9da:	66 23       	and	r22, r22
     9dc:	71 f0       	breq	.+28     	; 0x9fa <__floatsisf+0x74>
     9de:	96 e8       	ldi	r25, 0x86	; 134
     9e0:	86 2f       	mov	r24, r22
     9e2:	70 e0       	ldi	r23, 0x00	; 0
     9e4:	60 e0       	ldi	r22, 0x00	; 0
     9e6:	2a f0       	brmi	.+10     	; 0x9f2 <__floatsisf+0x6c>
     9e8:	9a 95       	dec	r25
     9ea:	66 0f       	add	r22, r22
     9ec:	77 1f       	adc	r23, r23
     9ee:	88 1f       	adc	r24, r24
     9f0:	da f7       	brpl	.-10     	; 0x9e8 <__floatsisf+0x62>
     9f2:	88 0f       	add	r24, r24
     9f4:	96 95       	lsr	r25
     9f6:	87 95       	ror	r24
     9f8:	97 f9       	bld	r25, 7
     9fa:	08 95       	ret

000009fc <__fp_cmp>:
     9fc:	99 0f       	add	r25, r25
     9fe:	00 08       	sbc	r0, r0
     a00:	55 0f       	add	r21, r21
     a02:	aa 0b       	sbc	r26, r26
     a04:	e0 e8       	ldi	r30, 0x80	; 128
     a06:	fe ef       	ldi	r31, 0xFE	; 254
     a08:	16 16       	cp	r1, r22
     a0a:	17 06       	cpc	r1, r23
     a0c:	e8 07       	cpc	r30, r24
     a0e:	f9 07       	cpc	r31, r25
     a10:	c0 f0       	brcs	.+48     	; 0xa42 <__fp_cmp+0x46>
     a12:	12 16       	cp	r1, r18
     a14:	13 06       	cpc	r1, r19
     a16:	e4 07       	cpc	r30, r20
     a18:	f5 07       	cpc	r31, r21
     a1a:	98 f0       	brcs	.+38     	; 0xa42 <__fp_cmp+0x46>
     a1c:	62 1b       	sub	r22, r18
     a1e:	73 0b       	sbc	r23, r19
     a20:	84 0b       	sbc	r24, r20
     a22:	95 0b       	sbc	r25, r21
     a24:	39 f4       	brne	.+14     	; 0xa34 <__fp_cmp+0x38>
     a26:	0a 26       	eor	r0, r26
     a28:	61 f0       	breq	.+24     	; 0xa42 <__fp_cmp+0x46>
     a2a:	23 2b       	or	r18, r19
     a2c:	24 2b       	or	r18, r20
     a2e:	25 2b       	or	r18, r21
     a30:	21 f4       	brne	.+8      	; 0xa3a <__fp_cmp+0x3e>
     a32:	08 95       	ret
     a34:	0a 26       	eor	r0, r26
     a36:	09 f4       	brne	.+2      	; 0xa3a <__fp_cmp+0x3e>
     a38:	a1 40       	sbci	r26, 0x01	; 1
     a3a:	a6 95       	lsr	r26
     a3c:	8f ef       	ldi	r24, 0xFF	; 255
     a3e:	81 1d       	adc	r24, r1
     a40:	81 1d       	adc	r24, r1
     a42:	08 95       	ret

00000a44 <__fp_inf>:
     a44:	97 f9       	bld	r25, 7
     a46:	9f 67       	ori	r25, 0x7F	; 127
     a48:	80 e8       	ldi	r24, 0x80	; 128
     a4a:	70 e0       	ldi	r23, 0x00	; 0
     a4c:	60 e0       	ldi	r22, 0x00	; 0
     a4e:	08 95       	ret

00000a50 <__fp_nan>:
     a50:	9f ef       	ldi	r25, 0xFF	; 255
     a52:	80 ec       	ldi	r24, 0xC0	; 192
     a54:	08 95       	ret

00000a56 <__fp_pscA>:
     a56:	00 24       	eor	r0, r0
     a58:	0a 94       	dec	r0
     a5a:	16 16       	cp	r1, r22
     a5c:	17 06       	cpc	r1, r23
     a5e:	18 06       	cpc	r1, r24
     a60:	09 06       	cpc	r0, r25
     a62:	08 95       	ret

00000a64 <__fp_pscB>:
     a64:	00 24       	eor	r0, r0
     a66:	0a 94       	dec	r0
     a68:	12 16       	cp	r1, r18
     a6a:	13 06       	cpc	r1, r19
     a6c:	14 06       	cpc	r1, r20
     a6e:	05 06       	cpc	r0, r21
     a70:	08 95       	ret

00000a72 <__fp_round>:
     a72:	09 2e       	mov	r0, r25
     a74:	03 94       	inc	r0
     a76:	00 0c       	add	r0, r0
     a78:	11 f4       	brne	.+4      	; 0xa7e <__fp_round+0xc>
     a7a:	88 23       	and	r24, r24
     a7c:	52 f0       	brmi	.+20     	; 0xa92 <__fp_round+0x20>
     a7e:	bb 0f       	add	r27, r27
     a80:	40 f4       	brcc	.+16     	; 0xa92 <__fp_round+0x20>
     a82:	bf 2b       	or	r27, r31
     a84:	11 f4       	brne	.+4      	; 0xa8a <__fp_round+0x18>
     a86:	60 ff       	sbrs	r22, 0
     a88:	04 c0       	rjmp	.+8      	; 0xa92 <__fp_round+0x20>
     a8a:	6f 5f       	subi	r22, 0xFF	; 255
     a8c:	7f 4f       	sbci	r23, 0xFF	; 255
     a8e:	8f 4f       	sbci	r24, 0xFF	; 255
     a90:	9f 4f       	sbci	r25, 0xFF	; 255
     a92:	08 95       	ret

00000a94 <__fp_split3>:
     a94:	57 fd       	sbrc	r21, 7
     a96:	90 58       	subi	r25, 0x80	; 128
     a98:	44 0f       	add	r20, r20
     a9a:	55 1f       	adc	r21, r21
     a9c:	59 f0       	breq	.+22     	; 0xab4 <__fp_splitA+0x10>
     a9e:	5f 3f       	cpi	r21, 0xFF	; 255
     aa0:	71 f0       	breq	.+28     	; 0xabe <__fp_splitA+0x1a>
     aa2:	47 95       	ror	r20

00000aa4 <__fp_splitA>:
     aa4:	88 0f       	add	r24, r24
     aa6:	97 fb       	bst	r25, 7
     aa8:	99 1f       	adc	r25, r25
     aaa:	61 f0       	breq	.+24     	; 0xac4 <__fp_splitA+0x20>
     aac:	9f 3f       	cpi	r25, 0xFF	; 255
     aae:	79 f0       	breq	.+30     	; 0xace <__fp_splitA+0x2a>
     ab0:	87 95       	ror	r24
     ab2:	08 95       	ret
     ab4:	12 16       	cp	r1, r18
     ab6:	13 06       	cpc	r1, r19
     ab8:	14 06       	cpc	r1, r20
     aba:	55 1f       	adc	r21, r21
     abc:	f2 cf       	rjmp	.-28     	; 0xaa2 <__fp_split3+0xe>
     abe:	46 95       	lsr	r20
     ac0:	f1 df       	rcall	.-30     	; 0xaa4 <__fp_splitA>
     ac2:	08 c0       	rjmp	.+16     	; 0xad4 <__fp_splitA+0x30>
     ac4:	16 16       	cp	r1, r22
     ac6:	17 06       	cpc	r1, r23
     ac8:	18 06       	cpc	r1, r24
     aca:	99 1f       	adc	r25, r25
     acc:	f1 cf       	rjmp	.-30     	; 0xab0 <__fp_splitA+0xc>
     ace:	86 95       	lsr	r24
     ad0:	71 05       	cpc	r23, r1
     ad2:	61 05       	cpc	r22, r1
     ad4:	08 94       	sec
     ad6:	08 95       	ret

00000ad8 <__fp_zero>:
     ad8:	e8 94       	clt

00000ada <__fp_szero>:
     ada:	bb 27       	eor	r27, r27
     adc:	66 27       	eor	r22, r22
     ade:	77 27       	eor	r23, r23
     ae0:	cb 01       	movw	r24, r22
     ae2:	97 f9       	bld	r25, 7
     ae4:	08 95       	ret

00000ae6 <__mulsf3>:
     ae6:	0b d0       	rcall	.+22     	; 0xafe <__mulsf3x>
     ae8:	c4 cf       	rjmp	.-120    	; 0xa72 <__fp_round>
     aea:	b5 df       	rcall	.-150    	; 0xa56 <__fp_pscA>
     aec:	28 f0       	brcs	.+10     	; 0xaf8 <__mulsf3+0x12>
     aee:	ba df       	rcall	.-140    	; 0xa64 <__fp_pscB>
     af0:	18 f0       	brcs	.+6      	; 0xaf8 <__mulsf3+0x12>
     af2:	95 23       	and	r25, r21
     af4:	09 f0       	breq	.+2      	; 0xaf8 <__mulsf3+0x12>
     af6:	a6 cf       	rjmp	.-180    	; 0xa44 <__fp_inf>
     af8:	ab cf       	rjmp	.-170    	; 0xa50 <__fp_nan>
     afa:	11 24       	eor	r1, r1
     afc:	ee cf       	rjmp	.-36     	; 0xada <__fp_szero>

00000afe <__mulsf3x>:
     afe:	ca df       	rcall	.-108    	; 0xa94 <__fp_split3>
     b00:	a0 f3       	brcs	.-24     	; 0xaea <__mulsf3+0x4>

00000b02 <__mulsf3_pse>:
     b02:	95 9f       	mul	r25, r21
     b04:	d1 f3       	breq	.-12     	; 0xafa <__mulsf3+0x14>
     b06:	95 0f       	add	r25, r21
     b08:	50 e0       	ldi	r21, 0x00	; 0
     b0a:	55 1f       	adc	r21, r21
     b0c:	62 9f       	mul	r22, r18
     b0e:	f0 01       	movw	r30, r0
     b10:	72 9f       	mul	r23, r18
     b12:	bb 27       	eor	r27, r27
     b14:	f0 0d       	add	r31, r0
     b16:	b1 1d       	adc	r27, r1
     b18:	63 9f       	mul	r22, r19
     b1a:	aa 27       	eor	r26, r26
     b1c:	f0 0d       	add	r31, r0
     b1e:	b1 1d       	adc	r27, r1
     b20:	aa 1f       	adc	r26, r26
     b22:	64 9f       	mul	r22, r20
     b24:	66 27       	eor	r22, r22
     b26:	b0 0d       	add	r27, r0
     b28:	a1 1d       	adc	r26, r1
     b2a:	66 1f       	adc	r22, r22
     b2c:	82 9f       	mul	r24, r18
     b2e:	22 27       	eor	r18, r18
     b30:	b0 0d       	add	r27, r0
     b32:	a1 1d       	adc	r26, r1
     b34:	62 1f       	adc	r22, r18
     b36:	73 9f       	mul	r23, r19
     b38:	b0 0d       	add	r27, r0
     b3a:	a1 1d       	adc	r26, r1
     b3c:	62 1f       	adc	r22, r18
     b3e:	83 9f       	mul	r24, r19
     b40:	a0 0d       	add	r26, r0
     b42:	61 1d       	adc	r22, r1
     b44:	22 1f       	adc	r18, r18
     b46:	74 9f       	mul	r23, r20
     b48:	33 27       	eor	r19, r19
     b4a:	a0 0d       	add	r26, r0
     b4c:	61 1d       	adc	r22, r1
     b4e:	23 1f       	adc	r18, r19
     b50:	84 9f       	mul	r24, r20
     b52:	60 0d       	add	r22, r0
     b54:	21 1d       	adc	r18, r1
     b56:	82 2f       	mov	r24, r18
     b58:	76 2f       	mov	r23, r22
     b5a:	6a 2f       	mov	r22, r26
     b5c:	11 24       	eor	r1, r1
     b5e:	9f 57       	subi	r25, 0x7F	; 127
     b60:	50 40       	sbci	r21, 0x00	; 0
     b62:	8a f0       	brmi	.+34     	; 0xb86 <__mulsf3_pse+0x84>
     b64:	e1 f0       	breq	.+56     	; 0xb9e <__mulsf3_pse+0x9c>
     b66:	88 23       	and	r24, r24
     b68:	4a f0       	brmi	.+18     	; 0xb7c <__mulsf3_pse+0x7a>
     b6a:	ee 0f       	add	r30, r30
     b6c:	ff 1f       	adc	r31, r31
     b6e:	bb 1f       	adc	r27, r27
     b70:	66 1f       	adc	r22, r22
     b72:	77 1f       	adc	r23, r23
     b74:	88 1f       	adc	r24, r24
     b76:	91 50       	subi	r25, 0x01	; 1
     b78:	50 40       	sbci	r21, 0x00	; 0
     b7a:	a9 f7       	brne	.-22     	; 0xb66 <__mulsf3_pse+0x64>
     b7c:	9e 3f       	cpi	r25, 0xFE	; 254
     b7e:	51 05       	cpc	r21, r1
     b80:	70 f0       	brcs	.+28     	; 0xb9e <__mulsf3_pse+0x9c>
     b82:	60 cf       	rjmp	.-320    	; 0xa44 <__fp_inf>
     b84:	aa cf       	rjmp	.-172    	; 0xada <__fp_szero>
     b86:	5f 3f       	cpi	r21, 0xFF	; 255
     b88:	ec f3       	brlt	.-6      	; 0xb84 <__mulsf3_pse+0x82>
     b8a:	98 3e       	cpi	r25, 0xE8	; 232
     b8c:	dc f3       	brlt	.-10     	; 0xb84 <__mulsf3_pse+0x82>
     b8e:	86 95       	lsr	r24
     b90:	77 95       	ror	r23
     b92:	67 95       	ror	r22
     b94:	b7 95       	ror	r27
     b96:	f7 95       	ror	r31
     b98:	e7 95       	ror	r30
     b9a:	9f 5f       	subi	r25, 0xFF	; 255
     b9c:	c1 f7       	brne	.-16     	; 0xb8e <__mulsf3_pse+0x8c>
     b9e:	fe 2b       	or	r31, r30
     ba0:	88 0f       	add	r24, r24
     ba2:	91 1d       	adc	r25, r1
     ba4:	96 95       	lsr	r25
     ba6:	87 95       	ror	r24
     ba8:	97 f9       	bld	r25, 7
     baa:	08 95       	ret

00000bac <dtostrf>:
     bac:	ef 92       	push	r14
     bae:	0f 93       	push	r16
     bb0:	1f 93       	push	r17
     bb2:	cf 93       	push	r28
     bb4:	df 93       	push	r29
     bb6:	e8 01       	movw	r28, r16
     bb8:	47 fd       	sbrc	r20, 7
     bba:	02 c0       	rjmp	.+4      	; 0xbc0 <dtostrf+0x14>
     bbc:	34 e0       	ldi	r19, 0x04	; 4
     bbe:	01 c0       	rjmp	.+2      	; 0xbc2 <dtostrf+0x16>
     bc0:	34 e1       	ldi	r19, 0x14	; 20
     bc2:	e4 2f       	mov	r30, r20
     bc4:	44 0f       	add	r20, r20
     bc6:	ff 0b       	sbc	r31, r31
     bc8:	f7 ff       	sbrs	r31, 7
     bca:	03 c0       	rjmp	.+6      	; 0xbd2 <dtostrf+0x26>
     bcc:	f1 95       	neg	r31
     bce:	e1 95       	neg	r30
     bd0:	f1 09       	sbc	r31, r1
     bd2:	e3 2e       	mov	r14, r19
     bd4:	02 2f       	mov	r16, r18
     bd6:	2e 2f       	mov	r18, r30
     bd8:	ae 01       	movw	r20, r28
     bda:	08 d2       	rcall	.+1040   	; 0xfec <dtoa_prf>
     bdc:	ce 01       	movw	r24, r28
     bde:	df 91       	pop	r29
     be0:	cf 91       	pop	r28
     be2:	1f 91       	pop	r17
     be4:	0f 91       	pop	r16
     be6:	ef 90       	pop	r14
     be8:	08 95       	ret

00000bea <memmove>:
     bea:	68 17       	cp	r22, r24
     bec:	79 07       	cpc	r23, r25
     bee:	68 f4       	brcc	.+26     	; 0xc0a <memmove+0x20>
     bf0:	fb 01       	movw	r30, r22
     bf2:	dc 01       	movw	r26, r24
     bf4:	e4 0f       	add	r30, r20
     bf6:	f5 1f       	adc	r31, r21
     bf8:	a4 0f       	add	r26, r20
     bfa:	b5 1f       	adc	r27, r21
     bfc:	02 c0       	rjmp	.+4      	; 0xc02 <memmove+0x18>
     bfe:	02 90       	ld	r0, -Z
     c00:	0e 92       	st	-X, r0
     c02:	41 50       	subi	r20, 0x01	; 1
     c04:	50 40       	sbci	r21, 0x00	; 0
     c06:	d8 f7       	brcc	.-10     	; 0xbfe <memmove+0x14>
     c08:	08 95       	ret
     c0a:	60 c4       	rjmp	.+2240   	; 0x14cc <memcpy>

00000c0c <snprintf>:
     c0c:	ae e0       	ldi	r26, 0x0E	; 14
     c0e:	b0 e0       	ldi	r27, 0x00	; 0
     c10:	eb e0       	ldi	r30, 0x0B	; 11
     c12:	f6 e0       	ldi	r31, 0x06	; 6
     c14:	13 c5       	rjmp	.+2598   	; 0x163c <__prologue_saves__+0x1c>
     c16:	0d 89       	ldd	r16, Y+21	; 0x15
     c18:	1e 89       	ldd	r17, Y+22	; 0x16
     c1a:	8f 89       	ldd	r24, Y+23	; 0x17
     c1c:	98 8d       	ldd	r25, Y+24	; 0x18
     c1e:	26 e0       	ldi	r18, 0x06	; 6
     c20:	2c 83       	std	Y+4, r18	; 0x04
     c22:	1a 83       	std	Y+2, r17	; 0x02
     c24:	09 83       	std	Y+1, r16	; 0x01
     c26:	97 ff       	sbrs	r25, 7
     c28:	02 c0       	rjmp	.+4      	; 0xc2e <snprintf+0x22>
     c2a:	80 e0       	ldi	r24, 0x00	; 0
     c2c:	90 e8       	ldi	r25, 0x80	; 128
     c2e:	01 97       	sbiw	r24, 0x01	; 1
     c30:	9e 83       	std	Y+6, r25	; 0x06
     c32:	8d 83       	std	Y+5, r24	; 0x05
     c34:	ae 01       	movw	r20, r28
     c36:	45 5e       	subi	r20, 0xE5	; 229
     c38:	5f 4f       	sbci	r21, 0xFF	; 255
     c3a:	69 8d       	ldd	r22, Y+25	; 0x19
     c3c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     c3e:	ce 01       	movw	r24, r28
     c40:	01 96       	adiw	r24, 0x01	; 1
     c42:	11 d0       	rcall	.+34     	; 0xc66 <vfprintf>
     c44:	4d 81       	ldd	r20, Y+5	; 0x05
     c46:	5e 81       	ldd	r21, Y+6	; 0x06
     c48:	57 fd       	sbrc	r21, 7
     c4a:	0a c0       	rjmp	.+20     	; 0xc60 <snprintf+0x54>
     c4c:	2f 81       	ldd	r18, Y+7	; 0x07
     c4e:	38 85       	ldd	r19, Y+8	; 0x08
     c50:	42 17       	cp	r20, r18
     c52:	53 07       	cpc	r21, r19
     c54:	0c f4       	brge	.+2      	; 0xc58 <snprintf+0x4c>
     c56:	9a 01       	movw	r18, r20
     c58:	f8 01       	movw	r30, r16
     c5a:	e2 0f       	add	r30, r18
     c5c:	f3 1f       	adc	r31, r19
     c5e:	10 82       	st	Z, r1
     c60:	2e 96       	adiw	r28, 0x0e	; 14
     c62:	e4 e0       	ldi	r30, 0x04	; 4
     c64:	07 c5       	rjmp	.+2574   	; 0x1674 <__epilogue_restores__+0x1c>

00000c66 <vfprintf>:
     c66:	ac e0       	ldi	r26, 0x0C	; 12
     c68:	b0 e0       	ldi	r27, 0x00	; 0
     c6a:	e8 e3       	ldi	r30, 0x38	; 56
     c6c:	f6 e0       	ldi	r31, 0x06	; 6
     c6e:	d8 c4       	rjmp	.+2480   	; 0x1620 <__prologue_saves__>
     c70:	7c 01       	movw	r14, r24
     c72:	6b 01       	movw	r12, r22
     c74:	8a 01       	movw	r16, r20
     c76:	fc 01       	movw	r30, r24
     c78:	17 82       	std	Z+7, r1	; 0x07
     c7a:	16 82       	std	Z+6, r1	; 0x06
     c7c:	83 81       	ldd	r24, Z+3	; 0x03
     c7e:	81 ff       	sbrs	r24, 1
     c80:	b0 c1       	rjmp	.+864    	; 0xfe2 <vfprintf+0x37c>
     c82:	ce 01       	movw	r24, r28
     c84:	01 96       	adiw	r24, 0x01	; 1
     c86:	4c 01       	movw	r8, r24
     c88:	f7 01       	movw	r30, r14
     c8a:	93 81       	ldd	r25, Z+3	; 0x03
     c8c:	f6 01       	movw	r30, r12
     c8e:	93 fd       	sbrc	r25, 3
     c90:	85 91       	lpm	r24, Z+
     c92:	93 ff       	sbrs	r25, 3
     c94:	81 91       	ld	r24, Z+
     c96:	6f 01       	movw	r12, r30
     c98:	88 23       	and	r24, r24
     c9a:	09 f4       	brne	.+2      	; 0xc9e <vfprintf+0x38>
     c9c:	9e c1       	rjmp	.+828    	; 0xfda <vfprintf+0x374>
     c9e:	85 32       	cpi	r24, 0x25	; 37
     ca0:	39 f4       	brne	.+14     	; 0xcb0 <vfprintf+0x4a>
     ca2:	93 fd       	sbrc	r25, 3
     ca4:	85 91       	lpm	r24, Z+
     ca6:	93 ff       	sbrs	r25, 3
     ca8:	81 91       	ld	r24, Z+
     caa:	6f 01       	movw	r12, r30
     cac:	85 32       	cpi	r24, 0x25	; 37
     cae:	21 f4       	brne	.+8      	; 0xcb8 <vfprintf+0x52>
     cb0:	b7 01       	movw	r22, r14
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	1f d4       	rcall	.+2110   	; 0x14f4 <fputc>
     cb6:	e8 cf       	rjmp	.-48     	; 0xc88 <vfprintf+0x22>
     cb8:	51 2c       	mov	r5, r1
     cba:	31 2c       	mov	r3, r1
     cbc:	20 e0       	ldi	r18, 0x00	; 0
     cbe:	20 32       	cpi	r18, 0x20	; 32
     cc0:	a0 f4       	brcc	.+40     	; 0xcea <vfprintf+0x84>
     cc2:	8b 32       	cpi	r24, 0x2B	; 43
     cc4:	69 f0       	breq	.+26     	; 0xce0 <vfprintf+0x7a>
     cc6:	30 f4       	brcc	.+12     	; 0xcd4 <vfprintf+0x6e>
     cc8:	80 32       	cpi	r24, 0x20	; 32
     cca:	59 f0       	breq	.+22     	; 0xce2 <vfprintf+0x7c>
     ccc:	83 32       	cpi	r24, 0x23	; 35
     cce:	69 f4       	brne	.+26     	; 0xcea <vfprintf+0x84>
     cd0:	20 61       	ori	r18, 0x10	; 16
     cd2:	2c c0       	rjmp	.+88     	; 0xd2c <vfprintf+0xc6>
     cd4:	8d 32       	cpi	r24, 0x2D	; 45
     cd6:	39 f0       	breq	.+14     	; 0xce6 <vfprintf+0x80>
     cd8:	80 33       	cpi	r24, 0x30	; 48
     cda:	39 f4       	brne	.+14     	; 0xcea <vfprintf+0x84>
     cdc:	21 60       	ori	r18, 0x01	; 1
     cde:	26 c0       	rjmp	.+76     	; 0xd2c <vfprintf+0xc6>
     ce0:	22 60       	ori	r18, 0x02	; 2
     ce2:	24 60       	ori	r18, 0x04	; 4
     ce4:	23 c0       	rjmp	.+70     	; 0xd2c <vfprintf+0xc6>
     ce6:	28 60       	ori	r18, 0x08	; 8
     ce8:	21 c0       	rjmp	.+66     	; 0xd2c <vfprintf+0xc6>
     cea:	27 fd       	sbrc	r18, 7
     cec:	27 c0       	rjmp	.+78     	; 0xd3c <vfprintf+0xd6>
     cee:	30 ed       	ldi	r19, 0xD0	; 208
     cf0:	38 0f       	add	r19, r24
     cf2:	3a 30       	cpi	r19, 0x0A	; 10
     cf4:	78 f4       	brcc	.+30     	; 0xd14 <vfprintf+0xae>
     cf6:	26 ff       	sbrs	r18, 6
     cf8:	06 c0       	rjmp	.+12     	; 0xd06 <vfprintf+0xa0>
     cfa:	fa e0       	ldi	r31, 0x0A	; 10
     cfc:	5f 9e       	mul	r5, r31
     cfe:	30 0d       	add	r19, r0
     d00:	11 24       	eor	r1, r1
     d02:	53 2e       	mov	r5, r19
     d04:	13 c0       	rjmp	.+38     	; 0xd2c <vfprintf+0xc6>
     d06:	8a e0       	ldi	r24, 0x0A	; 10
     d08:	38 9e       	mul	r3, r24
     d0a:	30 0d       	add	r19, r0
     d0c:	11 24       	eor	r1, r1
     d0e:	33 2e       	mov	r3, r19
     d10:	20 62       	ori	r18, 0x20	; 32
     d12:	0c c0       	rjmp	.+24     	; 0xd2c <vfprintf+0xc6>
     d14:	8e 32       	cpi	r24, 0x2E	; 46
     d16:	21 f4       	brne	.+8      	; 0xd20 <vfprintf+0xba>
     d18:	26 fd       	sbrc	r18, 6
     d1a:	5f c1       	rjmp	.+702    	; 0xfda <vfprintf+0x374>
     d1c:	20 64       	ori	r18, 0x40	; 64
     d1e:	06 c0       	rjmp	.+12     	; 0xd2c <vfprintf+0xc6>
     d20:	8c 36       	cpi	r24, 0x6C	; 108
     d22:	11 f4       	brne	.+4      	; 0xd28 <vfprintf+0xc2>
     d24:	20 68       	ori	r18, 0x80	; 128
     d26:	02 c0       	rjmp	.+4      	; 0xd2c <vfprintf+0xc6>
     d28:	88 36       	cpi	r24, 0x68	; 104
     d2a:	41 f4       	brne	.+16     	; 0xd3c <vfprintf+0xd6>
     d2c:	f6 01       	movw	r30, r12
     d2e:	93 fd       	sbrc	r25, 3
     d30:	85 91       	lpm	r24, Z+
     d32:	93 ff       	sbrs	r25, 3
     d34:	81 91       	ld	r24, Z+
     d36:	6f 01       	movw	r12, r30
     d38:	81 11       	cpse	r24, r1
     d3a:	c1 cf       	rjmp	.-126    	; 0xcbe <vfprintf+0x58>
     d3c:	98 2f       	mov	r25, r24
     d3e:	9f 7d       	andi	r25, 0xDF	; 223
     d40:	95 54       	subi	r25, 0x45	; 69
     d42:	93 30       	cpi	r25, 0x03	; 3
     d44:	28 f4       	brcc	.+10     	; 0xd50 <vfprintf+0xea>
     d46:	0c 5f       	subi	r16, 0xFC	; 252
     d48:	1f 4f       	sbci	r17, 0xFF	; 255
     d4a:	ff e3       	ldi	r31, 0x3F	; 63
     d4c:	f9 83       	std	Y+1, r31	; 0x01
     d4e:	0d c0       	rjmp	.+26     	; 0xd6a <vfprintf+0x104>
     d50:	83 36       	cpi	r24, 0x63	; 99
     d52:	31 f0       	breq	.+12     	; 0xd60 <vfprintf+0xfa>
     d54:	83 37       	cpi	r24, 0x73	; 115
     d56:	71 f0       	breq	.+28     	; 0xd74 <vfprintf+0x10e>
     d58:	83 35       	cpi	r24, 0x53	; 83
     d5a:	09 f0       	breq	.+2      	; 0xd5e <vfprintf+0xf8>
     d5c:	57 c0       	rjmp	.+174    	; 0xe0c <vfprintf+0x1a6>
     d5e:	21 c0       	rjmp	.+66     	; 0xda2 <vfprintf+0x13c>
     d60:	f8 01       	movw	r30, r16
     d62:	80 81       	ld	r24, Z
     d64:	89 83       	std	Y+1, r24	; 0x01
     d66:	0e 5f       	subi	r16, 0xFE	; 254
     d68:	1f 4f       	sbci	r17, 0xFF	; 255
     d6a:	44 24       	eor	r4, r4
     d6c:	43 94       	inc	r4
     d6e:	51 2c       	mov	r5, r1
     d70:	54 01       	movw	r10, r8
     d72:	14 c0       	rjmp	.+40     	; 0xd9c <vfprintf+0x136>
     d74:	38 01       	movw	r6, r16
     d76:	f2 e0       	ldi	r31, 0x02	; 2
     d78:	6f 0e       	add	r6, r31
     d7a:	71 1c       	adc	r7, r1
     d7c:	f8 01       	movw	r30, r16
     d7e:	a0 80       	ld	r10, Z
     d80:	b1 80       	ldd	r11, Z+1	; 0x01
     d82:	26 ff       	sbrs	r18, 6
     d84:	03 c0       	rjmp	.+6      	; 0xd8c <vfprintf+0x126>
     d86:	65 2d       	mov	r22, r5
     d88:	70 e0       	ldi	r23, 0x00	; 0
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <vfprintf+0x12a>
     d8c:	6f ef       	ldi	r22, 0xFF	; 255
     d8e:	7f ef       	ldi	r23, 0xFF	; 255
     d90:	c5 01       	movw	r24, r10
     d92:	2c 87       	std	Y+12, r18	; 0x0c
     d94:	a4 d3       	rcall	.+1864   	; 0x14de <strnlen>
     d96:	2c 01       	movw	r4, r24
     d98:	83 01       	movw	r16, r6
     d9a:	2c 85       	ldd	r18, Y+12	; 0x0c
     d9c:	2f 77       	andi	r18, 0x7F	; 127
     d9e:	22 2e       	mov	r2, r18
     da0:	16 c0       	rjmp	.+44     	; 0xdce <vfprintf+0x168>
     da2:	38 01       	movw	r6, r16
     da4:	f2 e0       	ldi	r31, 0x02	; 2
     da6:	6f 0e       	add	r6, r31
     da8:	71 1c       	adc	r7, r1
     daa:	f8 01       	movw	r30, r16
     dac:	a0 80       	ld	r10, Z
     dae:	b1 80       	ldd	r11, Z+1	; 0x01
     db0:	26 ff       	sbrs	r18, 6
     db2:	03 c0       	rjmp	.+6      	; 0xdba <vfprintf+0x154>
     db4:	65 2d       	mov	r22, r5
     db6:	70 e0       	ldi	r23, 0x00	; 0
     db8:	02 c0       	rjmp	.+4      	; 0xdbe <vfprintf+0x158>
     dba:	6f ef       	ldi	r22, 0xFF	; 255
     dbc:	7f ef       	ldi	r23, 0xFF	; 255
     dbe:	c5 01       	movw	r24, r10
     dc0:	2c 87       	std	Y+12, r18	; 0x0c
     dc2:	79 d3       	rcall	.+1778   	; 0x14b6 <strnlen_P>
     dc4:	2c 01       	movw	r4, r24
     dc6:	2c 85       	ldd	r18, Y+12	; 0x0c
     dc8:	20 68       	ori	r18, 0x80	; 128
     dca:	22 2e       	mov	r2, r18
     dcc:	83 01       	movw	r16, r6
     dce:	23 fc       	sbrc	r2, 3
     dd0:	19 c0       	rjmp	.+50     	; 0xe04 <vfprintf+0x19e>
     dd2:	83 2d       	mov	r24, r3
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	48 16       	cp	r4, r24
     dd8:	59 06       	cpc	r5, r25
     dda:	a0 f4       	brcc	.+40     	; 0xe04 <vfprintf+0x19e>
     ddc:	b7 01       	movw	r22, r14
     dde:	80 e2       	ldi	r24, 0x20	; 32
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	88 d3       	rcall	.+1808   	; 0x14f4 <fputc>
     de4:	3a 94       	dec	r3
     de6:	f5 cf       	rjmp	.-22     	; 0xdd2 <vfprintf+0x16c>
     de8:	f5 01       	movw	r30, r10
     dea:	27 fc       	sbrc	r2, 7
     dec:	85 91       	lpm	r24, Z+
     dee:	27 fe       	sbrs	r2, 7
     df0:	81 91       	ld	r24, Z+
     df2:	5f 01       	movw	r10, r30
     df4:	b7 01       	movw	r22, r14
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	7d d3       	rcall	.+1786   	; 0x14f4 <fputc>
     dfa:	31 10       	cpse	r3, r1
     dfc:	3a 94       	dec	r3
     dfe:	f1 e0       	ldi	r31, 0x01	; 1
     e00:	4f 1a       	sub	r4, r31
     e02:	51 08       	sbc	r5, r1
     e04:	41 14       	cp	r4, r1
     e06:	51 04       	cpc	r5, r1
     e08:	79 f7       	brne	.-34     	; 0xde8 <vfprintf+0x182>
     e0a:	de c0       	rjmp	.+444    	; 0xfc8 <vfprintf+0x362>
     e0c:	84 36       	cpi	r24, 0x64	; 100
     e0e:	11 f0       	breq	.+4      	; 0xe14 <vfprintf+0x1ae>
     e10:	89 36       	cpi	r24, 0x69	; 105
     e12:	31 f5       	brne	.+76     	; 0xe60 <vfprintf+0x1fa>
     e14:	f8 01       	movw	r30, r16
     e16:	27 ff       	sbrs	r18, 7
     e18:	07 c0       	rjmp	.+14     	; 0xe28 <vfprintf+0x1c2>
     e1a:	60 81       	ld	r22, Z
     e1c:	71 81       	ldd	r23, Z+1	; 0x01
     e1e:	82 81       	ldd	r24, Z+2	; 0x02
     e20:	93 81       	ldd	r25, Z+3	; 0x03
     e22:	0c 5f       	subi	r16, 0xFC	; 252
     e24:	1f 4f       	sbci	r17, 0xFF	; 255
     e26:	08 c0       	rjmp	.+16     	; 0xe38 <vfprintf+0x1d2>
     e28:	60 81       	ld	r22, Z
     e2a:	71 81       	ldd	r23, Z+1	; 0x01
     e2c:	07 2e       	mov	r0, r23
     e2e:	00 0c       	add	r0, r0
     e30:	88 0b       	sbc	r24, r24
     e32:	99 0b       	sbc	r25, r25
     e34:	0e 5f       	subi	r16, 0xFE	; 254
     e36:	1f 4f       	sbci	r17, 0xFF	; 255
     e38:	2f 76       	andi	r18, 0x6F	; 111
     e3a:	72 2e       	mov	r7, r18
     e3c:	97 ff       	sbrs	r25, 7
     e3e:	09 c0       	rjmp	.+18     	; 0xe52 <vfprintf+0x1ec>
     e40:	90 95       	com	r25
     e42:	80 95       	com	r24
     e44:	70 95       	com	r23
     e46:	61 95       	neg	r22
     e48:	7f 4f       	sbci	r23, 0xFF	; 255
     e4a:	8f 4f       	sbci	r24, 0xFF	; 255
     e4c:	9f 4f       	sbci	r25, 0xFF	; 255
     e4e:	20 68       	ori	r18, 0x80	; 128
     e50:	72 2e       	mov	r7, r18
     e52:	2a e0       	ldi	r18, 0x0A	; 10
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	a4 01       	movw	r20, r8
     e58:	85 d3       	rcall	.+1802   	; 0x1564 <__ultoa_invert>
     e5a:	a8 2e       	mov	r10, r24
     e5c:	a8 18       	sub	r10, r8
     e5e:	43 c0       	rjmp	.+134    	; 0xee6 <vfprintf+0x280>
     e60:	85 37       	cpi	r24, 0x75	; 117
     e62:	29 f4       	brne	.+10     	; 0xe6e <vfprintf+0x208>
     e64:	2f 7e       	andi	r18, 0xEF	; 239
     e66:	b2 2e       	mov	r11, r18
     e68:	2a e0       	ldi	r18, 0x0A	; 10
     e6a:	30 e0       	ldi	r19, 0x00	; 0
     e6c:	25 c0       	rjmp	.+74     	; 0xeb8 <vfprintf+0x252>
     e6e:	f2 2f       	mov	r31, r18
     e70:	f9 7f       	andi	r31, 0xF9	; 249
     e72:	bf 2e       	mov	r11, r31
     e74:	8f 36       	cpi	r24, 0x6F	; 111
     e76:	c1 f0       	breq	.+48     	; 0xea8 <vfprintf+0x242>
     e78:	18 f4       	brcc	.+6      	; 0xe80 <vfprintf+0x21a>
     e7a:	88 35       	cpi	r24, 0x58	; 88
     e7c:	79 f0       	breq	.+30     	; 0xe9c <vfprintf+0x236>
     e7e:	ad c0       	rjmp	.+346    	; 0xfda <vfprintf+0x374>
     e80:	80 37       	cpi	r24, 0x70	; 112
     e82:	19 f0       	breq	.+6      	; 0xe8a <vfprintf+0x224>
     e84:	88 37       	cpi	r24, 0x78	; 120
     e86:	21 f0       	breq	.+8      	; 0xe90 <vfprintf+0x22a>
     e88:	a8 c0       	rjmp	.+336    	; 0xfda <vfprintf+0x374>
     e8a:	2f 2f       	mov	r18, r31
     e8c:	20 61       	ori	r18, 0x10	; 16
     e8e:	b2 2e       	mov	r11, r18
     e90:	b4 fe       	sbrs	r11, 4
     e92:	0d c0       	rjmp	.+26     	; 0xeae <vfprintf+0x248>
     e94:	8b 2d       	mov	r24, r11
     e96:	84 60       	ori	r24, 0x04	; 4
     e98:	b8 2e       	mov	r11, r24
     e9a:	09 c0       	rjmp	.+18     	; 0xeae <vfprintf+0x248>
     e9c:	24 ff       	sbrs	r18, 4
     e9e:	0a c0       	rjmp	.+20     	; 0xeb4 <vfprintf+0x24e>
     ea0:	9f 2f       	mov	r25, r31
     ea2:	96 60       	ori	r25, 0x06	; 6
     ea4:	b9 2e       	mov	r11, r25
     ea6:	06 c0       	rjmp	.+12     	; 0xeb4 <vfprintf+0x24e>
     ea8:	28 e0       	ldi	r18, 0x08	; 8
     eaa:	30 e0       	ldi	r19, 0x00	; 0
     eac:	05 c0       	rjmp	.+10     	; 0xeb8 <vfprintf+0x252>
     eae:	20 e1       	ldi	r18, 0x10	; 16
     eb0:	30 e0       	ldi	r19, 0x00	; 0
     eb2:	02 c0       	rjmp	.+4      	; 0xeb8 <vfprintf+0x252>
     eb4:	20 e1       	ldi	r18, 0x10	; 16
     eb6:	32 e0       	ldi	r19, 0x02	; 2
     eb8:	f8 01       	movw	r30, r16
     eba:	b7 fe       	sbrs	r11, 7
     ebc:	07 c0       	rjmp	.+14     	; 0xecc <vfprintf+0x266>
     ebe:	60 81       	ld	r22, Z
     ec0:	71 81       	ldd	r23, Z+1	; 0x01
     ec2:	82 81       	ldd	r24, Z+2	; 0x02
     ec4:	93 81       	ldd	r25, Z+3	; 0x03
     ec6:	0c 5f       	subi	r16, 0xFC	; 252
     ec8:	1f 4f       	sbci	r17, 0xFF	; 255
     eca:	06 c0       	rjmp	.+12     	; 0xed8 <vfprintf+0x272>
     ecc:	60 81       	ld	r22, Z
     ece:	71 81       	ldd	r23, Z+1	; 0x01
     ed0:	80 e0       	ldi	r24, 0x00	; 0
     ed2:	90 e0       	ldi	r25, 0x00	; 0
     ed4:	0e 5f       	subi	r16, 0xFE	; 254
     ed6:	1f 4f       	sbci	r17, 0xFF	; 255
     ed8:	a4 01       	movw	r20, r8
     eda:	44 d3       	rcall	.+1672   	; 0x1564 <__ultoa_invert>
     edc:	a8 2e       	mov	r10, r24
     ede:	a8 18       	sub	r10, r8
     ee0:	fb 2d       	mov	r31, r11
     ee2:	ff 77       	andi	r31, 0x7F	; 127
     ee4:	7f 2e       	mov	r7, r31
     ee6:	76 fe       	sbrs	r7, 6
     ee8:	0b c0       	rjmp	.+22     	; 0xf00 <vfprintf+0x29a>
     eea:	37 2d       	mov	r19, r7
     eec:	3e 7f       	andi	r19, 0xFE	; 254
     eee:	a5 14       	cp	r10, r5
     ef0:	50 f4       	brcc	.+20     	; 0xf06 <vfprintf+0x2a0>
     ef2:	74 fe       	sbrs	r7, 4
     ef4:	0a c0       	rjmp	.+20     	; 0xf0a <vfprintf+0x2a4>
     ef6:	72 fc       	sbrc	r7, 2
     ef8:	08 c0       	rjmp	.+16     	; 0xf0a <vfprintf+0x2a4>
     efa:	37 2d       	mov	r19, r7
     efc:	3e 7e       	andi	r19, 0xEE	; 238
     efe:	05 c0       	rjmp	.+10     	; 0xf0a <vfprintf+0x2a4>
     f00:	ba 2c       	mov	r11, r10
     f02:	37 2d       	mov	r19, r7
     f04:	03 c0       	rjmp	.+6      	; 0xf0c <vfprintf+0x2a6>
     f06:	ba 2c       	mov	r11, r10
     f08:	01 c0       	rjmp	.+2      	; 0xf0c <vfprintf+0x2a6>
     f0a:	b5 2c       	mov	r11, r5
     f0c:	34 ff       	sbrs	r19, 4
     f0e:	0d c0       	rjmp	.+26     	; 0xf2a <vfprintf+0x2c4>
     f10:	fe 01       	movw	r30, r28
     f12:	ea 0d       	add	r30, r10
     f14:	f1 1d       	adc	r31, r1
     f16:	80 81       	ld	r24, Z
     f18:	80 33       	cpi	r24, 0x30	; 48
     f1a:	11 f4       	brne	.+4      	; 0xf20 <vfprintf+0x2ba>
     f1c:	39 7e       	andi	r19, 0xE9	; 233
     f1e:	09 c0       	rjmp	.+18     	; 0xf32 <vfprintf+0x2cc>
     f20:	32 ff       	sbrs	r19, 2
     f22:	06 c0       	rjmp	.+12     	; 0xf30 <vfprintf+0x2ca>
     f24:	b3 94       	inc	r11
     f26:	b3 94       	inc	r11
     f28:	04 c0       	rjmp	.+8      	; 0xf32 <vfprintf+0x2cc>
     f2a:	83 2f       	mov	r24, r19
     f2c:	86 78       	andi	r24, 0x86	; 134
     f2e:	09 f0       	breq	.+2      	; 0xf32 <vfprintf+0x2cc>
     f30:	b3 94       	inc	r11
     f32:	33 fd       	sbrc	r19, 3
     f34:	12 c0       	rjmp	.+36     	; 0xf5a <vfprintf+0x2f4>
     f36:	30 ff       	sbrs	r19, 0
     f38:	06 c0       	rjmp	.+12     	; 0xf46 <vfprintf+0x2e0>
     f3a:	5a 2c       	mov	r5, r10
     f3c:	b3 14       	cp	r11, r3
     f3e:	18 f4       	brcc	.+6      	; 0xf46 <vfprintf+0x2e0>
     f40:	53 0c       	add	r5, r3
     f42:	5b 18       	sub	r5, r11
     f44:	b3 2c       	mov	r11, r3
     f46:	b3 14       	cp	r11, r3
     f48:	60 f4       	brcc	.+24     	; 0xf62 <vfprintf+0x2fc>
     f4a:	b7 01       	movw	r22, r14
     f4c:	80 e2       	ldi	r24, 0x20	; 32
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	3c 87       	std	Y+12, r19	; 0x0c
     f52:	d0 d2       	rcall	.+1440   	; 0x14f4 <fputc>
     f54:	b3 94       	inc	r11
     f56:	3c 85       	ldd	r19, Y+12	; 0x0c
     f58:	f6 cf       	rjmp	.-20     	; 0xf46 <vfprintf+0x2e0>
     f5a:	b3 14       	cp	r11, r3
     f5c:	10 f4       	brcc	.+4      	; 0xf62 <vfprintf+0x2fc>
     f5e:	3b 18       	sub	r3, r11
     f60:	01 c0       	rjmp	.+2      	; 0xf64 <vfprintf+0x2fe>
     f62:	31 2c       	mov	r3, r1
     f64:	34 ff       	sbrs	r19, 4
     f66:	11 c0       	rjmp	.+34     	; 0xf8a <vfprintf+0x324>
     f68:	b7 01       	movw	r22, r14
     f6a:	80 e3       	ldi	r24, 0x30	; 48
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	3c 87       	std	Y+12, r19	; 0x0c
     f70:	c1 d2       	rcall	.+1410   	; 0x14f4 <fputc>
     f72:	3c 85       	ldd	r19, Y+12	; 0x0c
     f74:	32 ff       	sbrs	r19, 2
     f76:	16 c0       	rjmp	.+44     	; 0xfa4 <vfprintf+0x33e>
     f78:	31 fd       	sbrc	r19, 1
     f7a:	03 c0       	rjmp	.+6      	; 0xf82 <vfprintf+0x31c>
     f7c:	88 e7       	ldi	r24, 0x78	; 120
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	02 c0       	rjmp	.+4      	; 0xf86 <vfprintf+0x320>
     f82:	88 e5       	ldi	r24, 0x58	; 88
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	b7 01       	movw	r22, r14
     f88:	0c c0       	rjmp	.+24     	; 0xfa2 <vfprintf+0x33c>
     f8a:	83 2f       	mov	r24, r19
     f8c:	86 78       	andi	r24, 0x86	; 134
     f8e:	51 f0       	breq	.+20     	; 0xfa4 <vfprintf+0x33e>
     f90:	31 ff       	sbrs	r19, 1
     f92:	02 c0       	rjmp	.+4      	; 0xf98 <vfprintf+0x332>
     f94:	8b e2       	ldi	r24, 0x2B	; 43
     f96:	01 c0       	rjmp	.+2      	; 0xf9a <vfprintf+0x334>
     f98:	80 e2       	ldi	r24, 0x20	; 32
     f9a:	37 fd       	sbrc	r19, 7
     f9c:	8d e2       	ldi	r24, 0x2D	; 45
     f9e:	b7 01       	movw	r22, r14
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	a8 d2       	rcall	.+1360   	; 0x14f4 <fputc>
     fa4:	a5 14       	cp	r10, r5
     fa6:	30 f4       	brcc	.+12     	; 0xfb4 <vfprintf+0x34e>
     fa8:	b7 01       	movw	r22, r14
     faa:	80 e3       	ldi	r24, 0x30	; 48
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	a2 d2       	rcall	.+1348   	; 0x14f4 <fputc>
     fb0:	5a 94       	dec	r5
     fb2:	f8 cf       	rjmp	.-16     	; 0xfa4 <vfprintf+0x33e>
     fb4:	aa 94       	dec	r10
     fb6:	f4 01       	movw	r30, r8
     fb8:	ea 0d       	add	r30, r10
     fba:	f1 1d       	adc	r31, r1
     fbc:	80 81       	ld	r24, Z
     fbe:	b7 01       	movw	r22, r14
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	98 d2       	rcall	.+1328   	; 0x14f4 <fputc>
     fc4:	a1 10       	cpse	r10, r1
     fc6:	f6 cf       	rjmp	.-20     	; 0xfb4 <vfprintf+0x34e>
     fc8:	33 20       	and	r3, r3
     fca:	09 f4       	brne	.+2      	; 0xfce <vfprintf+0x368>
     fcc:	5d ce       	rjmp	.-838    	; 0xc88 <vfprintf+0x22>
     fce:	b7 01       	movw	r22, r14
     fd0:	80 e2       	ldi	r24, 0x20	; 32
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	8f d2       	rcall	.+1310   	; 0x14f4 <fputc>
     fd6:	3a 94       	dec	r3
     fd8:	f7 cf       	rjmp	.-18     	; 0xfc8 <vfprintf+0x362>
     fda:	f7 01       	movw	r30, r14
     fdc:	86 81       	ldd	r24, Z+6	; 0x06
     fde:	97 81       	ldd	r25, Z+7	; 0x07
     fe0:	02 c0       	rjmp	.+4      	; 0xfe6 <vfprintf+0x380>
     fe2:	8f ef       	ldi	r24, 0xFF	; 255
     fe4:	9f ef       	ldi	r25, 0xFF	; 255
     fe6:	2c 96       	adiw	r28, 0x0c	; 12
     fe8:	e2 e1       	ldi	r30, 0x12	; 18
     fea:	36 c3       	rjmp	.+1644   	; 0x1658 <__epilogue_restores__>

00000fec <dtoa_prf>:
     fec:	4f 92       	push	r4
     fee:	5f 92       	push	r5
     ff0:	6f 92       	push	r6
     ff2:	7f 92       	push	r7
     ff4:	9f 92       	push	r9
     ff6:	af 92       	push	r10
     ff8:	bf 92       	push	r11
     ffa:	cf 92       	push	r12
     ffc:	df 92       	push	r13
     ffe:	ef 92       	push	r14
    1000:	ff 92       	push	r15
    1002:	0f 93       	push	r16
    1004:	1f 93       	push	r17
    1006:	cf 93       	push	r28
    1008:	df 93       	push	r29
    100a:	cd b7       	in	r28, 0x3d	; 61
    100c:	de b7       	in	r29, 0x3e	; 62
    100e:	29 97       	sbiw	r28, 0x09	; 9
    1010:	0f b6       	in	r0, 0x3f	; 63
    1012:	f8 94       	cli
    1014:	de bf       	out	0x3e, r29	; 62
    1016:	0f be       	out	0x3f, r0	; 63
    1018:	cd bf       	out	0x3d, r28	; 61
    101a:	6a 01       	movw	r12, r20
    101c:	12 2f       	mov	r17, r18
    101e:	b0 2e       	mov	r11, r16
    1020:	2b e3       	ldi	r18, 0x3B	; 59
    1022:	20 17       	cp	r18, r16
    1024:	20 f0       	brcs	.+8      	; 0x102e <dtoa_prf+0x42>
    1026:	ff 24       	eor	r15, r15
    1028:	f3 94       	inc	r15
    102a:	f0 0e       	add	r15, r16
    102c:	02 c0       	rjmp	.+4      	; 0x1032 <dtoa_prf+0x46>
    102e:	bc e3       	ldi	r27, 0x3C	; 60
    1030:	fb 2e       	mov	r15, r27
    1032:	0f 2d       	mov	r16, r15
    1034:	27 e0       	ldi	r18, 0x07	; 7
    1036:	ae 01       	movw	r20, r28
    1038:	4f 5f       	subi	r20, 0xFF	; 255
    103a:	5f 4f       	sbci	r21, 0xFF	; 255
    103c:	64 d1       	rcall	.+712    	; 0x1306 <__ftoa_engine>
    103e:	ac 01       	movw	r20, r24
    1040:	89 81       	ldd	r24, Y+1	; 0x01
    1042:	98 2f       	mov	r25, r24
    1044:	99 70       	andi	r25, 0x09	; 9
    1046:	91 30       	cpi	r25, 0x01	; 1
    1048:	31 f0       	breq	.+12     	; 0x1056 <dtoa_prf+0x6a>
    104a:	e1 fc       	sbrc	r14, 1
    104c:	06 c0       	rjmp	.+12     	; 0x105a <dtoa_prf+0x6e>
    104e:	e0 fe       	sbrs	r14, 0
    1050:	06 c0       	rjmp	.+12     	; 0x105e <dtoa_prf+0x72>
    1052:	90 e2       	ldi	r25, 0x20	; 32
    1054:	05 c0       	rjmp	.+10     	; 0x1060 <dtoa_prf+0x74>
    1056:	9d e2       	ldi	r25, 0x2D	; 45
    1058:	03 c0       	rjmp	.+6      	; 0x1060 <dtoa_prf+0x74>
    105a:	9b e2       	ldi	r25, 0x2B	; 43
    105c:	01 c0       	rjmp	.+2      	; 0x1060 <dtoa_prf+0x74>
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	ee 2d       	mov	r30, r14
    1062:	e0 71       	andi	r30, 0x10	; 16
    1064:	83 ff       	sbrs	r24, 3
    1066:	3c c0       	rjmp	.+120    	; 0x10e0 <dtoa_prf+0xf4>
    1068:	91 11       	cpse	r25, r1
    106a:	02 c0       	rjmp	.+4      	; 0x1070 <dtoa_prf+0x84>
    106c:	83 e0       	ldi	r24, 0x03	; 3
    106e:	01 c0       	rjmp	.+2      	; 0x1072 <dtoa_prf+0x86>
    1070:	84 e0       	ldi	r24, 0x04	; 4
    1072:	81 17       	cp	r24, r17
    1074:	18 f4       	brcc	.+6      	; 0x107c <dtoa_prf+0x90>
    1076:	21 2f       	mov	r18, r17
    1078:	28 1b       	sub	r18, r24
    107a:	01 c0       	rjmp	.+2      	; 0x107e <dtoa_prf+0x92>
    107c:	20 e0       	ldi	r18, 0x00	; 0
    107e:	e1 11       	cpse	r30, r1
    1080:	0b c0       	rjmp	.+22     	; 0x1098 <dtoa_prf+0xac>
    1082:	f6 01       	movw	r30, r12
    1084:	82 2f       	mov	r24, r18
    1086:	30 e2       	ldi	r19, 0x20	; 32
    1088:	88 23       	and	r24, r24
    108a:	19 f0       	breq	.+6      	; 0x1092 <dtoa_prf+0xa6>
    108c:	31 93       	st	Z+, r19
    108e:	81 50       	subi	r24, 0x01	; 1
    1090:	fb cf       	rjmp	.-10     	; 0x1088 <dtoa_prf+0x9c>
    1092:	c2 0e       	add	r12, r18
    1094:	d1 1c       	adc	r13, r1
    1096:	20 e0       	ldi	r18, 0x00	; 0
    1098:	99 23       	and	r25, r25
    109a:	29 f0       	breq	.+10     	; 0x10a6 <dtoa_prf+0xba>
    109c:	d6 01       	movw	r26, r12
    109e:	9c 93       	st	X, r25
    10a0:	f6 01       	movw	r30, r12
    10a2:	31 96       	adiw	r30, 0x01	; 1
    10a4:	6f 01       	movw	r12, r30
    10a6:	c6 01       	movw	r24, r12
    10a8:	03 96       	adiw	r24, 0x03	; 3
    10aa:	e2 fe       	sbrs	r14, 2
    10ac:	0a c0       	rjmp	.+20     	; 0x10c2 <dtoa_prf+0xd6>
    10ae:	3e e4       	ldi	r19, 0x4E	; 78
    10b0:	d6 01       	movw	r26, r12
    10b2:	3c 93       	st	X, r19
    10b4:	41 e4       	ldi	r20, 0x41	; 65
    10b6:	11 96       	adiw	r26, 0x01	; 1
    10b8:	4c 93       	st	X, r20
    10ba:	11 97       	sbiw	r26, 0x01	; 1
    10bc:	12 96       	adiw	r26, 0x02	; 2
    10be:	3c 93       	st	X, r19
    10c0:	06 c0       	rjmp	.+12     	; 0x10ce <dtoa_prf+0xe2>
    10c2:	3e e6       	ldi	r19, 0x6E	; 110
    10c4:	f6 01       	movw	r30, r12
    10c6:	30 83       	st	Z, r19
    10c8:	41 e6       	ldi	r20, 0x61	; 97
    10ca:	41 83       	std	Z+1, r20	; 0x01
    10cc:	32 83       	std	Z+2, r19	; 0x02
    10ce:	fc 01       	movw	r30, r24
    10d0:	32 2f       	mov	r19, r18
    10d2:	40 e2       	ldi	r20, 0x20	; 32
    10d4:	33 23       	and	r19, r19
    10d6:	09 f4       	brne	.+2      	; 0x10da <dtoa_prf+0xee>
    10d8:	42 c0       	rjmp	.+132    	; 0x115e <dtoa_prf+0x172>
    10da:	41 93       	st	Z+, r20
    10dc:	31 50       	subi	r19, 0x01	; 1
    10de:	fa cf       	rjmp	.-12     	; 0x10d4 <dtoa_prf+0xe8>
    10e0:	82 ff       	sbrs	r24, 2
    10e2:	44 c0       	rjmp	.+136    	; 0x116c <dtoa_prf+0x180>
    10e4:	91 11       	cpse	r25, r1
    10e6:	02 c0       	rjmp	.+4      	; 0x10ec <dtoa_prf+0x100>
    10e8:	83 e0       	ldi	r24, 0x03	; 3
    10ea:	01 c0       	rjmp	.+2      	; 0x10ee <dtoa_prf+0x102>
    10ec:	84 e0       	ldi	r24, 0x04	; 4
    10ee:	81 17       	cp	r24, r17
    10f0:	18 f4       	brcc	.+6      	; 0x10f8 <dtoa_prf+0x10c>
    10f2:	21 2f       	mov	r18, r17
    10f4:	28 1b       	sub	r18, r24
    10f6:	01 c0       	rjmp	.+2      	; 0x10fa <dtoa_prf+0x10e>
    10f8:	20 e0       	ldi	r18, 0x00	; 0
    10fa:	e1 11       	cpse	r30, r1
    10fc:	0b c0       	rjmp	.+22     	; 0x1114 <dtoa_prf+0x128>
    10fe:	f6 01       	movw	r30, r12
    1100:	82 2f       	mov	r24, r18
    1102:	30 e2       	ldi	r19, 0x20	; 32
    1104:	88 23       	and	r24, r24
    1106:	19 f0       	breq	.+6      	; 0x110e <dtoa_prf+0x122>
    1108:	31 93       	st	Z+, r19
    110a:	81 50       	subi	r24, 0x01	; 1
    110c:	fb cf       	rjmp	.-10     	; 0x1104 <dtoa_prf+0x118>
    110e:	c2 0e       	add	r12, r18
    1110:	d1 1c       	adc	r13, r1
    1112:	20 e0       	ldi	r18, 0x00	; 0
    1114:	99 23       	and	r25, r25
    1116:	29 f0       	breq	.+10     	; 0x1122 <dtoa_prf+0x136>
    1118:	d6 01       	movw	r26, r12
    111a:	9c 93       	st	X, r25
    111c:	f6 01       	movw	r30, r12
    111e:	31 96       	adiw	r30, 0x01	; 1
    1120:	6f 01       	movw	r12, r30
    1122:	c6 01       	movw	r24, r12
    1124:	03 96       	adiw	r24, 0x03	; 3
    1126:	e2 fe       	sbrs	r14, 2
    1128:	0b c0       	rjmp	.+22     	; 0x1140 <dtoa_prf+0x154>
    112a:	39 e4       	ldi	r19, 0x49	; 73
    112c:	d6 01       	movw	r26, r12
    112e:	3c 93       	st	X, r19
    1130:	3e e4       	ldi	r19, 0x4E	; 78
    1132:	11 96       	adiw	r26, 0x01	; 1
    1134:	3c 93       	st	X, r19
    1136:	11 97       	sbiw	r26, 0x01	; 1
    1138:	36 e4       	ldi	r19, 0x46	; 70
    113a:	12 96       	adiw	r26, 0x02	; 2
    113c:	3c 93       	st	X, r19
    113e:	07 c0       	rjmp	.+14     	; 0x114e <dtoa_prf+0x162>
    1140:	39 e6       	ldi	r19, 0x69	; 105
    1142:	f6 01       	movw	r30, r12
    1144:	30 83       	st	Z, r19
    1146:	3e e6       	ldi	r19, 0x6E	; 110
    1148:	31 83       	std	Z+1, r19	; 0x01
    114a:	36 e6       	ldi	r19, 0x66	; 102
    114c:	32 83       	std	Z+2, r19	; 0x02
    114e:	fc 01       	movw	r30, r24
    1150:	32 2f       	mov	r19, r18
    1152:	40 e2       	ldi	r20, 0x20	; 32
    1154:	33 23       	and	r19, r19
    1156:	19 f0       	breq	.+6      	; 0x115e <dtoa_prf+0x172>
    1158:	41 93       	st	Z+, r20
    115a:	31 50       	subi	r19, 0x01	; 1
    115c:	fb cf       	rjmp	.-10     	; 0x1154 <dtoa_prf+0x168>
    115e:	fc 01       	movw	r30, r24
    1160:	e2 0f       	add	r30, r18
    1162:	f1 1d       	adc	r31, r1
    1164:	10 82       	st	Z, r1
    1166:	8e ef       	ldi	r24, 0xFE	; 254
    1168:	9f ef       	ldi	r25, 0xFF	; 255
    116a:	b7 c0       	rjmp	.+366    	; 0x12da <dtoa_prf+0x2ee>
    116c:	f1 e0       	ldi	r31, 0x01	; 1
    116e:	91 11       	cpse	r25, r1
    1170:	01 c0       	rjmp	.+2      	; 0x1174 <dtoa_prf+0x188>
    1172:	f0 e0       	ldi	r31, 0x00	; 0
    1174:	6f 2f       	mov	r22, r31
    1176:	70 e0       	ldi	r23, 0x00	; 0
    1178:	14 16       	cp	r1, r20
    117a:	15 06       	cpc	r1, r21
    117c:	24 f4       	brge	.+8      	; 0x1186 <dtoa_prf+0x19a>
    117e:	9a 01       	movw	r18, r20
    1180:	2f 5f       	subi	r18, 0xFF	; 255
    1182:	3f 4f       	sbci	r19, 0xFF	; 255
    1184:	02 c0       	rjmp	.+4      	; 0x118a <dtoa_prf+0x19e>
    1186:	21 e0       	ldi	r18, 0x01	; 1
    1188:	30 e0       	ldi	r19, 0x00	; 0
    118a:	26 0f       	add	r18, r22
    118c:	37 1f       	adc	r19, r23
    118e:	bb 20       	and	r11, r11
    1190:	29 f0       	breq	.+10     	; 0x119c <dtoa_prf+0x1b0>
    1192:	6b 2d       	mov	r22, r11
    1194:	70 e0       	ldi	r23, 0x00	; 0
    1196:	6f 5f       	subi	r22, 0xFF	; 255
    1198:	7f 4f       	sbci	r23, 0xFF	; 255
    119a:	02 c0       	rjmp	.+4      	; 0x11a0 <dtoa_prf+0x1b4>
    119c:	60 e0       	ldi	r22, 0x00	; 0
    119e:	70 e0       	ldi	r23, 0x00	; 0
    11a0:	26 0f       	add	r18, r22
    11a2:	37 1f       	adc	r19, r23
    11a4:	61 2f       	mov	r22, r17
    11a6:	70 e0       	ldi	r23, 0x00	; 0
    11a8:	26 17       	cp	r18, r22
    11aa:	37 07       	cpc	r19, r23
    11ac:	1c f4       	brge	.+6      	; 0x11b4 <dtoa_prf+0x1c8>
    11ae:	12 1b       	sub	r17, r18
    11b0:	21 2f       	mov	r18, r17
    11b2:	01 c0       	rjmp	.+2      	; 0x11b6 <dtoa_prf+0x1ca>
    11b4:	20 e0       	ldi	r18, 0x00	; 0
    11b6:	3e 2d       	mov	r19, r14
    11b8:	38 71       	andi	r19, 0x18	; 24
    11ba:	59 f4       	brne	.+22     	; 0x11d2 <dtoa_prf+0x1e6>
    11bc:	d6 01       	movw	r26, r12
    11be:	32 2f       	mov	r19, r18
    11c0:	60 e2       	ldi	r22, 0x20	; 32
    11c2:	33 23       	and	r19, r19
    11c4:	19 f0       	breq	.+6      	; 0x11cc <dtoa_prf+0x1e0>
    11c6:	6d 93       	st	X+, r22
    11c8:	31 50       	subi	r19, 0x01	; 1
    11ca:	fb cf       	rjmp	.-10     	; 0x11c2 <dtoa_prf+0x1d6>
    11cc:	c2 0e       	add	r12, r18
    11ce:	d1 1c       	adc	r13, r1
    11d0:	20 e0       	ldi	r18, 0x00	; 0
    11d2:	ff 23       	and	r31, r31
    11d4:	31 f0       	breq	.+12     	; 0x11e2 <dtoa_prf+0x1f6>
    11d6:	d6 01       	movw	r26, r12
    11d8:	9c 93       	st	X, r25
    11da:	b6 01       	movw	r22, r12
    11dc:	6f 5f       	subi	r22, 0xFF	; 255
    11de:	7f 4f       	sbci	r23, 0xFF	; 255
    11e0:	6b 01       	movw	r12, r22
    11e2:	e1 11       	cpse	r30, r1
    11e4:	0b c0       	rjmp	.+22     	; 0x11fc <dtoa_prf+0x210>
    11e6:	f6 01       	movw	r30, r12
    11e8:	92 2f       	mov	r25, r18
    11ea:	30 e3       	ldi	r19, 0x30	; 48
    11ec:	99 23       	and	r25, r25
    11ee:	19 f0       	breq	.+6      	; 0x11f6 <dtoa_prf+0x20a>
    11f0:	31 93       	st	Z+, r19
    11f2:	91 50       	subi	r25, 0x01	; 1
    11f4:	fb cf       	rjmp	.-10     	; 0x11ec <dtoa_prf+0x200>
    11f6:	c2 0e       	add	r12, r18
    11f8:	d1 1c       	adc	r13, r1
    11fa:	20 e0       	ldi	r18, 0x00	; 0
    11fc:	9f 2d       	mov	r25, r15
    11fe:	94 0f       	add	r25, r20
    1200:	3a 81       	ldd	r19, Y+2	; 0x02
    1202:	78 2f       	mov	r23, r24
    1204:	70 71       	andi	r23, 0x10	; 16
    1206:	a7 2e       	mov	r10, r23
    1208:	84 ff       	sbrs	r24, 4
    120a:	03 c0       	rjmp	.+6      	; 0x1212 <dtoa_prf+0x226>
    120c:	31 33       	cpi	r19, 0x31	; 49
    120e:	09 f4       	brne	.+2      	; 0x1212 <dtoa_prf+0x226>
    1210:	91 50       	subi	r25, 0x01	; 1
    1212:	19 16       	cp	r1, r25
    1214:	24 f4       	brge	.+8      	; 0x121e <dtoa_prf+0x232>
    1216:	99 30       	cpi	r25, 0x09	; 9
    1218:	18 f0       	brcs	.+6      	; 0x1220 <dtoa_prf+0x234>
    121a:	98 e0       	ldi	r25, 0x08	; 8
    121c:	01 c0       	rjmp	.+2      	; 0x1220 <dtoa_prf+0x234>
    121e:	91 e0       	ldi	r25, 0x01	; 1
    1220:	e4 2f       	mov	r30, r20
    1222:	85 2f       	mov	r24, r21
    1224:	57 ff       	sbrs	r21, 7
    1226:	02 c0       	rjmp	.+4      	; 0x122c <dtoa_prf+0x240>
    1228:	e0 e0       	ldi	r30, 0x00	; 0
    122a:	80 e0       	ldi	r24, 0x00	; 0
    122c:	6e 2f       	mov	r22, r30
    122e:	78 2f       	mov	r23, r24
    1230:	e0 e0       	ldi	r30, 0x00	; 0
    1232:	f0 e0       	ldi	r31, 0x00	; 0
    1234:	ae e2       	ldi	r26, 0x2E	; 46
    1236:	9a 2e       	mov	r9, r26
    1238:	3a 01       	movw	r6, r20
    123a:	69 1a       	sub	r6, r25
    123c:	71 08       	sbc	r7, r1
    123e:	2a 01       	movw	r4, r20
    1240:	46 1a       	sub	r4, r22
    1242:	57 0a       	sbc	r5, r23
    1244:	0b 2d       	mov	r16, r11
    1246:	10 e0       	ldi	r17, 0x00	; 0
    1248:	11 95       	neg	r17
    124a:	01 95       	neg	r16
    124c:	11 09       	sbc	r17, r1
    124e:	6f 3f       	cpi	r22, 0xFF	; 255
    1250:	8f ef       	ldi	r24, 0xFF	; 255
    1252:	78 07       	cpc	r23, r24
    1254:	29 f4       	brne	.+10     	; 0x1260 <dtoa_prf+0x274>
    1256:	d6 01       	movw	r26, r12
    1258:	9c 92       	st	X, r9
    125a:	c6 01       	movw	r24, r12
    125c:	01 96       	adiw	r24, 0x01	; 1
    125e:	6c 01       	movw	r12, r24
    1260:	46 17       	cp	r20, r22
    1262:	57 07       	cpc	r21, r23
    1264:	84 f0       	brlt	.+32     	; 0x1286 <dtoa_prf+0x29a>
    1266:	66 16       	cp	r6, r22
    1268:	77 06       	cpc	r7, r23
    126a:	6c f4       	brge	.+26     	; 0x1286 <dtoa_prf+0x29a>
    126c:	7f 01       	movw	r14, r30
    126e:	e4 0c       	add	r14, r4
    1270:	f5 1c       	adc	r15, r5
    1272:	a1 e0       	ldi	r26, 0x01	; 1
    1274:	b0 e0       	ldi	r27, 0x00	; 0
    1276:	ac 0f       	add	r26, r28
    1278:	bd 1f       	adc	r27, r29
    127a:	ea 0e       	add	r14, r26
    127c:	fb 1e       	adc	r15, r27
    127e:	d7 01       	movw	r26, r14
    1280:	11 96       	adiw	r26, 0x01	; 1
    1282:	bc 90       	ld	r11, X
    1284:	02 c0       	rjmp	.+4      	; 0x128a <dtoa_prf+0x29e>
    1286:	90 e3       	ldi	r25, 0x30	; 48
    1288:	b9 2e       	mov	r11, r25
    128a:	61 50       	subi	r22, 0x01	; 1
    128c:	71 09       	sbc	r23, r1
    128e:	31 96       	adiw	r30, 0x01	; 1
    1290:	c6 01       	movw	r24, r12
    1292:	01 96       	adiw	r24, 0x01	; 1
    1294:	7c 01       	movw	r14, r24
    1296:	60 17       	cp	r22, r16
    1298:	71 07       	cpc	r23, r17
    129a:	24 f0       	brlt	.+8      	; 0x12a4 <dtoa_prf+0x2b8>
    129c:	d6 01       	movw	r26, r12
    129e:	bc 92       	st	X, r11
    12a0:	6c 01       	movw	r12, r24
    12a2:	d5 cf       	rjmp	.-86     	; 0x124e <dtoa_prf+0x262>
    12a4:	64 17       	cp	r22, r20
    12a6:	75 07       	cpc	r23, r21
    12a8:	41 f4       	brne	.+16     	; 0x12ba <dtoa_prf+0x2ce>
    12aa:	36 33       	cpi	r19, 0x36	; 54
    12ac:	20 f4       	brcc	.+8      	; 0x12b6 <dtoa_prf+0x2ca>
    12ae:	35 33       	cpi	r19, 0x35	; 53
    12b0:	21 f4       	brne	.+8      	; 0x12ba <dtoa_prf+0x2ce>
    12b2:	a1 10       	cpse	r10, r1
    12b4:	02 c0       	rjmp	.+4      	; 0x12ba <dtoa_prf+0x2ce>
    12b6:	81 e3       	ldi	r24, 0x31	; 49
    12b8:	b8 2e       	mov	r11, r24
    12ba:	f6 01       	movw	r30, r12
    12bc:	b0 82       	st	Z, r11
    12be:	f7 01       	movw	r30, r14
    12c0:	82 2f       	mov	r24, r18
    12c2:	90 e2       	ldi	r25, 0x20	; 32
    12c4:	88 23       	and	r24, r24
    12c6:	19 f0       	breq	.+6      	; 0x12ce <dtoa_prf+0x2e2>
    12c8:	91 93       	st	Z+, r25
    12ca:	81 50       	subi	r24, 0x01	; 1
    12cc:	fb cf       	rjmp	.-10     	; 0x12c4 <dtoa_prf+0x2d8>
    12ce:	f7 01       	movw	r30, r14
    12d0:	e2 0f       	add	r30, r18
    12d2:	f1 1d       	adc	r31, r1
    12d4:	10 82       	st	Z, r1
    12d6:	80 e0       	ldi	r24, 0x00	; 0
    12d8:	90 e0       	ldi	r25, 0x00	; 0
    12da:	29 96       	adiw	r28, 0x09	; 9
    12dc:	0f b6       	in	r0, 0x3f	; 63
    12de:	f8 94       	cli
    12e0:	de bf       	out	0x3e, r29	; 62
    12e2:	0f be       	out	0x3f, r0	; 63
    12e4:	cd bf       	out	0x3d, r28	; 61
    12e6:	df 91       	pop	r29
    12e8:	cf 91       	pop	r28
    12ea:	1f 91       	pop	r17
    12ec:	0f 91       	pop	r16
    12ee:	ff 90       	pop	r15
    12f0:	ef 90       	pop	r14
    12f2:	df 90       	pop	r13
    12f4:	cf 90       	pop	r12
    12f6:	bf 90       	pop	r11
    12f8:	af 90       	pop	r10
    12fa:	9f 90       	pop	r9
    12fc:	7f 90       	pop	r7
    12fe:	6f 90       	pop	r6
    1300:	5f 90       	pop	r5
    1302:	4f 90       	pop	r4
    1304:	08 95       	ret

00001306 <__ftoa_engine>:
    1306:	28 30       	cpi	r18, 0x08	; 8
    1308:	08 f0       	brcs	.+2      	; 0x130c <__ftoa_engine+0x6>
    130a:	27 e0       	ldi	r18, 0x07	; 7
    130c:	33 27       	eor	r19, r19
    130e:	da 01       	movw	r26, r20
    1310:	99 0f       	add	r25, r25
    1312:	31 1d       	adc	r19, r1
    1314:	87 fd       	sbrc	r24, 7
    1316:	91 60       	ori	r25, 0x01	; 1
    1318:	00 96       	adiw	r24, 0x00	; 0
    131a:	61 05       	cpc	r22, r1
    131c:	71 05       	cpc	r23, r1
    131e:	39 f4       	brne	.+14     	; 0x132e <__ftoa_engine+0x28>
    1320:	32 60       	ori	r19, 0x02	; 2
    1322:	2e 5f       	subi	r18, 0xFE	; 254
    1324:	3d 93       	st	X+, r19
    1326:	30 e3       	ldi	r19, 0x30	; 48
    1328:	2a 95       	dec	r18
    132a:	e1 f7       	brne	.-8      	; 0x1324 <__ftoa_engine+0x1e>
    132c:	08 95       	ret
    132e:	9f 3f       	cpi	r25, 0xFF	; 255
    1330:	30 f0       	brcs	.+12     	; 0x133e <__ftoa_engine+0x38>
    1332:	80 38       	cpi	r24, 0x80	; 128
    1334:	71 05       	cpc	r23, r1
    1336:	61 05       	cpc	r22, r1
    1338:	09 f0       	breq	.+2      	; 0x133c <__ftoa_engine+0x36>
    133a:	3c 5f       	subi	r19, 0xFC	; 252
    133c:	3c 5f       	subi	r19, 0xFC	; 252
    133e:	3d 93       	st	X+, r19
    1340:	91 30       	cpi	r25, 0x01	; 1
    1342:	08 f0       	brcs	.+2      	; 0x1346 <__ftoa_engine+0x40>
    1344:	80 68       	ori	r24, 0x80	; 128
    1346:	91 1d       	adc	r25, r1
    1348:	df 93       	push	r29
    134a:	cf 93       	push	r28
    134c:	1f 93       	push	r17
    134e:	0f 93       	push	r16
    1350:	ff 92       	push	r15
    1352:	ef 92       	push	r14
    1354:	19 2f       	mov	r17, r25
    1356:	98 7f       	andi	r25, 0xF8	; 248
    1358:	96 95       	lsr	r25
    135a:	e9 2f       	mov	r30, r25
    135c:	96 95       	lsr	r25
    135e:	96 95       	lsr	r25
    1360:	e9 0f       	add	r30, r25
    1362:	ff 27       	eor	r31, r31
    1364:	ee 53       	subi	r30, 0x3E	; 62
    1366:	ff 4f       	sbci	r31, 0xFF	; 255
    1368:	99 27       	eor	r25, r25
    136a:	33 27       	eor	r19, r19
    136c:	ee 24       	eor	r14, r14
    136e:	ff 24       	eor	r15, r15
    1370:	a7 01       	movw	r20, r14
    1372:	e7 01       	movw	r28, r14
    1374:	05 90       	lpm	r0, Z+
    1376:	08 94       	sec
    1378:	07 94       	ror	r0
    137a:	28 f4       	brcc	.+10     	; 0x1386 <__ftoa_engine+0x80>
    137c:	36 0f       	add	r19, r22
    137e:	e7 1e       	adc	r14, r23
    1380:	f8 1e       	adc	r15, r24
    1382:	49 1f       	adc	r20, r25
    1384:	51 1d       	adc	r21, r1
    1386:	66 0f       	add	r22, r22
    1388:	77 1f       	adc	r23, r23
    138a:	88 1f       	adc	r24, r24
    138c:	99 1f       	adc	r25, r25
    138e:	06 94       	lsr	r0
    1390:	a1 f7       	brne	.-24     	; 0x137a <__ftoa_engine+0x74>
    1392:	05 90       	lpm	r0, Z+
    1394:	07 94       	ror	r0
    1396:	28 f4       	brcc	.+10     	; 0x13a2 <__ftoa_engine+0x9c>
    1398:	e7 0e       	add	r14, r23
    139a:	f8 1e       	adc	r15, r24
    139c:	49 1f       	adc	r20, r25
    139e:	56 1f       	adc	r21, r22
    13a0:	c1 1d       	adc	r28, r1
    13a2:	77 0f       	add	r23, r23
    13a4:	88 1f       	adc	r24, r24
    13a6:	99 1f       	adc	r25, r25
    13a8:	66 1f       	adc	r22, r22
    13aa:	06 94       	lsr	r0
    13ac:	a1 f7       	brne	.-24     	; 0x1396 <__ftoa_engine+0x90>
    13ae:	05 90       	lpm	r0, Z+
    13b0:	07 94       	ror	r0
    13b2:	28 f4       	brcc	.+10     	; 0x13be <__ftoa_engine+0xb8>
    13b4:	f8 0e       	add	r15, r24
    13b6:	49 1f       	adc	r20, r25
    13b8:	56 1f       	adc	r21, r22
    13ba:	c7 1f       	adc	r28, r23
    13bc:	d1 1d       	adc	r29, r1
    13be:	88 0f       	add	r24, r24
    13c0:	99 1f       	adc	r25, r25
    13c2:	66 1f       	adc	r22, r22
    13c4:	77 1f       	adc	r23, r23
    13c6:	06 94       	lsr	r0
    13c8:	a1 f7       	brne	.-24     	; 0x13b2 <__ftoa_engine+0xac>
    13ca:	05 90       	lpm	r0, Z+
    13cc:	07 94       	ror	r0
    13ce:	20 f4       	brcc	.+8      	; 0x13d8 <__ftoa_engine+0xd2>
    13d0:	49 0f       	add	r20, r25
    13d2:	56 1f       	adc	r21, r22
    13d4:	c7 1f       	adc	r28, r23
    13d6:	d8 1f       	adc	r29, r24
    13d8:	99 0f       	add	r25, r25
    13da:	66 1f       	adc	r22, r22
    13dc:	77 1f       	adc	r23, r23
    13de:	88 1f       	adc	r24, r24
    13e0:	06 94       	lsr	r0
    13e2:	a9 f7       	brne	.-22     	; 0x13ce <__ftoa_engine+0xc8>
    13e4:	84 91       	lpm	r24, Z
    13e6:	10 95       	com	r17
    13e8:	17 70       	andi	r17, 0x07	; 7
    13ea:	41 f0       	breq	.+16     	; 0x13fc <__ftoa_engine+0xf6>
    13ec:	d6 95       	lsr	r29
    13ee:	c7 95       	ror	r28
    13f0:	57 95       	ror	r21
    13f2:	47 95       	ror	r20
    13f4:	f7 94       	ror	r15
    13f6:	e7 94       	ror	r14
    13f8:	1a 95       	dec	r17
    13fa:	c1 f7       	brne	.-16     	; 0x13ec <__ftoa_engine+0xe6>
    13fc:	e8 e6       	ldi	r30, 0x68	; 104
    13fe:	f0 e0       	ldi	r31, 0x00	; 0
    1400:	68 94       	set
    1402:	15 90       	lpm	r1, Z+
    1404:	15 91       	lpm	r17, Z+
    1406:	35 91       	lpm	r19, Z+
    1408:	65 91       	lpm	r22, Z+
    140a:	95 91       	lpm	r25, Z+
    140c:	05 90       	lpm	r0, Z+
    140e:	7f e2       	ldi	r23, 0x2F	; 47
    1410:	73 95       	inc	r23
    1412:	e1 18       	sub	r14, r1
    1414:	f1 0a       	sbc	r15, r17
    1416:	43 0b       	sbc	r20, r19
    1418:	56 0b       	sbc	r21, r22
    141a:	c9 0b       	sbc	r28, r25
    141c:	d0 09       	sbc	r29, r0
    141e:	c0 f7       	brcc	.-16     	; 0x1410 <__ftoa_engine+0x10a>
    1420:	e1 0c       	add	r14, r1
    1422:	f1 1e       	adc	r15, r17
    1424:	43 1f       	adc	r20, r19
    1426:	56 1f       	adc	r21, r22
    1428:	c9 1f       	adc	r28, r25
    142a:	d0 1d       	adc	r29, r0
    142c:	7e f4       	brtc	.+30     	; 0x144c <__ftoa_engine+0x146>
    142e:	70 33       	cpi	r23, 0x30	; 48
    1430:	11 f4       	brne	.+4      	; 0x1436 <__ftoa_engine+0x130>
    1432:	8a 95       	dec	r24
    1434:	e6 cf       	rjmp	.-52     	; 0x1402 <__ftoa_engine+0xfc>
    1436:	e8 94       	clt
    1438:	01 50       	subi	r16, 0x01	; 1
    143a:	30 f0       	brcs	.+12     	; 0x1448 <__ftoa_engine+0x142>
    143c:	08 0f       	add	r16, r24
    143e:	0a f4       	brpl	.+2      	; 0x1442 <__ftoa_engine+0x13c>
    1440:	00 27       	eor	r16, r16
    1442:	02 17       	cp	r16, r18
    1444:	08 f4       	brcc	.+2      	; 0x1448 <__ftoa_engine+0x142>
    1446:	20 2f       	mov	r18, r16
    1448:	23 95       	inc	r18
    144a:	02 2f       	mov	r16, r18
    144c:	7a 33       	cpi	r23, 0x3A	; 58
    144e:	28 f0       	brcs	.+10     	; 0x145a <__ftoa_engine+0x154>
    1450:	79 e3       	ldi	r23, 0x39	; 57
    1452:	7d 93       	st	X+, r23
    1454:	2a 95       	dec	r18
    1456:	e9 f7       	brne	.-6      	; 0x1452 <__ftoa_engine+0x14c>
    1458:	10 c0       	rjmp	.+32     	; 0x147a <__ftoa_engine+0x174>
    145a:	7d 93       	st	X+, r23
    145c:	2a 95       	dec	r18
    145e:	89 f6       	brne	.-94     	; 0x1402 <__ftoa_engine+0xfc>
    1460:	06 94       	lsr	r0
    1462:	97 95       	ror	r25
    1464:	67 95       	ror	r22
    1466:	37 95       	ror	r19
    1468:	17 95       	ror	r17
    146a:	17 94       	ror	r1
    146c:	e1 18       	sub	r14, r1
    146e:	f1 0a       	sbc	r15, r17
    1470:	43 0b       	sbc	r20, r19
    1472:	56 0b       	sbc	r21, r22
    1474:	c9 0b       	sbc	r28, r25
    1476:	d0 09       	sbc	r29, r0
    1478:	98 f0       	brcs	.+38     	; 0x14a0 <__ftoa_engine+0x19a>
    147a:	23 95       	inc	r18
    147c:	7e 91       	ld	r23, -X
    147e:	73 95       	inc	r23
    1480:	7a 33       	cpi	r23, 0x3A	; 58
    1482:	08 f0       	brcs	.+2      	; 0x1486 <__ftoa_engine+0x180>
    1484:	70 e3       	ldi	r23, 0x30	; 48
    1486:	7c 93       	st	X, r23
    1488:	20 13       	cpse	r18, r16
    148a:	b8 f7       	brcc	.-18     	; 0x147a <__ftoa_engine+0x174>
    148c:	7e 91       	ld	r23, -X
    148e:	70 61       	ori	r23, 0x10	; 16
    1490:	7d 93       	st	X+, r23
    1492:	30 f0       	brcs	.+12     	; 0x14a0 <__ftoa_engine+0x19a>
    1494:	83 95       	inc	r24
    1496:	71 e3       	ldi	r23, 0x31	; 49
    1498:	7d 93       	st	X+, r23
    149a:	70 e3       	ldi	r23, 0x30	; 48
    149c:	2a 95       	dec	r18
    149e:	e1 f7       	brne	.-8      	; 0x1498 <__ftoa_engine+0x192>
    14a0:	11 24       	eor	r1, r1
    14a2:	ef 90       	pop	r14
    14a4:	ff 90       	pop	r15
    14a6:	0f 91       	pop	r16
    14a8:	1f 91       	pop	r17
    14aa:	cf 91       	pop	r28
    14ac:	df 91       	pop	r29
    14ae:	99 27       	eor	r25, r25
    14b0:	87 fd       	sbrc	r24, 7
    14b2:	90 95       	com	r25
    14b4:	08 95       	ret

000014b6 <strnlen_P>:
    14b6:	fc 01       	movw	r30, r24
    14b8:	05 90       	lpm	r0, Z+
    14ba:	61 50       	subi	r22, 0x01	; 1
    14bc:	70 40       	sbci	r23, 0x00	; 0
    14be:	01 10       	cpse	r0, r1
    14c0:	d8 f7       	brcc	.-10     	; 0x14b8 <strnlen_P+0x2>
    14c2:	80 95       	com	r24
    14c4:	90 95       	com	r25
    14c6:	8e 0f       	add	r24, r30
    14c8:	9f 1f       	adc	r25, r31
    14ca:	08 95       	ret

000014cc <memcpy>:
    14cc:	fb 01       	movw	r30, r22
    14ce:	dc 01       	movw	r26, r24
    14d0:	02 c0       	rjmp	.+4      	; 0x14d6 <memcpy+0xa>
    14d2:	01 90       	ld	r0, Z+
    14d4:	0d 92       	st	X+, r0
    14d6:	41 50       	subi	r20, 0x01	; 1
    14d8:	50 40       	sbci	r21, 0x00	; 0
    14da:	d8 f7       	brcc	.-10     	; 0x14d2 <memcpy+0x6>
    14dc:	08 95       	ret

000014de <strnlen>:
    14de:	fc 01       	movw	r30, r24
    14e0:	61 50       	subi	r22, 0x01	; 1
    14e2:	70 40       	sbci	r23, 0x00	; 0
    14e4:	01 90       	ld	r0, Z+
    14e6:	01 10       	cpse	r0, r1
    14e8:	d8 f7       	brcc	.-10     	; 0x14e0 <strnlen+0x2>
    14ea:	80 95       	com	r24
    14ec:	90 95       	com	r25
    14ee:	8e 0f       	add	r24, r30
    14f0:	9f 1f       	adc	r25, r31
    14f2:	08 95       	ret

000014f4 <fputc>:
    14f4:	0f 93       	push	r16
    14f6:	1f 93       	push	r17
    14f8:	cf 93       	push	r28
    14fa:	df 93       	push	r29
    14fc:	fb 01       	movw	r30, r22
    14fe:	23 81       	ldd	r18, Z+3	; 0x03
    1500:	21 fd       	sbrc	r18, 1
    1502:	03 c0       	rjmp	.+6      	; 0x150a <fputc+0x16>
    1504:	8f ef       	ldi	r24, 0xFF	; 255
    1506:	9f ef       	ldi	r25, 0xFF	; 255
    1508:	28 c0       	rjmp	.+80     	; 0x155a <fputc+0x66>
    150a:	22 ff       	sbrs	r18, 2
    150c:	16 c0       	rjmp	.+44     	; 0x153a <fputc+0x46>
    150e:	46 81       	ldd	r20, Z+6	; 0x06
    1510:	57 81       	ldd	r21, Z+7	; 0x07
    1512:	24 81       	ldd	r18, Z+4	; 0x04
    1514:	35 81       	ldd	r19, Z+5	; 0x05
    1516:	42 17       	cp	r20, r18
    1518:	53 07       	cpc	r21, r19
    151a:	44 f4       	brge	.+16     	; 0x152c <fputc+0x38>
    151c:	a0 81       	ld	r26, Z
    151e:	b1 81       	ldd	r27, Z+1	; 0x01
    1520:	9d 01       	movw	r18, r26
    1522:	2f 5f       	subi	r18, 0xFF	; 255
    1524:	3f 4f       	sbci	r19, 0xFF	; 255
    1526:	31 83       	std	Z+1, r19	; 0x01
    1528:	20 83       	st	Z, r18
    152a:	8c 93       	st	X, r24
    152c:	26 81       	ldd	r18, Z+6	; 0x06
    152e:	37 81       	ldd	r19, Z+7	; 0x07
    1530:	2f 5f       	subi	r18, 0xFF	; 255
    1532:	3f 4f       	sbci	r19, 0xFF	; 255
    1534:	37 83       	std	Z+7, r19	; 0x07
    1536:	26 83       	std	Z+6, r18	; 0x06
    1538:	10 c0       	rjmp	.+32     	; 0x155a <fputc+0x66>
    153a:	eb 01       	movw	r28, r22
    153c:	09 2f       	mov	r16, r25
    153e:	18 2f       	mov	r17, r24
    1540:	00 84       	ldd	r0, Z+8	; 0x08
    1542:	f1 85       	ldd	r31, Z+9	; 0x09
    1544:	e0 2d       	mov	r30, r0
    1546:	09 95       	icall
    1548:	89 2b       	or	r24, r25
    154a:	e1 f6       	brne	.-72     	; 0x1504 <fputc+0x10>
    154c:	8e 81       	ldd	r24, Y+6	; 0x06
    154e:	9f 81       	ldd	r25, Y+7	; 0x07
    1550:	01 96       	adiw	r24, 0x01	; 1
    1552:	9f 83       	std	Y+7, r25	; 0x07
    1554:	8e 83       	std	Y+6, r24	; 0x06
    1556:	81 2f       	mov	r24, r17
    1558:	90 2f       	mov	r25, r16
    155a:	df 91       	pop	r29
    155c:	cf 91       	pop	r28
    155e:	1f 91       	pop	r17
    1560:	0f 91       	pop	r16
    1562:	08 95       	ret

00001564 <__ultoa_invert>:
    1564:	fa 01       	movw	r30, r20
    1566:	aa 27       	eor	r26, r26
    1568:	28 30       	cpi	r18, 0x08	; 8
    156a:	51 f1       	breq	.+84     	; 0x15c0 <__ultoa_invert+0x5c>
    156c:	20 31       	cpi	r18, 0x10	; 16
    156e:	81 f1       	breq	.+96     	; 0x15d0 <__ultoa_invert+0x6c>
    1570:	e8 94       	clt
    1572:	6f 93       	push	r22
    1574:	6e 7f       	andi	r22, 0xFE	; 254
    1576:	6e 5f       	subi	r22, 0xFE	; 254
    1578:	7f 4f       	sbci	r23, 0xFF	; 255
    157a:	8f 4f       	sbci	r24, 0xFF	; 255
    157c:	9f 4f       	sbci	r25, 0xFF	; 255
    157e:	af 4f       	sbci	r26, 0xFF	; 255
    1580:	b1 e0       	ldi	r27, 0x01	; 1
    1582:	3e d0       	rcall	.+124    	; 0x1600 <__ultoa_invert+0x9c>
    1584:	b4 e0       	ldi	r27, 0x04	; 4
    1586:	3c d0       	rcall	.+120    	; 0x1600 <__ultoa_invert+0x9c>
    1588:	67 0f       	add	r22, r23
    158a:	78 1f       	adc	r23, r24
    158c:	89 1f       	adc	r24, r25
    158e:	9a 1f       	adc	r25, r26
    1590:	a1 1d       	adc	r26, r1
    1592:	68 0f       	add	r22, r24
    1594:	79 1f       	adc	r23, r25
    1596:	8a 1f       	adc	r24, r26
    1598:	91 1d       	adc	r25, r1
    159a:	a1 1d       	adc	r26, r1
    159c:	6a 0f       	add	r22, r26
    159e:	71 1d       	adc	r23, r1
    15a0:	81 1d       	adc	r24, r1
    15a2:	91 1d       	adc	r25, r1
    15a4:	a1 1d       	adc	r26, r1
    15a6:	20 d0       	rcall	.+64     	; 0x15e8 <__ultoa_invert+0x84>
    15a8:	09 f4       	brne	.+2      	; 0x15ac <__ultoa_invert+0x48>
    15aa:	68 94       	set
    15ac:	3f 91       	pop	r19
    15ae:	2a e0       	ldi	r18, 0x0A	; 10
    15b0:	26 9f       	mul	r18, r22
    15b2:	11 24       	eor	r1, r1
    15b4:	30 19       	sub	r19, r0
    15b6:	30 5d       	subi	r19, 0xD0	; 208
    15b8:	31 93       	st	Z+, r19
    15ba:	de f6       	brtc	.-74     	; 0x1572 <__ultoa_invert+0xe>
    15bc:	cf 01       	movw	r24, r30
    15be:	08 95       	ret
    15c0:	46 2f       	mov	r20, r22
    15c2:	47 70       	andi	r20, 0x07	; 7
    15c4:	40 5d       	subi	r20, 0xD0	; 208
    15c6:	41 93       	st	Z+, r20
    15c8:	b3 e0       	ldi	r27, 0x03	; 3
    15ca:	0f d0       	rcall	.+30     	; 0x15ea <__ultoa_invert+0x86>
    15cc:	c9 f7       	brne	.-14     	; 0x15c0 <__ultoa_invert+0x5c>
    15ce:	f6 cf       	rjmp	.-20     	; 0x15bc <__ultoa_invert+0x58>
    15d0:	46 2f       	mov	r20, r22
    15d2:	4f 70       	andi	r20, 0x0F	; 15
    15d4:	40 5d       	subi	r20, 0xD0	; 208
    15d6:	4a 33       	cpi	r20, 0x3A	; 58
    15d8:	18 f0       	brcs	.+6      	; 0x15e0 <__ultoa_invert+0x7c>
    15da:	49 5d       	subi	r20, 0xD9	; 217
    15dc:	31 fd       	sbrc	r19, 1
    15de:	40 52       	subi	r20, 0x20	; 32
    15e0:	41 93       	st	Z+, r20
    15e2:	02 d0       	rcall	.+4      	; 0x15e8 <__ultoa_invert+0x84>
    15e4:	a9 f7       	brne	.-22     	; 0x15d0 <__ultoa_invert+0x6c>
    15e6:	ea cf       	rjmp	.-44     	; 0x15bc <__ultoa_invert+0x58>
    15e8:	b4 e0       	ldi	r27, 0x04	; 4
    15ea:	a6 95       	lsr	r26
    15ec:	97 95       	ror	r25
    15ee:	87 95       	ror	r24
    15f0:	77 95       	ror	r23
    15f2:	67 95       	ror	r22
    15f4:	ba 95       	dec	r27
    15f6:	c9 f7       	brne	.-14     	; 0x15ea <__ultoa_invert+0x86>
    15f8:	00 97       	sbiw	r24, 0x00	; 0
    15fa:	61 05       	cpc	r22, r1
    15fc:	71 05       	cpc	r23, r1
    15fe:	08 95       	ret
    1600:	9b 01       	movw	r18, r22
    1602:	ac 01       	movw	r20, r24
    1604:	0a 2e       	mov	r0, r26
    1606:	06 94       	lsr	r0
    1608:	57 95       	ror	r21
    160a:	47 95       	ror	r20
    160c:	37 95       	ror	r19
    160e:	27 95       	ror	r18
    1610:	ba 95       	dec	r27
    1612:	c9 f7       	brne	.-14     	; 0x1606 <__ultoa_invert+0xa2>
    1614:	62 0f       	add	r22, r18
    1616:	73 1f       	adc	r23, r19
    1618:	84 1f       	adc	r24, r20
    161a:	95 1f       	adc	r25, r21
    161c:	a0 1d       	adc	r26, r0
    161e:	08 95       	ret

00001620 <__prologue_saves__>:
    1620:	2f 92       	push	r2
    1622:	3f 92       	push	r3
    1624:	4f 92       	push	r4
    1626:	5f 92       	push	r5
    1628:	6f 92       	push	r6
    162a:	7f 92       	push	r7
    162c:	8f 92       	push	r8
    162e:	9f 92       	push	r9
    1630:	af 92       	push	r10
    1632:	bf 92       	push	r11
    1634:	cf 92       	push	r12
    1636:	df 92       	push	r13
    1638:	ef 92       	push	r14
    163a:	ff 92       	push	r15
    163c:	0f 93       	push	r16
    163e:	1f 93       	push	r17
    1640:	cf 93       	push	r28
    1642:	df 93       	push	r29
    1644:	cd b7       	in	r28, 0x3d	; 61
    1646:	de b7       	in	r29, 0x3e	; 62
    1648:	ca 1b       	sub	r28, r26
    164a:	db 0b       	sbc	r29, r27
    164c:	0f b6       	in	r0, 0x3f	; 63
    164e:	f8 94       	cli
    1650:	de bf       	out	0x3e, r29	; 62
    1652:	0f be       	out	0x3f, r0	; 63
    1654:	cd bf       	out	0x3d, r28	; 61
    1656:	09 94       	ijmp

00001658 <__epilogue_restores__>:
    1658:	2a 88       	ldd	r2, Y+18	; 0x12
    165a:	39 88       	ldd	r3, Y+17	; 0x11
    165c:	48 88       	ldd	r4, Y+16	; 0x10
    165e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1660:	6e 84       	ldd	r6, Y+14	; 0x0e
    1662:	7d 84       	ldd	r7, Y+13	; 0x0d
    1664:	8c 84       	ldd	r8, Y+12	; 0x0c
    1666:	9b 84       	ldd	r9, Y+11	; 0x0b
    1668:	aa 84       	ldd	r10, Y+10	; 0x0a
    166a:	b9 84       	ldd	r11, Y+9	; 0x09
    166c:	c8 84       	ldd	r12, Y+8	; 0x08
    166e:	df 80       	ldd	r13, Y+7	; 0x07
    1670:	ee 80       	ldd	r14, Y+6	; 0x06
    1672:	fd 80       	ldd	r15, Y+5	; 0x05
    1674:	0c 81       	ldd	r16, Y+4	; 0x04
    1676:	1b 81       	ldd	r17, Y+3	; 0x03
    1678:	aa 81       	ldd	r26, Y+2	; 0x02
    167a:	b9 81       	ldd	r27, Y+1	; 0x01
    167c:	ce 0f       	add	r28, r30
    167e:	d1 1d       	adc	r29, r1
    1680:	0f b6       	in	r0, 0x3f	; 63
    1682:	f8 94       	cli
    1684:	de bf       	out	0x3e, r29	; 62
    1686:	0f be       	out	0x3f, r0	; 63
    1688:	cd bf       	out	0x3d, r28	; 61
    168a:	ed 01       	movw	r28, r26
    168c:	08 95       	ret

0000168e <_exit>:
    168e:	f8 94       	cli

00001690 <__stop_program>:
    1690:	ff cf       	rjmp	.-2      	; 0x1690 <__stop_program>
