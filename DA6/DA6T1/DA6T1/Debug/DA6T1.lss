
DA6T1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00001030  000010c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001030  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000020a  00800106  00800106  000010ca  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001128  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00001168  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007c4  00000000  00000000  000011f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000033f  00000000  00000000  000019bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a0  00000000  00000000  00001cfb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000184  00000000  00000000  0000209c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002d8  00000000  00000000  00002220  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000054e  00000000  00000000  000024f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00002a46  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 24 01 	jmp	0x248	; 0x248 <__ctors_end>
       4:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
       8:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
       c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      10:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      14:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      18:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      1c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      20:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      24:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      28:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      2c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      30:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      34:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      38:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      3c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      40:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      44:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      48:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      4c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      50:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      54:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      58:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      5c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      60:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      64:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>

00000068 <CHARSET>:
      68:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      78:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      88:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      98:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      a8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      b8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      c8:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
      d8:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
      e8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
      f8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     108:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     118:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     128:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     138:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     148:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     158:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     168:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     178:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     188:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     198:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1a8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1b8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1c8:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     1d8:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     1e8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     1f8:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     208:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     218:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     228:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     238:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000248 <__ctors_end>:
     248:	11 24       	eor	r1, r1
     24a:	1f be       	out	0x3f, r1	; 63
     24c:	cf ef       	ldi	r28, 0xFF	; 255
     24e:	d8 e0       	ldi	r29, 0x08	; 8
     250:	de bf       	out	0x3e, r29	; 62
     252:	cd bf       	out	0x3d, r28	; 61

00000254 <__do_copy_data>:
     254:	11 e0       	ldi	r17, 0x01	; 1
     256:	a0 e0       	ldi	r26, 0x00	; 0
     258:	b1 e0       	ldi	r27, 0x01	; 1
     25a:	e0 e3       	ldi	r30, 0x30	; 48
     25c:	f0 e1       	ldi	r31, 0x10	; 16
     25e:	02 c0       	rjmp	.+4      	; 0x264 <__do_copy_data+0x10>
     260:	05 90       	lpm	r0, Z+
     262:	0d 92       	st	X+, r0
     264:	a6 30       	cpi	r26, 0x06	; 6
     266:	b1 07       	cpc	r27, r17
     268:	d9 f7       	brne	.-10     	; 0x260 <__do_copy_data+0xc>

0000026a <__do_clear_bss>:
     26a:	23 e0       	ldi	r18, 0x03	; 3
     26c:	a6 e0       	ldi	r26, 0x06	; 6
     26e:	b1 e0       	ldi	r27, 0x01	; 1
     270:	01 c0       	rjmp	.+2      	; 0x274 <.do_clear_bss_start>

00000272 <.do_clear_bss_loop>:
     272:	1d 92       	st	X+, r1

00000274 <.do_clear_bss_start>:
     274:	a0 31       	cpi	r26, 0x10	; 16
     276:	b2 07       	cpc	r27, r18
     278:	e1 f7       	brne	.-8      	; 0x272 <.do_clear_bss_loop>
     27a:	0e 94 4a 01 	call	0x294	; 0x294 <main>
     27e:	0c 94 16 08 	jmp	0x102c	; 0x102c <_exit>

00000282 <__bad_interrupt>:
     282:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000286 <ADCstart>:
}
}

void ADCstart()
{
	ADMUX = (0<<REFS1)| // Reference Selection Bits
     286:	82 e4       	ldi	r24, 0x42	; 66
     288:	80 93 7c 00 	sts	0x007C, r24
	(1<<REFS0)| //use AVcc as reference
	(0<<ADLAR)|	//ADC Left adjust Result
	(0<<MUX2)|	// Analog Channel Selection Bits
	(1<<MUX1)|	// ADC2 (PC2, PIN25)
	(0<<MUX0);
	ADCSRA = (1<<ADEN)|	//ADC Enable
     28c:	85 e8       	ldi	r24, 0x85	; 133
     28e:	80 93 7a 00 	sts	0x007A, r24
     292:	08 95       	ret

00000294 <main>:


int main(void)
{
	int Y = 0; // Change Y
	Ratio = 500.0/1024.0; // Ratio to calculate the actual temperature
     294:	80 e0       	ldi	r24, 0x00	; 0
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	aa ef       	ldi	r26, 0xFA	; 250
     29a:	be e3       	ldi	r27, 0x3E	; 62
     29c:	80 93 08 03 	sts	0x0308, r24
     2a0:	90 93 09 03 	sts	0x0309, r25
     2a4:	a0 93 0a 03 	sts	0x030A, r26
     2a8:	b0 93 0b 03 	sts	0x030B, r27
	ADCstart(); // initialize the ADC port
     2ac:	0e 94 43 01 	call	0x286	; 0x286 <ADCstart>
	nokia_lcd_init();// Initiaize LCD
     2b0:	0e 94 2c 02 	call	0x458	; 0x458 <nokia_lcd_init>
char outs[8]; // output buffer


int main(void)
{
	int Y = 0; // Change Y
     2b4:	c1 2c       	mov	r12, r1
     2b6:	d1 2c       	mov	r13, r1
	Ratio = 500.0/1024.0; // Ratio to calculate the actual temperature
	ADCstart(); // initialize the ADC port
	nokia_lcd_init();// Initiaize LCD
while(1)
{
	X = 4; // number of values taken before transmission
     2b8:	68 94       	set
     2ba:	88 24       	eor	r8, r8
     2bc:	82 f8       	bld	r8, 2
     2be:	91 2c       	mov	r9, r1
	ADCvalue = 0; // reset temperature value
	while(X) // stay here until 4 reading are taken
	{
		ADCSRA |= (1<<ADSC);// write one to ADSC bit to start conversion
     2c0:	ca e7       	ldi	r28, 0x7A	; 122
     2c2:	d0 e0       	ldi	r29, 0x00	; 0
		while(ADCSRA & (1<<ADSC))// wait until conversion is complete
		{
		}
		ADCvalue += (Ratio*ADC);// save temperature
     2c4:	0f 2e       	mov	r0, r31
     2c6:	f8 e7       	ldi	r31, 0x78	; 120
     2c8:	ef 2e       	mov	r14, r31
     2ca:	f1 2c       	mov	r15, r1
     2cc:	f0 2d       	mov	r31, r0
		X--;
		_delay_ms(250); //Delay to give time between readings
	}
	ADCvalue = ADCvalue/4;// average of values received
	snprintf(outs, sizeof(outs),"%3d C", ADCvalue); // convert value to a string
     2ce:	0f 2e       	mov	r0, r31
     2d0:	f0 e0       	ldi	r31, 0x00	; 0
     2d2:	2f 2e       	mov	r2, r31
     2d4:	f1 e0       	ldi	r31, 0x01	; 1
     2d6:	3f 2e       	mov	r3, r31
     2d8:	f0 2d       	mov	r31, r0
     2da:	0f 2e       	mov	r0, r31
     2dc:	f0 e0       	ldi	r31, 0x00	; 0
     2de:	af 2e       	mov	r10, r31
     2e0:	f3 e0       	ldi	r31, 0x03	; 3
     2e2:	bf 2e       	mov	r11, r31
     2e4:	f0 2d       	mov	r31, r0
	Ratio = 500.0/1024.0; // Ratio to calculate the actual temperature
	ADCstart(); // initialize the ADC port
	nokia_lcd_init();// Initiaize LCD
while(1)
{
	X = 4; // number of values taken before transmission
     2e6:	90 92 0f 03 	sts	0x030F, r9
     2ea:	80 92 0e 03 	sts	0x030E, r8
	ADCvalue = 0; // reset temperature value
     2ee:	10 92 0d 03 	sts	0x030D, r1
     2f2:	10 92 0c 03 	sts	0x030C, r1
	while(X) // stay here until 4 reading are taken
     2f6:	80 91 0e 03 	lds	r24, 0x030E
     2fa:	90 91 0f 03 	lds	r25, 0x030F
     2fe:	89 2b       	or	r24, r25
     300:	09 f4       	brne	.+2      	; 0x304 <main+0x70>
     302:	44 c0       	rjmp	.+136    	; 0x38c <main+0xf8>
	{
		ADCSRA |= (1<<ADSC);// write one to ADSC bit to start conversion
     304:	88 81       	ld	r24, Y
     306:	80 64       	ori	r24, 0x40	; 64
     308:	88 83       	st	Y, r24
		while(ADCSRA & (1<<ADSC))// wait until conversion is complete
     30a:	88 81       	ld	r24, Y
     30c:	86 fd       	sbrc	r24, 6
     30e:	fd cf       	rjmp	.-6      	; 0x30a <main+0x76>
		{
		}
		ADCvalue += (Ratio*ADC);// save temperature
     310:	f7 01       	movw	r30, r14
     312:	00 81       	ld	r16, Z
     314:	11 81       	ldd	r17, Z+1	; 0x01
     316:	60 91 0c 03 	lds	r22, 0x030C
     31a:	70 91 0d 03 	lds	r23, 0x030D
     31e:	80 e0       	ldi	r24, 0x00	; 0
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	0e 94 2a 04 	call	0x854	; 0x854 <__floatunsisf>
     326:	2b 01       	movw	r4, r22
     328:	3c 01       	movw	r6, r24
     32a:	b8 01       	movw	r22, r16
     32c:	80 e0       	ldi	r24, 0x00	; 0
     32e:	90 e0       	ldi	r25, 0x00	; 0
     330:	0e 94 2a 04 	call	0x854	; 0x854 <__floatunsisf>
     334:	20 91 08 03 	lds	r18, 0x0308
     338:	30 91 09 03 	lds	r19, 0x0309
     33c:	40 91 0a 03 	lds	r20, 0x030A
     340:	50 91 0b 03 	lds	r21, 0x030B
     344:	0e 94 b8 04 	call	0x970	; 0x970 <__mulsf3>
     348:	9b 01       	movw	r18, r22
     34a:	ac 01       	movw	r20, r24
     34c:	c3 01       	movw	r24, r6
     34e:	b2 01       	movw	r22, r4
     350:	0e 94 8f 03 	call	0x71e	; 0x71e <__addsf3>
     354:	0e 94 fb 03 	call	0x7f6	; 0x7f6 <__fixunssfsi>
     358:	70 93 0d 03 	sts	0x030D, r23
     35c:	60 93 0c 03 	sts	0x030C, r22
		X--;
     360:	80 91 0e 03 	lds	r24, 0x030E
     364:	90 91 0f 03 	lds	r25, 0x030F
     368:	01 97       	sbiw	r24, 0x01	; 1
     36a:	90 93 0f 03 	sts	0x030F, r25
     36e:	80 93 0e 03 	sts	0x030E, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     372:	83 e2       	ldi	r24, 0x23	; 35
     374:	94 ef       	ldi	r25, 0xF4	; 244
     376:	01 97       	sbiw	r24, 0x01	; 1
     378:	f1 f7       	brne	.-4      	; 0x376 <main+0xe2>
     37a:	00 c0       	rjmp	.+0      	; 0x37c <main+0xe8>
     37c:	00 00       	nop
	nokia_lcd_init();// Initiaize LCD
while(1)
{
	X = 4; // number of values taken before transmission
	ADCvalue = 0; // reset temperature value
	while(X) // stay here until 4 reading are taken
     37e:	80 91 0e 03 	lds	r24, 0x030E
     382:	90 91 0f 03 	lds	r25, 0x030F
     386:	89 2b       	or	r24, r25
     388:	09 f0       	breq	.+2      	; 0x38c <main+0xf8>
     38a:	bc cf       	rjmp	.-136    	; 0x304 <main+0x70>
		}
		ADCvalue += (Ratio*ADC);// save temperature
		X--;
		_delay_ms(250); //Delay to give time between readings
	}
	ADCvalue = ADCvalue/4;// average of values received
     38c:	80 91 0c 03 	lds	r24, 0x030C
     390:	90 91 0d 03 	lds	r25, 0x030D
     394:	96 95       	lsr	r25
     396:	87 95       	ror	r24
     398:	96 95       	lsr	r25
     39a:	87 95       	ror	r24
     39c:	90 93 0d 03 	sts	0x030D, r25
     3a0:	80 93 0c 03 	sts	0x030C, r24
	snprintf(outs, sizeof(outs),"%3d C", ADCvalue); // convert value to a string
     3a4:	80 91 0c 03 	lds	r24, 0x030C
     3a8:	90 91 0d 03 	lds	r25, 0x030D
     3ac:	9f 93       	push	r25
     3ae:	8f 93       	push	r24
     3b0:	3f 92       	push	r3
     3b2:	2f 92       	push	r2
     3b4:	1f 92       	push	r1
     3b6:	98 e0       	ldi	r25, 0x08	; 8
     3b8:	9f 93       	push	r25
     3ba:	bf 92       	push	r11
     3bc:	af 92       	push	r10
     3be:	0e 94 31 05 	call	0xa62	; 0xa62 <snprintf>
		

	nokia_lcd_set_cursor(0, Y);
     3c2:	6c 2d       	mov	r22, r12
     3c4:	80 e0       	ldi	r24, 0x00	; 0
     3c6:	0e 94 6f 03 	call	0x6de	; 0x6de <nokia_lcd_set_cursor>
	nokia_lcd_write_string(outs,1); // Send Temperature to LCD
     3ca:	61 e0       	ldi	r22, 0x01	; 1
     3cc:	c5 01       	movw	r24, r10
     3ce:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <nokia_lcd_write_string>
	nokia_lcd_render();// Display Temperature on LCD
     3d2:	0e 94 74 03 	call	0x6e8	; 0x6e8 <nokia_lcd_render>
	if (Y < 25)
     3d6:	ed b7       	in	r30, 0x3d	; 61
     3d8:	fe b7       	in	r31, 0x3e	; 62
     3da:	38 96       	adiw	r30, 0x08	; 8
     3dc:	0f b6       	in	r0, 0x3f	; 63
     3de:	f8 94       	cli
     3e0:	fe bf       	out	0x3e, r31	; 62
     3e2:	0f be       	out	0x3f, r0	; 63
     3e4:	ed bf       	out	0x3d, r30	; 61
     3e6:	f9 e1       	ldi	r31, 0x19	; 25
     3e8:	cf 16       	cp	r12, r31
     3ea:	d1 04       	cpc	r13, r1
     3ec:	24 f4       	brge	.+8      	; 0x3f6 <main+0x162>
		Y+=8;
     3ee:	88 e0       	ldi	r24, 0x08	; 8
     3f0:	c8 0e       	add	r12, r24
     3f2:	d1 1c       	adc	r13, r1
     3f4:	04 c0       	rjmp	.+8      	; 0x3fe <main+0x16a>
	else
		{
		Y = 0;
		nokia_lcd_clear(); // Clear screen
     3f6:	0e 94 6d 02 	call	0x4da	; 0x4da <nokia_lcd_clear>
	nokia_lcd_render();// Display Temperature on LCD
	if (Y < 25)
		Y+=8;
	else
		{
		Y = 0;
     3fa:	c1 2c       	mov	r12, r1
     3fc:	d1 2c       	mov	r13, r1
     3fe:	88 ee       	ldi	r24, 0xE8	; 232
     400:	93 e0       	ldi	r25, 0x03	; 3
     402:	e7 ee       	ldi	r30, 0xE7	; 231
     404:	f3 e0       	ldi	r31, 0x03	; 3
     406:	31 97       	sbiw	r30, 0x01	; 1
     408:	f1 f7       	brne	.-4      	; 0x406 <main+0x172>
     40a:	00 c0       	rjmp	.+0      	; 0x40c <main+0x178>
     40c:	00 00       	nop
     40e:	01 97       	sbiw	r24, 0x01	; 1
		nokia_lcd_clear(); // Clear screen
		}
	for (int z = 0; z< 1000;z++)
     410:	c1 f7       	brne	.-16     	; 0x402 <main+0x16e>
     412:	69 cf       	rjmp	.-302    	; 0x2e6 <main+0x52>

00000414 <write>:
 */
static void write(uint8_t bytes, uint8_t is_data)
{
	register uint8_t i;
	/* Enable controller */
	PORT_LCD &= ~(1 << LCD_SCE);
     414:	28 98       	cbi	0x05, 0	; 5

	/* We are sending data */
	if (is_data)
     416:	66 23       	and	r22, r22
     418:	11 f0       	breq	.+4      	; 0x41e <write+0xa>
		PORT_LCD |= (1 << LCD_DC);
     41a:	2a 9a       	sbi	0x05, 2	; 5
     41c:	15 c0       	rjmp	.+42     	; 0x448 <write+0x34>
	/* We are sending commands */
	else
		PORT_LCD &= ~(1 << LCD_DC);
     41e:	2a 98       	cbi	0x05, 2	; 5
     420:	13 c0       	rjmp	.+38     	; 0x448 <write+0x34>

	/* Send bytes */
	for (i = 0; i < 8; i++) {
		/* Set data pin to byte state */
		if ((bytes >> (7-i)) & 0x01)
     422:	ac 01       	movw	r20, r24
     424:	02 2e       	mov	r0, r18
     426:	02 c0       	rjmp	.+4      	; 0x42c <write+0x18>
     428:	55 95       	asr	r21
     42a:	47 95       	ror	r20
     42c:	0a 94       	dec	r0
     42e:	e2 f7       	brpl	.-8      	; 0x428 <write+0x14>
     430:	40 ff       	sbrs	r20, 0
     432:	02 c0       	rjmp	.+4      	; 0x438 <write+0x24>
			PORT_LCD |= (1 << LCD_DIN);
     434:	2b 9a       	sbi	0x05, 3	; 5
     436:	01 c0       	rjmp	.+2      	; 0x43a <write+0x26>
		else
			PORT_LCD &= ~(1 << LCD_DIN);
     438:	2b 98       	cbi	0x05, 3	; 5

		/* Blink clock */
		PORT_LCD |= (1 << LCD_CLK);
     43a:	2d 9a       	sbi	0x05, 5	; 5
		PORT_LCD &= ~(1 << LCD_CLK);
     43c:	2d 98       	cbi	0x05, 5	; 5
     43e:	21 50       	subi	r18, 0x01	; 1
     440:	31 09       	sbc	r19, r1
     442:	78 f7       	brcc	.-34     	; 0x422 <write+0xe>
	}

	/* Disable controller */
	PORT_LCD |= (1 << LCD_SCE);
     444:	28 9a       	sbi	0x05, 0	; 5
     446:	08 95       	ret
 * Sending data to LCD
 * @bytes: data
 * @is_data: transfer mode: 1 - data; 0 - command;
 */
static void write(uint8_t bytes, uint8_t is_data)
{
     448:	27 e0       	ldi	r18, 0x07	; 7
     44a:	30 e0       	ldi	r19, 0x00	; 0
		PORT_LCD &= ~(1 << LCD_DC);

	/* Send bytes */
	for (i = 0; i < 8; i++) {
		/* Set data pin to byte state */
		if ((bytes >> (7-i)) & 0x01)
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	e9 cf       	rjmp	.-46     	; 0x422 <write+0xe>

00000450 <write_cmd>:
	PORT_LCD |= (1 << LCD_SCE);
}

static void write_cmd(uint8_t cmd)
{
	write(cmd, 0);
     450:	60 e0       	ldi	r22, 0x00	; 0
     452:	0e 94 0a 02 	call	0x414	; 0x414 <write>
     456:	08 95       	ret

00000458 <nokia_lcd_init>:
/*
 * Public functions
 */

void nokia_lcd_init(void)
{
     458:	cf 93       	push	r28
     45a:	df 93       	push	r29
	register unsigned i;
	/* Set pins as output */
	DDR_LCD |= (1 << LCD_SCE);
     45c:	20 9a       	sbi	0x04, 0	; 4
	DDR_LCD |= (1 << LCD_RST);
     45e:	21 9a       	sbi	0x04, 1	; 4
	DDR_LCD |= (1 << LCD_DC);
     460:	22 9a       	sbi	0x04, 2	; 4
	DDR_LCD |= (1 << LCD_DIN);
     462:	23 9a       	sbi	0x04, 3	; 4
	DDR_LCD |= (1 << LCD_CLK);
     464:	25 9a       	sbi	0x04, 5	; 4

	/* Reset display */
	PORT_LCD |= (1 << LCD_RST);
     466:	29 9a       	sbi	0x05, 1	; 5
	PORT_LCD |= (1 << LCD_SCE);
     468:	28 9a       	sbi	0x05, 0	; 5
     46a:	83 ec       	ldi	r24, 0xC3	; 195
     46c:	99 e0       	ldi	r25, 0x09	; 9
     46e:	01 97       	sbiw	r24, 0x01	; 1
     470:	f1 f7       	brne	.-4      	; 0x46e <nokia_lcd_init+0x16>
     472:	00 c0       	rjmp	.+0      	; 0x474 <nokia_lcd_init+0x1c>
     474:	00 00       	nop
	_delay_ms(10);
	PORT_LCD &= ~(1 << LCD_RST);
     476:	29 98       	cbi	0x05, 1	; 5
     478:	8b e5       	ldi	r24, 0x5B	; 91
     47a:	94 e4       	ldi	r25, 0x44	; 68
     47c:	01 97       	sbiw	r24, 0x01	; 1
     47e:	f1 f7       	brne	.-4      	; 0x47c <nokia_lcd_init+0x24>
     480:	00 c0       	rjmp	.+0      	; 0x482 <nokia_lcd_init+0x2a>
     482:	00 00       	nop
	_delay_ms(70);
	PORT_LCD |= (1 << LCD_RST);
     484:	29 9a       	sbi	0x05, 1	; 5

	/*
	 * Initialize display
	 */
	/* Enable controller */
	PORT_LCD &= ~(1 << LCD_SCE);
     486:	28 98       	cbi	0x05, 0	; 5
	/* -LCD Extended Commands mode- */
	write_cmd(0x21);
     488:	81 e2       	ldi	r24, 0x21	; 33
     48a:	0e 94 28 02 	call	0x450	; 0x450 <write_cmd>
	/* LCD bias mode 1:48 */
	write_cmd(0x13);
     48e:	83 e1       	ldi	r24, 0x13	; 19
     490:	0e 94 28 02 	call	0x450	; 0x450 <write_cmd>
	/* Set temperature coefficient */
	write_cmd(0x06);
     494:	86 e0       	ldi	r24, 0x06	; 6
     496:	0e 94 28 02 	call	0x450	; 0x450 <write_cmd>
	/* Default VOP (3.06 + 66 * 0.06 = 7V) */
	write_cmd(0xC2);
     49a:	82 ec       	ldi	r24, 0xC2	; 194
     49c:	0e 94 28 02 	call	0x450	; 0x450 <write_cmd>
	/* Standard Commands mode, powered down */
	write_cmd(0x20);
     4a0:	80 e2       	ldi	r24, 0x20	; 32
     4a2:	0e 94 28 02 	call	0x450	; 0x450 <write_cmd>
	/* LCD in normal mode */
	write_cmd(0x09);
     4a6:	89 e0       	ldi	r24, 0x09	; 9
     4a8:	0e 94 28 02 	call	0x450	; 0x450 <write_cmd>

	/* Clear LCD RAM */
	write_cmd(0x80);
     4ac:	80 e8       	ldi	r24, 0x80	; 128
     4ae:	0e 94 28 02 	call	0x450	; 0x450 <write_cmd>
	write_cmd(LCD_CONTRAST);
     4b2:	80 e4       	ldi	r24, 0x40	; 64
     4b4:	0e 94 28 02 	call	0x450	; 0x450 <write_cmd>
     4b8:	c8 ef       	ldi	r28, 0xF8	; 248
     4ba:	d1 e0       	ldi	r29, 0x01	; 1
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
     4bc:	61 e0       	ldi	r22, 0x01	; 1
     4be:	80 e0       	ldi	r24, 0x00	; 0
     4c0:	0e 94 0a 02 	call	0x414	; 0x414 <write>
     4c4:	21 97       	sbiw	r28, 0x01	; 1
	write_cmd(0x09);

	/* Clear LCD RAM */
	write_cmd(0x80);
	write_cmd(LCD_CONTRAST);
	for (i = 0; i < 504; i++)
     4c6:	d1 f7       	brne	.-12     	; 0x4bc <nokia_lcd_init+0x64>
		write_data(0x00);

	/* Activate LCD */
	write_cmd(0x08);
     4c8:	88 e0       	ldi	r24, 0x08	; 8
     4ca:	0e 94 28 02 	call	0x450	; 0x450 <write_cmd>
	write_cmd(0x0C);
     4ce:	8c e0       	ldi	r24, 0x0C	; 12
     4d0:	0e 94 28 02 	call	0x450	; 0x450 <write_cmd>
}
     4d4:	df 91       	pop	r29
     4d6:	cf 91       	pop	r28
     4d8:	08 95       	ret

000004da <nokia_lcd_clear>:

void nokia_lcd_clear(void)
{
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
     4da:	80 e8       	ldi	r24, 0x80	; 128
     4dc:	0e 94 28 02 	call	0x450	; 0x450 <write_cmd>
	write_cmd(0x40);
     4e0:	80 e4       	ldi	r24, 0x40	; 64
     4e2:	0e 94 28 02 	call	0x450	; 0x450 <write_cmd>
	/*Cursor too */
	nokia_lcd.cursor_x = 0;
     4e6:	10 92 fe 02 	sts	0x02FE, r1
	nokia_lcd.cursor_y = 0;
     4ea:	10 92 ff 02 	sts	0x02FF, r1
     4ee:	e6 e0       	ldi	r30, 0x06	; 6
     4f0:	f1 e0       	ldi	r31, 0x01	; 1
     4f2:	8e ef       	ldi	r24, 0xFE	; 254
     4f4:	92 e0       	ldi	r25, 0x02	; 2
	/* Clear everything (504 bytes = 84cols * 48 rows / 8 bits) */
	for(i = 0;i < 504; i++)
		nokia_lcd.screen[i] = 0x00;
     4f6:	11 92       	st	Z+, r1
	write_cmd(0x40);
	/*Cursor too */
	nokia_lcd.cursor_x = 0;
	nokia_lcd.cursor_y = 0;
	/* Clear everything (504 bytes = 84cols * 48 rows / 8 bits) */
	for(i = 0;i < 504; i++)
     4f8:	e8 17       	cp	r30, r24
     4fa:	f9 07       	cpc	r31, r25
     4fc:	e1 f7       	brne	.-8      	; 0x4f6 <nokia_lcd_clear+0x1c>
		nokia_lcd.screen[i] = 0x00;
}
     4fe:	08 95       	ret

00000500 <nokia_lcd_set_pixel>:
	write_cmd(on ? 0x20 : 0x24);
}

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
     500:	26 2f       	mov	r18, r22
     502:	26 95       	lsr	r18
     504:	26 95       	lsr	r18
     506:	26 95       	lsr	r18
     508:	90 e0       	ldi	r25, 0x00	; 0
     50a:	34 e5       	ldi	r19, 0x54	; 84
     50c:	23 9f       	mul	r18, r19
     50e:	80 0d       	add	r24, r0
     510:	91 1d       	adc	r25, r1
     512:	11 24       	eor	r1, r1
	if (value)
     514:	44 23       	and	r20, r20
     516:	79 f0       	breq	.+30     	; 0x536 <nokia_lcd_set_pixel+0x36>
		*byte |= (1 << (y % 8));
     518:	fc 01       	movw	r30, r24
     51a:	ea 5f       	subi	r30, 0xFA	; 250
     51c:	fe 4f       	sbci	r31, 0xFE	; 254
     51e:	67 70       	andi	r22, 0x07	; 7
     520:	81 e0       	ldi	r24, 0x01	; 1
     522:	90 e0       	ldi	r25, 0x00	; 0
     524:	02 c0       	rjmp	.+4      	; 0x52a <nokia_lcd_set_pixel+0x2a>
     526:	88 0f       	add	r24, r24
     528:	99 1f       	adc	r25, r25
     52a:	6a 95       	dec	r22
     52c:	e2 f7       	brpl	.-8      	; 0x526 <nokia_lcd_set_pixel+0x26>
     52e:	90 81       	ld	r25, Z
     530:	89 2b       	or	r24, r25
     532:	80 83       	st	Z, r24
     534:	08 95       	ret
	else
		*byte &= ~(1 << (y %8 ));
     536:	fc 01       	movw	r30, r24
     538:	ea 5f       	subi	r30, 0xFA	; 250
     53a:	fe 4f       	sbci	r31, 0xFE	; 254
     53c:	67 70       	andi	r22, 0x07	; 7
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	02 c0       	rjmp	.+4      	; 0x548 <nokia_lcd_set_pixel+0x48>
     544:	88 0f       	add	r24, r24
     546:	99 1f       	adc	r25, r25
     548:	6a 95       	dec	r22
     54a:	e2 f7       	brpl	.-8      	; 0x544 <nokia_lcd_set_pixel+0x44>
     54c:	80 95       	com	r24
     54e:	90 81       	ld	r25, Z
     550:	89 23       	and	r24, r25
     552:	80 83       	st	Z, r24
     554:	08 95       	ret

00000556 <nokia_lcd_write_char>:
}

void nokia_lcd_write_char(char code, uint8_t scale)
{
     556:	4f 92       	push	r4
     558:	5f 92       	push	r5
     55a:	6f 92       	push	r6
     55c:	7f 92       	push	r7
     55e:	8f 92       	push	r8
     560:	9f 92       	push	r9
     562:	af 92       	push	r10
     564:	bf 92       	push	r11
     566:	cf 92       	push	r12
     568:	df 92       	push	r13
     56a:	ef 92       	push	r14
     56c:	ff 92       	push	r15
     56e:	0f 93       	push	r16
     570:	1f 93       	push	r17
     572:	cf 93       	push	r28
     574:	df 93       	push	r29
     576:	56 2e       	mov	r5, r22
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
     578:	26 2f       	mov	r18, r22
     57a:	30 e0       	ldi	r19, 0x00	; 0
     57c:	49 01       	movw	r8, r18
     57e:	88 0c       	add	r8, r8
     580:	99 1c       	adc	r9, r9
     582:	88 0c       	add	r8, r8
     584:	99 1c       	adc	r9, r9
     586:	82 0e       	add	r8, r18
     588:	93 1e       	adc	r9, r19
     58a:	18 14       	cp	r1, r8
     58c:	19 04       	cpc	r1, r9
     58e:	0c f0       	brlt	.+2      	; 0x592 <nokia_lcd_write_char+0x3c>
     590:	5e c0       	rjmp	.+188    	; 0x64e <nokia_lcd_write_char+0xf8>
		for (y = 0; y < 7*scale; y++)
     592:	89 01       	movw	r16, r18
     594:	00 0f       	add	r16, r16
     596:	11 1f       	adc	r17, r17
     598:	00 0f       	add	r16, r16
     59a:	11 1f       	adc	r17, r17
     59c:	00 0f       	add	r16, r16
     59e:	11 1f       	adc	r17, r17
     5a0:	02 1b       	sub	r16, r18
     5a2:	13 0b       	sbc	r17, r19
     5a4:	61 2c       	mov	r6, r1
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
     5a6:	a8 2e       	mov	r10, r24
     5a8:	b1 2c       	mov	r11, r1
     5aa:	c5 01       	movw	r24, r10
     5ac:	80 97       	sbiw	r24, 0x20	; 32
     5ae:	5c 01       	movw	r10, r24
     5b0:	aa 0c       	add	r10, r10
     5b2:	bb 1c       	adc	r11, r11
     5b4:	aa 0c       	add	r10, r10
     5b6:	bb 1c       	adc	r11, r11
     5b8:	a8 0e       	add	r10, r24
     5ba:	b9 1e       	adc	r11, r25
     5bc:	41 2c       	mov	r4, r1
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
     5be:	0f 2e       	mov	r0, r31
     5c0:	ff ef       	ldi	r31, 0xFF	; 255
     5c2:	cf 2e       	mov	r12, r31
     5c4:	f2 e0       	ldi	r31, 0x02	; 2
     5c6:	df 2e       	mov	r13, r31
     5c8:	f0 2d       	mov	r31, r0
     5ca:	0f 2e       	mov	r0, r31
     5cc:	fe ef       	ldi	r31, 0xFE	; 254
     5ce:	ef 2e       	mov	r14, r31
     5d0:	f2 e0       	ldi	r31, 0x02	; 2
     5d2:	ff 2e       	mov	r15, r31
     5d4:	f0 2d       	mov	r31, r0
     5d6:	2d c0       	rjmp	.+90     	; 0x632 <nokia_lcd_write_char+0xdc>
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
     5d8:	fe 01       	movw	r30, r28
     5da:	24 91       	lpm	r18, Z
     5dc:	30 e0       	ldi	r19, 0x00	; 0
     5de:	87 2d       	mov	r24, r7
     5e0:	65 2d       	mov	r22, r5
     5e2:	0e 94 25 05 	call	0xa4a	; 0xa4a <__udivmodqi4>
     5e6:	02 c0       	rjmp	.+4      	; 0x5ec <nokia_lcd_write_char+0x96>
     5e8:	35 95       	asr	r19
     5ea:	27 95       	ror	r18
     5ec:	8a 95       	dec	r24
     5ee:	e2 f7       	brpl	.-8      	; 0x5e8 <nokia_lcd_write_char+0x92>
     5f0:	20 ff       	sbrs	r18, 0
     5f2:	0a c0       	rjmp	.+20     	; 0x608 <nokia_lcd_write_char+0xb2>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
     5f4:	f6 01       	movw	r30, r12
     5f6:	60 81       	ld	r22, Z
     5f8:	67 0d       	add	r22, r7
     5fa:	f7 01       	movw	r30, r14
     5fc:	80 81       	ld	r24, Z
     5fe:	41 e0       	ldi	r20, 0x01	; 1
     600:	86 0d       	add	r24, r6
     602:	0e 94 80 02 	call	0x500	; 0x500 <nokia_lcd_set_pixel>
     606:	09 c0       	rjmp	.+18     	; 0x61a <nokia_lcd_write_char+0xc4>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
     608:	f6 01       	movw	r30, r12
     60a:	60 81       	ld	r22, Z
     60c:	67 0d       	add	r22, r7
     60e:	f7 01       	movw	r30, r14
     610:	80 81       	ld	r24, Z
     612:	44 2d       	mov	r20, r4
     614:	86 0d       	add	r24, r6
     616:	0e 94 80 02 	call	0x500	; 0x500 <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
     61a:	73 94       	inc	r7
     61c:	87 2d       	mov	r24, r7
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	80 17       	cp	r24, r16
     622:	91 07       	cpc	r25, r17
     624:	cc f2       	brlt	.-78     	; 0x5d8 <nokia_lcd_write_char+0x82>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
     626:	63 94       	inc	r6
     628:	86 2d       	mov	r24, r6
     62a:	90 e0       	ldi	r25, 0x00	; 0
     62c:	88 15       	cp	r24, r8
     62e:	99 05       	cpc	r25, r9
     630:	74 f4       	brge	.+28     	; 0x64e <nokia_lcd_write_char+0xf8>
		for (y = 0; y < 7*scale; y++)
     632:	10 16       	cp	r1, r16
     634:	11 06       	cpc	r1, r17
     636:	bc f7       	brge	.-18     	; 0x626 <nokia_lcd_write_char+0xd0>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
     638:	86 2d       	mov	r24, r6
     63a:	65 2d       	mov	r22, r5
     63c:	0e 94 25 05 	call	0xa4a	; 0xa4a <__udivmodqi4>
     640:	e5 01       	movw	r28, r10
     642:	c8 0f       	add	r28, r24
     644:	d1 1d       	adc	r29, r1
     646:	c8 59       	subi	r28, 0x98	; 152
     648:	df 4f       	sbci	r29, 0xFF	; 255
     64a:	74 2c       	mov	r7, r4
     64c:	c5 cf       	rjmp	.-118    	; 0x5d8 <nokia_lcd_write_char+0x82>
     64e:	80 91 fe 02 	lds	r24, 0x02FE
     652:	91 e0       	ldi	r25, 0x01	; 1
     654:	98 0f       	add	r25, r24
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
     656:	85 2d       	mov	r24, r5
     658:	88 0f       	add	r24, r24
     65a:	88 0f       	add	r24, r24
     65c:	85 0d       	add	r24, r5
     65e:	89 0f       	add	r24, r25
	if (nokia_lcd.cursor_x >= 84) {
     660:	84 35       	cpi	r24, 0x54	; 84
     662:	18 f4       	brcc	.+6      	; 0x66a <nokia_lcd_write_char+0x114>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
     664:	80 93 fe 02 	sts	0x02FE, r24
     668:	0e c0       	rjmp	.+28     	; 0x686 <nokia_lcd_write_char+0x130>
	if (nokia_lcd.cursor_x >= 84) {
		nokia_lcd.cursor_x = 0;
     66a:	10 92 fe 02 	sts	0x02FE, r1
		nokia_lcd.cursor_y += 7*scale + 1;
     66e:	ef ef       	ldi	r30, 0xFF	; 255
     670:	f2 e0       	ldi	r31, 0x02	; 2
     672:	80 81       	ld	r24, Z
     674:	91 e0       	ldi	r25, 0x01	; 1
     676:	98 0f       	add	r25, r24
     678:	85 2d       	mov	r24, r5
     67a:	88 0f       	add	r24, r24
     67c:	88 0f       	add	r24, r24
     67e:	88 0f       	add	r24, r24
     680:	85 19       	sub	r24, r5
     682:	89 0f       	add	r24, r25
     684:	80 83       	st	Z, r24
	}
	if (nokia_lcd.cursor_y >= 48) {
     686:	80 91 ff 02 	lds	r24, 0x02FF
     68a:	80 33       	cpi	r24, 0x30	; 48
     68c:	20 f0       	brcs	.+8      	; 0x696 <nokia_lcd_write_char+0x140>
		nokia_lcd.cursor_x = 0;
     68e:	10 92 fe 02 	sts	0x02FE, r1
		nokia_lcd.cursor_y = 0;
     692:	10 92 ff 02 	sts	0x02FF, r1
	}
}
     696:	df 91       	pop	r29
     698:	cf 91       	pop	r28
     69a:	1f 91       	pop	r17
     69c:	0f 91       	pop	r16
     69e:	ff 90       	pop	r15
     6a0:	ef 90       	pop	r14
     6a2:	df 90       	pop	r13
     6a4:	cf 90       	pop	r12
     6a6:	bf 90       	pop	r11
     6a8:	af 90       	pop	r10
     6aa:	9f 90       	pop	r9
     6ac:	8f 90       	pop	r8
     6ae:	7f 90       	pop	r7
     6b0:	6f 90       	pop	r6
     6b2:	5f 90       	pop	r5
     6b4:	4f 90       	pop	r4
     6b6:	08 95       	ret

000006b8 <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
     6b8:	1f 93       	push	r17
     6ba:	cf 93       	push	r28
     6bc:	df 93       	push	r29
     6be:	ec 01       	movw	r28, r24
	while(*str)
     6c0:	88 81       	ld	r24, Y
     6c2:	88 23       	and	r24, r24
     6c4:	41 f0       	breq	.+16     	; 0x6d6 <nokia_lcd_write_string+0x1e>
     6c6:	16 2f       	mov	r17, r22
     6c8:	21 96       	adiw	r28, 0x01	; 1
		nokia_lcd_write_char(*str++, scale);
     6ca:	61 2f       	mov	r22, r17
     6cc:	0e 94 ab 02 	call	0x556	; 0x556 <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
     6d0:	89 91       	ld	r24, Y+
     6d2:	81 11       	cpse	r24, r1
     6d4:	fa cf       	rjmp	.-12     	; 0x6ca <nokia_lcd_write_string+0x12>
		nokia_lcd_write_char(*str++, scale);
}
     6d6:	df 91       	pop	r29
     6d8:	cf 91       	pop	r28
     6da:	1f 91       	pop	r17
     6dc:	08 95       	ret

000006de <nokia_lcd_set_cursor>:

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
     6de:	80 93 fe 02 	sts	0x02FE, r24
	nokia_lcd.cursor_y = y;
     6e2:	60 93 ff 02 	sts	0x02FF, r22
     6e6:	08 95       	ret

000006e8 <nokia_lcd_render>:
}

void nokia_lcd_render(void)
{
     6e8:	0f 93       	push	r16
     6ea:	1f 93       	push	r17
     6ec:	cf 93       	push	r28
     6ee:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
     6f0:	80 e8       	ldi	r24, 0x80	; 128
     6f2:	0e 94 28 02 	call	0x450	; 0x450 <write_cmd>
	write_cmd(0x40);
     6f6:	80 e4       	ldi	r24, 0x40	; 64
     6f8:	0e 94 28 02 	call	0x450	; 0x450 <write_cmd>
     6fc:	c6 e0       	ldi	r28, 0x06	; 6
     6fe:	d1 e0       	ldi	r29, 0x01	; 1
     700:	0e ef       	ldi	r16, 0xFE	; 254
     702:	12 e0       	ldi	r17, 0x02	; 2
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
     704:	61 e0       	ldi	r22, 0x01	; 1
     706:	89 91       	ld	r24, Y+
     708:	0e 94 0a 02 	call	0x414	; 0x414 <write>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
     70c:	c0 17       	cp	r28, r16
     70e:	d1 07       	cpc	r29, r17
     710:	c9 f7       	brne	.-14     	; 0x704 <nokia_lcd_render+0x1c>
		write_data(nokia_lcd.screen[i]);
}
     712:	df 91       	pop	r29
     714:	cf 91       	pop	r28
     716:	1f 91       	pop	r17
     718:	0f 91       	pop	r16
     71a:	08 95       	ret

0000071c <__subsf3>:
     71c:	50 58       	subi	r21, 0x80	; 128

0000071e <__addsf3>:
     71e:	bb 27       	eor	r27, r27
     720:	aa 27       	eor	r26, r26
     722:	0e 94 a6 03 	call	0x74c	; 0x74c <__addsf3x>
     726:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_round>
     72a:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__fp_pscA>
     72e:	38 f0       	brcs	.+14     	; 0x73e <__addsf3+0x20>
     730:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fp_pscB>
     734:	20 f0       	brcs	.+8      	; 0x73e <__addsf3+0x20>
     736:	39 f4       	brne	.+14     	; 0x746 <__addsf3+0x28>
     738:	9f 3f       	cpi	r25, 0xFF	; 255
     73a:	19 f4       	brne	.+6      	; 0x742 <__addsf3+0x24>
     73c:	26 f4       	brtc	.+8      	; 0x746 <__addsf3+0x28>
     73e:	0c 94 6d 04 	jmp	0x8da	; 0x8da <__fp_nan>
     742:	0e f4       	brtc	.+2      	; 0x746 <__addsf3+0x28>
     744:	e0 95       	com	r30
     746:	e7 fb       	bst	r30, 7
     748:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <__fp_inf>

0000074c <__addsf3x>:
     74c:	e9 2f       	mov	r30, r25
     74e:	0e 94 8f 04 	call	0x91e	; 0x91e <__fp_split3>
     752:	58 f3       	brcs	.-42     	; 0x72a <__addsf3+0xc>
     754:	ba 17       	cp	r27, r26
     756:	62 07       	cpc	r22, r18
     758:	73 07       	cpc	r23, r19
     75a:	84 07       	cpc	r24, r20
     75c:	95 07       	cpc	r25, r21
     75e:	20 f0       	brcs	.+8      	; 0x768 <__addsf3x+0x1c>
     760:	79 f4       	brne	.+30     	; 0x780 <__addsf3x+0x34>
     762:	a6 f5       	brtc	.+104    	; 0x7cc <__addsf3x+0x80>
     764:	0c 94 b1 04 	jmp	0x962	; 0x962 <__fp_zero>
     768:	0e f4       	brtc	.+2      	; 0x76c <__addsf3x+0x20>
     76a:	e0 95       	com	r30
     76c:	0b 2e       	mov	r0, r27
     76e:	ba 2f       	mov	r27, r26
     770:	a0 2d       	mov	r26, r0
     772:	0b 01       	movw	r0, r22
     774:	b9 01       	movw	r22, r18
     776:	90 01       	movw	r18, r0
     778:	0c 01       	movw	r0, r24
     77a:	ca 01       	movw	r24, r20
     77c:	a0 01       	movw	r20, r0
     77e:	11 24       	eor	r1, r1
     780:	ff 27       	eor	r31, r31
     782:	59 1b       	sub	r21, r25
     784:	99 f0       	breq	.+38     	; 0x7ac <__addsf3x+0x60>
     786:	59 3f       	cpi	r21, 0xF9	; 249
     788:	50 f4       	brcc	.+20     	; 0x79e <__addsf3x+0x52>
     78a:	50 3e       	cpi	r21, 0xE0	; 224
     78c:	68 f1       	brcs	.+90     	; 0x7e8 <__addsf3x+0x9c>
     78e:	1a 16       	cp	r1, r26
     790:	f0 40       	sbci	r31, 0x00	; 0
     792:	a2 2f       	mov	r26, r18
     794:	23 2f       	mov	r18, r19
     796:	34 2f       	mov	r19, r20
     798:	44 27       	eor	r20, r20
     79a:	58 5f       	subi	r21, 0xF8	; 248
     79c:	f3 cf       	rjmp	.-26     	; 0x784 <__addsf3x+0x38>
     79e:	46 95       	lsr	r20
     7a0:	37 95       	ror	r19
     7a2:	27 95       	ror	r18
     7a4:	a7 95       	ror	r26
     7a6:	f0 40       	sbci	r31, 0x00	; 0
     7a8:	53 95       	inc	r21
     7aa:	c9 f7       	brne	.-14     	; 0x79e <__addsf3x+0x52>
     7ac:	7e f4       	brtc	.+30     	; 0x7cc <__addsf3x+0x80>
     7ae:	1f 16       	cp	r1, r31
     7b0:	ba 0b       	sbc	r27, r26
     7b2:	62 0b       	sbc	r22, r18
     7b4:	73 0b       	sbc	r23, r19
     7b6:	84 0b       	sbc	r24, r20
     7b8:	ba f0       	brmi	.+46     	; 0x7e8 <__addsf3x+0x9c>
     7ba:	91 50       	subi	r25, 0x01	; 1
     7bc:	a1 f0       	breq	.+40     	; 0x7e6 <__addsf3x+0x9a>
     7be:	ff 0f       	add	r31, r31
     7c0:	bb 1f       	adc	r27, r27
     7c2:	66 1f       	adc	r22, r22
     7c4:	77 1f       	adc	r23, r23
     7c6:	88 1f       	adc	r24, r24
     7c8:	c2 f7       	brpl	.-16     	; 0x7ba <__addsf3x+0x6e>
     7ca:	0e c0       	rjmp	.+28     	; 0x7e8 <__addsf3x+0x9c>
     7cc:	ba 0f       	add	r27, r26
     7ce:	62 1f       	adc	r22, r18
     7d0:	73 1f       	adc	r23, r19
     7d2:	84 1f       	adc	r24, r20
     7d4:	48 f4       	brcc	.+18     	; 0x7e8 <__addsf3x+0x9c>
     7d6:	87 95       	ror	r24
     7d8:	77 95       	ror	r23
     7da:	67 95       	ror	r22
     7dc:	b7 95       	ror	r27
     7de:	f7 95       	ror	r31
     7e0:	9e 3f       	cpi	r25, 0xFE	; 254
     7e2:	08 f0       	brcs	.+2      	; 0x7e6 <__addsf3x+0x9a>
     7e4:	b0 cf       	rjmp	.-160    	; 0x746 <__addsf3+0x28>
     7e6:	93 95       	inc	r25
     7e8:	88 0f       	add	r24, r24
     7ea:	08 f0       	brcs	.+2      	; 0x7ee <__addsf3x+0xa2>
     7ec:	99 27       	eor	r25, r25
     7ee:	ee 0f       	add	r30, r30
     7f0:	97 95       	ror	r25
     7f2:	87 95       	ror	r24
     7f4:	08 95       	ret

000007f6 <__fixunssfsi>:
     7f6:	0e 94 97 04 	call	0x92e	; 0x92e <__fp_splitA>
     7fa:	88 f0       	brcs	.+34     	; 0x81e <__fixunssfsi+0x28>
     7fc:	9f 57       	subi	r25, 0x7F	; 127
     7fe:	98 f0       	brcs	.+38     	; 0x826 <__fixunssfsi+0x30>
     800:	b9 2f       	mov	r27, r25
     802:	99 27       	eor	r25, r25
     804:	b7 51       	subi	r27, 0x17	; 23
     806:	b0 f0       	brcs	.+44     	; 0x834 <__fixunssfsi+0x3e>
     808:	e1 f0       	breq	.+56     	; 0x842 <__fixunssfsi+0x4c>
     80a:	66 0f       	add	r22, r22
     80c:	77 1f       	adc	r23, r23
     80e:	88 1f       	adc	r24, r24
     810:	99 1f       	adc	r25, r25
     812:	1a f0       	brmi	.+6      	; 0x81a <__fixunssfsi+0x24>
     814:	ba 95       	dec	r27
     816:	c9 f7       	brne	.-14     	; 0x80a <__fixunssfsi+0x14>
     818:	14 c0       	rjmp	.+40     	; 0x842 <__fixunssfsi+0x4c>
     81a:	b1 30       	cpi	r27, 0x01	; 1
     81c:	91 f0       	breq	.+36     	; 0x842 <__fixunssfsi+0x4c>
     81e:	0e 94 b1 04 	call	0x962	; 0x962 <__fp_zero>
     822:	b1 e0       	ldi	r27, 0x01	; 1
     824:	08 95       	ret
     826:	0c 94 b1 04 	jmp	0x962	; 0x962 <__fp_zero>
     82a:	67 2f       	mov	r22, r23
     82c:	78 2f       	mov	r23, r24
     82e:	88 27       	eor	r24, r24
     830:	b8 5f       	subi	r27, 0xF8	; 248
     832:	39 f0       	breq	.+14     	; 0x842 <__fixunssfsi+0x4c>
     834:	b9 3f       	cpi	r27, 0xF9	; 249
     836:	cc f3       	brlt	.-14     	; 0x82a <__fixunssfsi+0x34>
     838:	86 95       	lsr	r24
     83a:	77 95       	ror	r23
     83c:	67 95       	ror	r22
     83e:	b3 95       	inc	r27
     840:	d9 f7       	brne	.-10     	; 0x838 <__fixunssfsi+0x42>
     842:	3e f4       	brtc	.+14     	; 0x852 <__fixunssfsi+0x5c>
     844:	90 95       	com	r25
     846:	80 95       	com	r24
     848:	70 95       	com	r23
     84a:	61 95       	neg	r22
     84c:	7f 4f       	sbci	r23, 0xFF	; 255
     84e:	8f 4f       	sbci	r24, 0xFF	; 255
     850:	9f 4f       	sbci	r25, 0xFF	; 255
     852:	08 95       	ret

00000854 <__floatunsisf>:
     854:	e8 94       	clt
     856:	09 c0       	rjmp	.+18     	; 0x86a <__floatsisf+0x12>

00000858 <__floatsisf>:
     858:	97 fb       	bst	r25, 7
     85a:	3e f4       	brtc	.+14     	; 0x86a <__floatsisf+0x12>
     85c:	90 95       	com	r25
     85e:	80 95       	com	r24
     860:	70 95       	com	r23
     862:	61 95       	neg	r22
     864:	7f 4f       	sbci	r23, 0xFF	; 255
     866:	8f 4f       	sbci	r24, 0xFF	; 255
     868:	9f 4f       	sbci	r25, 0xFF	; 255
     86a:	99 23       	and	r25, r25
     86c:	a9 f0       	breq	.+42     	; 0x898 <__floatsisf+0x40>
     86e:	f9 2f       	mov	r31, r25
     870:	96 e9       	ldi	r25, 0x96	; 150
     872:	bb 27       	eor	r27, r27
     874:	93 95       	inc	r25
     876:	f6 95       	lsr	r31
     878:	87 95       	ror	r24
     87a:	77 95       	ror	r23
     87c:	67 95       	ror	r22
     87e:	b7 95       	ror	r27
     880:	f1 11       	cpse	r31, r1
     882:	f8 cf       	rjmp	.-16     	; 0x874 <__floatsisf+0x1c>
     884:	fa f4       	brpl	.+62     	; 0x8c4 <__floatsisf+0x6c>
     886:	bb 0f       	add	r27, r27
     888:	11 f4       	brne	.+4      	; 0x88e <__floatsisf+0x36>
     88a:	60 ff       	sbrs	r22, 0
     88c:	1b c0       	rjmp	.+54     	; 0x8c4 <__floatsisf+0x6c>
     88e:	6f 5f       	subi	r22, 0xFF	; 255
     890:	7f 4f       	sbci	r23, 0xFF	; 255
     892:	8f 4f       	sbci	r24, 0xFF	; 255
     894:	9f 4f       	sbci	r25, 0xFF	; 255
     896:	16 c0       	rjmp	.+44     	; 0x8c4 <__floatsisf+0x6c>
     898:	88 23       	and	r24, r24
     89a:	11 f0       	breq	.+4      	; 0x8a0 <__floatsisf+0x48>
     89c:	96 e9       	ldi	r25, 0x96	; 150
     89e:	11 c0       	rjmp	.+34     	; 0x8c2 <__floatsisf+0x6a>
     8a0:	77 23       	and	r23, r23
     8a2:	21 f0       	breq	.+8      	; 0x8ac <__floatsisf+0x54>
     8a4:	9e e8       	ldi	r25, 0x8E	; 142
     8a6:	87 2f       	mov	r24, r23
     8a8:	76 2f       	mov	r23, r22
     8aa:	05 c0       	rjmp	.+10     	; 0x8b6 <__floatsisf+0x5e>
     8ac:	66 23       	and	r22, r22
     8ae:	71 f0       	breq	.+28     	; 0x8cc <__floatsisf+0x74>
     8b0:	96 e8       	ldi	r25, 0x86	; 134
     8b2:	86 2f       	mov	r24, r22
     8b4:	70 e0       	ldi	r23, 0x00	; 0
     8b6:	60 e0       	ldi	r22, 0x00	; 0
     8b8:	2a f0       	brmi	.+10     	; 0x8c4 <__floatsisf+0x6c>
     8ba:	9a 95       	dec	r25
     8bc:	66 0f       	add	r22, r22
     8be:	77 1f       	adc	r23, r23
     8c0:	88 1f       	adc	r24, r24
     8c2:	da f7       	brpl	.-10     	; 0x8ba <__floatsisf+0x62>
     8c4:	88 0f       	add	r24, r24
     8c6:	96 95       	lsr	r25
     8c8:	87 95       	ror	r24
     8ca:	97 f9       	bld	r25, 7
     8cc:	08 95       	ret

000008ce <__fp_inf>:
     8ce:	97 f9       	bld	r25, 7
     8d0:	9f 67       	ori	r25, 0x7F	; 127
     8d2:	80 e8       	ldi	r24, 0x80	; 128
     8d4:	70 e0       	ldi	r23, 0x00	; 0
     8d6:	60 e0       	ldi	r22, 0x00	; 0
     8d8:	08 95       	ret

000008da <__fp_nan>:
     8da:	9f ef       	ldi	r25, 0xFF	; 255
     8dc:	80 ec       	ldi	r24, 0xC0	; 192
     8de:	08 95       	ret

000008e0 <__fp_pscA>:
     8e0:	00 24       	eor	r0, r0
     8e2:	0a 94       	dec	r0
     8e4:	16 16       	cp	r1, r22
     8e6:	17 06       	cpc	r1, r23
     8e8:	18 06       	cpc	r1, r24
     8ea:	09 06       	cpc	r0, r25
     8ec:	08 95       	ret

000008ee <__fp_pscB>:
     8ee:	00 24       	eor	r0, r0
     8f0:	0a 94       	dec	r0
     8f2:	12 16       	cp	r1, r18
     8f4:	13 06       	cpc	r1, r19
     8f6:	14 06       	cpc	r1, r20
     8f8:	05 06       	cpc	r0, r21
     8fa:	08 95       	ret

000008fc <__fp_round>:
     8fc:	09 2e       	mov	r0, r25
     8fe:	03 94       	inc	r0
     900:	00 0c       	add	r0, r0
     902:	11 f4       	brne	.+4      	; 0x908 <__stack+0x9>
     904:	88 23       	and	r24, r24
     906:	52 f0       	brmi	.+20     	; 0x91c <__stack+0x1d>
     908:	bb 0f       	add	r27, r27
     90a:	40 f4       	brcc	.+16     	; 0x91c <__stack+0x1d>
     90c:	bf 2b       	or	r27, r31
     90e:	11 f4       	brne	.+4      	; 0x914 <__stack+0x15>
     910:	60 ff       	sbrs	r22, 0
     912:	04 c0       	rjmp	.+8      	; 0x91c <__stack+0x1d>
     914:	6f 5f       	subi	r22, 0xFF	; 255
     916:	7f 4f       	sbci	r23, 0xFF	; 255
     918:	8f 4f       	sbci	r24, 0xFF	; 255
     91a:	9f 4f       	sbci	r25, 0xFF	; 255
     91c:	08 95       	ret

0000091e <__fp_split3>:
     91e:	57 fd       	sbrc	r21, 7
     920:	90 58       	subi	r25, 0x80	; 128
     922:	44 0f       	add	r20, r20
     924:	55 1f       	adc	r21, r21
     926:	59 f0       	breq	.+22     	; 0x93e <__fp_splitA+0x10>
     928:	5f 3f       	cpi	r21, 0xFF	; 255
     92a:	71 f0       	breq	.+28     	; 0x948 <__fp_splitA+0x1a>
     92c:	47 95       	ror	r20

0000092e <__fp_splitA>:
     92e:	88 0f       	add	r24, r24
     930:	97 fb       	bst	r25, 7
     932:	99 1f       	adc	r25, r25
     934:	61 f0       	breq	.+24     	; 0x94e <__fp_splitA+0x20>
     936:	9f 3f       	cpi	r25, 0xFF	; 255
     938:	79 f0       	breq	.+30     	; 0x958 <__fp_splitA+0x2a>
     93a:	87 95       	ror	r24
     93c:	08 95       	ret
     93e:	12 16       	cp	r1, r18
     940:	13 06       	cpc	r1, r19
     942:	14 06       	cpc	r1, r20
     944:	55 1f       	adc	r21, r21
     946:	f2 cf       	rjmp	.-28     	; 0x92c <__fp_split3+0xe>
     948:	46 95       	lsr	r20
     94a:	f1 df       	rcall	.-30     	; 0x92e <__fp_splitA>
     94c:	08 c0       	rjmp	.+16     	; 0x95e <__fp_splitA+0x30>
     94e:	16 16       	cp	r1, r22
     950:	17 06       	cpc	r1, r23
     952:	18 06       	cpc	r1, r24
     954:	99 1f       	adc	r25, r25
     956:	f1 cf       	rjmp	.-30     	; 0x93a <__fp_splitA+0xc>
     958:	86 95       	lsr	r24
     95a:	71 05       	cpc	r23, r1
     95c:	61 05       	cpc	r22, r1
     95e:	08 94       	sec
     960:	08 95       	ret

00000962 <__fp_zero>:
     962:	e8 94       	clt

00000964 <__fp_szero>:
     964:	bb 27       	eor	r27, r27
     966:	66 27       	eor	r22, r22
     968:	77 27       	eor	r23, r23
     96a:	cb 01       	movw	r24, r22
     96c:	97 f9       	bld	r25, 7
     96e:	08 95       	ret

00000970 <__mulsf3>:
     970:	0e 94 cb 04 	call	0x996	; 0x996 <__mulsf3x>
     974:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_round>
     978:	0e 94 70 04 	call	0x8e0	; 0x8e0 <__fp_pscA>
     97c:	38 f0       	brcs	.+14     	; 0x98c <__mulsf3+0x1c>
     97e:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fp_pscB>
     982:	20 f0       	brcs	.+8      	; 0x98c <__mulsf3+0x1c>
     984:	95 23       	and	r25, r21
     986:	11 f0       	breq	.+4      	; 0x98c <__mulsf3+0x1c>
     988:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <__fp_inf>
     98c:	0c 94 6d 04 	jmp	0x8da	; 0x8da <__fp_nan>
     990:	11 24       	eor	r1, r1
     992:	0c 94 b2 04 	jmp	0x964	; 0x964 <__fp_szero>

00000996 <__mulsf3x>:
     996:	0e 94 8f 04 	call	0x91e	; 0x91e <__fp_split3>
     99a:	70 f3       	brcs	.-36     	; 0x978 <__mulsf3+0x8>

0000099c <__mulsf3_pse>:
     99c:	95 9f       	mul	r25, r21
     99e:	c1 f3       	breq	.-16     	; 0x990 <__mulsf3+0x20>
     9a0:	95 0f       	add	r25, r21
     9a2:	50 e0       	ldi	r21, 0x00	; 0
     9a4:	55 1f       	adc	r21, r21
     9a6:	62 9f       	mul	r22, r18
     9a8:	f0 01       	movw	r30, r0
     9aa:	72 9f       	mul	r23, r18
     9ac:	bb 27       	eor	r27, r27
     9ae:	f0 0d       	add	r31, r0
     9b0:	b1 1d       	adc	r27, r1
     9b2:	63 9f       	mul	r22, r19
     9b4:	aa 27       	eor	r26, r26
     9b6:	f0 0d       	add	r31, r0
     9b8:	b1 1d       	adc	r27, r1
     9ba:	aa 1f       	adc	r26, r26
     9bc:	64 9f       	mul	r22, r20
     9be:	66 27       	eor	r22, r22
     9c0:	b0 0d       	add	r27, r0
     9c2:	a1 1d       	adc	r26, r1
     9c4:	66 1f       	adc	r22, r22
     9c6:	82 9f       	mul	r24, r18
     9c8:	22 27       	eor	r18, r18
     9ca:	b0 0d       	add	r27, r0
     9cc:	a1 1d       	adc	r26, r1
     9ce:	62 1f       	adc	r22, r18
     9d0:	73 9f       	mul	r23, r19
     9d2:	b0 0d       	add	r27, r0
     9d4:	a1 1d       	adc	r26, r1
     9d6:	62 1f       	adc	r22, r18
     9d8:	83 9f       	mul	r24, r19
     9da:	a0 0d       	add	r26, r0
     9dc:	61 1d       	adc	r22, r1
     9de:	22 1f       	adc	r18, r18
     9e0:	74 9f       	mul	r23, r20
     9e2:	33 27       	eor	r19, r19
     9e4:	a0 0d       	add	r26, r0
     9e6:	61 1d       	adc	r22, r1
     9e8:	23 1f       	adc	r18, r19
     9ea:	84 9f       	mul	r24, r20
     9ec:	60 0d       	add	r22, r0
     9ee:	21 1d       	adc	r18, r1
     9f0:	82 2f       	mov	r24, r18
     9f2:	76 2f       	mov	r23, r22
     9f4:	6a 2f       	mov	r22, r26
     9f6:	11 24       	eor	r1, r1
     9f8:	9f 57       	subi	r25, 0x7F	; 127
     9fa:	50 40       	sbci	r21, 0x00	; 0
     9fc:	9a f0       	brmi	.+38     	; 0xa24 <__mulsf3_pse+0x88>
     9fe:	f1 f0       	breq	.+60     	; 0xa3c <__mulsf3_pse+0xa0>
     a00:	88 23       	and	r24, r24
     a02:	4a f0       	brmi	.+18     	; 0xa16 <__mulsf3_pse+0x7a>
     a04:	ee 0f       	add	r30, r30
     a06:	ff 1f       	adc	r31, r31
     a08:	bb 1f       	adc	r27, r27
     a0a:	66 1f       	adc	r22, r22
     a0c:	77 1f       	adc	r23, r23
     a0e:	88 1f       	adc	r24, r24
     a10:	91 50       	subi	r25, 0x01	; 1
     a12:	50 40       	sbci	r21, 0x00	; 0
     a14:	a9 f7       	brne	.-22     	; 0xa00 <__mulsf3_pse+0x64>
     a16:	9e 3f       	cpi	r25, 0xFE	; 254
     a18:	51 05       	cpc	r21, r1
     a1a:	80 f0       	brcs	.+32     	; 0xa3c <__mulsf3_pse+0xa0>
     a1c:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <__fp_inf>
     a20:	0c 94 b2 04 	jmp	0x964	; 0x964 <__fp_szero>
     a24:	5f 3f       	cpi	r21, 0xFF	; 255
     a26:	e4 f3       	brlt	.-8      	; 0xa20 <__mulsf3_pse+0x84>
     a28:	98 3e       	cpi	r25, 0xE8	; 232
     a2a:	d4 f3       	brlt	.-12     	; 0xa20 <__mulsf3_pse+0x84>
     a2c:	86 95       	lsr	r24
     a2e:	77 95       	ror	r23
     a30:	67 95       	ror	r22
     a32:	b7 95       	ror	r27
     a34:	f7 95       	ror	r31
     a36:	e7 95       	ror	r30
     a38:	9f 5f       	subi	r25, 0xFF	; 255
     a3a:	c1 f7       	brne	.-16     	; 0xa2c <__mulsf3_pse+0x90>
     a3c:	fe 2b       	or	r31, r30
     a3e:	88 0f       	add	r24, r24
     a40:	91 1d       	adc	r25, r1
     a42:	96 95       	lsr	r25
     a44:	87 95       	ror	r24
     a46:	97 f9       	bld	r25, 7
     a48:	08 95       	ret

00000a4a <__udivmodqi4>:
     a4a:	99 1b       	sub	r25, r25
     a4c:	79 e0       	ldi	r23, 0x09	; 9
     a4e:	04 c0       	rjmp	.+8      	; 0xa58 <__udivmodqi4_ep>

00000a50 <__udivmodqi4_loop>:
     a50:	99 1f       	adc	r25, r25
     a52:	96 17       	cp	r25, r22
     a54:	08 f0       	brcs	.+2      	; 0xa58 <__udivmodqi4_ep>
     a56:	96 1b       	sub	r25, r22

00000a58 <__udivmodqi4_ep>:
     a58:	88 1f       	adc	r24, r24
     a5a:	7a 95       	dec	r23
     a5c:	c9 f7       	brne	.-14     	; 0xa50 <__udivmodqi4_loop>
     a5e:	80 95       	com	r24
     a60:	08 95       	ret

00000a62 <snprintf>:
     a62:	ae e0       	ldi	r26, 0x0E	; 14
     a64:	b0 e0       	ldi	r27, 0x00	; 0
     a66:	e7 e3       	ldi	r30, 0x37	; 55
     a68:	f5 e0       	ldi	r31, 0x05	; 5
     a6a:	0c 94 ed 07 	jmp	0xfda	; 0xfda <__prologue_saves__+0x1c>
     a6e:	0d 89       	ldd	r16, Y+21	; 0x15
     a70:	1e 89       	ldd	r17, Y+22	; 0x16
     a72:	8f 89       	ldd	r24, Y+23	; 0x17
     a74:	98 8d       	ldd	r25, Y+24	; 0x18
     a76:	26 e0       	ldi	r18, 0x06	; 6
     a78:	2c 83       	std	Y+4, r18	; 0x04
     a7a:	1a 83       	std	Y+2, r17	; 0x02
     a7c:	09 83       	std	Y+1, r16	; 0x01
     a7e:	97 ff       	sbrs	r25, 7
     a80:	02 c0       	rjmp	.+4      	; 0xa86 <snprintf+0x24>
     a82:	80 e0       	ldi	r24, 0x00	; 0
     a84:	90 e8       	ldi	r25, 0x80	; 128
     a86:	01 97       	sbiw	r24, 0x01	; 1
     a88:	9e 83       	std	Y+6, r25	; 0x06
     a8a:	8d 83       	std	Y+5, r24	; 0x05
     a8c:	ae 01       	movw	r20, r28
     a8e:	45 5e       	subi	r20, 0xE5	; 229
     a90:	5f 4f       	sbci	r21, 0xFF	; 255
     a92:	69 8d       	ldd	r22, Y+25	; 0x19
     a94:	7a 8d       	ldd	r23, Y+26	; 0x1a
     a96:	ce 01       	movw	r24, r28
     a98:	01 96       	adiw	r24, 0x01	; 1
     a9a:	0e 94 61 05 	call	0xac2	; 0xac2 <vfprintf>
     a9e:	4d 81       	ldd	r20, Y+5	; 0x05
     aa0:	5e 81       	ldd	r21, Y+6	; 0x06
     aa2:	57 fd       	sbrc	r21, 7
     aa4:	0a c0       	rjmp	.+20     	; 0xaba <snprintf+0x58>
     aa6:	2f 81       	ldd	r18, Y+7	; 0x07
     aa8:	38 85       	ldd	r19, Y+8	; 0x08
     aaa:	42 17       	cp	r20, r18
     aac:	53 07       	cpc	r21, r19
     aae:	0c f4       	brge	.+2      	; 0xab2 <snprintf+0x50>
     ab0:	9a 01       	movw	r18, r20
     ab2:	f8 01       	movw	r30, r16
     ab4:	e2 0f       	add	r30, r18
     ab6:	f3 1f       	adc	r31, r19
     ab8:	10 82       	st	Z, r1
     aba:	2e 96       	adiw	r28, 0x0e	; 14
     abc:	e4 e0       	ldi	r30, 0x04	; 4
     abe:	0c 94 09 08 	jmp	0x1012	; 0x1012 <__epilogue_restores__+0x1c>

00000ac2 <vfprintf>:
     ac2:	ac e0       	ldi	r26, 0x0C	; 12
     ac4:	b0 e0       	ldi	r27, 0x00	; 0
     ac6:	e7 e6       	ldi	r30, 0x67	; 103
     ac8:	f5 e0       	ldi	r31, 0x05	; 5
     aca:	0c 94 df 07 	jmp	0xfbe	; 0xfbe <__prologue_saves__>
     ace:	7c 01       	movw	r14, r24
     ad0:	6b 01       	movw	r12, r22
     ad2:	8a 01       	movw	r16, r20
     ad4:	fc 01       	movw	r30, r24
     ad6:	17 82       	std	Z+7, r1	; 0x07
     ad8:	16 82       	std	Z+6, r1	; 0x06
     ada:	83 81       	ldd	r24, Z+3	; 0x03
     adc:	81 ff       	sbrs	r24, 1
     ade:	bd c1       	rjmp	.+890    	; 0xe5a <vfprintf+0x398>
     ae0:	ce 01       	movw	r24, r28
     ae2:	01 96       	adiw	r24, 0x01	; 1
     ae4:	4c 01       	movw	r8, r24
     ae6:	f7 01       	movw	r30, r14
     ae8:	93 81       	ldd	r25, Z+3	; 0x03
     aea:	f6 01       	movw	r30, r12
     aec:	93 fd       	sbrc	r25, 3
     aee:	85 91       	lpm	r24, Z+
     af0:	93 ff       	sbrs	r25, 3
     af2:	81 91       	ld	r24, Z+
     af4:	6f 01       	movw	r12, r30
     af6:	88 23       	and	r24, r24
     af8:	09 f4       	brne	.+2      	; 0xafc <vfprintf+0x3a>
     afa:	ab c1       	rjmp	.+854    	; 0xe52 <vfprintf+0x390>
     afc:	85 32       	cpi	r24, 0x25	; 37
     afe:	39 f4       	brne	.+14     	; 0xb0e <vfprintf+0x4c>
     b00:	93 fd       	sbrc	r25, 3
     b02:	85 91       	lpm	r24, Z+
     b04:	93 ff       	sbrs	r25, 3
     b06:	81 91       	ld	r24, Z+
     b08:	6f 01       	movw	r12, r30
     b0a:	85 32       	cpi	r24, 0x25	; 37
     b0c:	29 f4       	brne	.+10     	; 0xb18 <vfprintf+0x56>
     b0e:	b7 01       	movw	r22, r14
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	0e 94 49 07 	call	0xe92	; 0xe92 <fputc>
     b16:	e7 cf       	rjmp	.-50     	; 0xae6 <vfprintf+0x24>
     b18:	51 2c       	mov	r5, r1
     b1a:	31 2c       	mov	r3, r1
     b1c:	20 e0       	ldi	r18, 0x00	; 0
     b1e:	20 32       	cpi	r18, 0x20	; 32
     b20:	a0 f4       	brcc	.+40     	; 0xb4a <vfprintf+0x88>
     b22:	8b 32       	cpi	r24, 0x2B	; 43
     b24:	69 f0       	breq	.+26     	; 0xb40 <vfprintf+0x7e>
     b26:	30 f4       	brcc	.+12     	; 0xb34 <vfprintf+0x72>
     b28:	80 32       	cpi	r24, 0x20	; 32
     b2a:	59 f0       	breq	.+22     	; 0xb42 <vfprintf+0x80>
     b2c:	83 32       	cpi	r24, 0x23	; 35
     b2e:	69 f4       	brne	.+26     	; 0xb4a <vfprintf+0x88>
     b30:	20 61       	ori	r18, 0x10	; 16
     b32:	2c c0       	rjmp	.+88     	; 0xb8c <vfprintf+0xca>
     b34:	8d 32       	cpi	r24, 0x2D	; 45
     b36:	39 f0       	breq	.+14     	; 0xb46 <vfprintf+0x84>
     b38:	80 33       	cpi	r24, 0x30	; 48
     b3a:	39 f4       	brne	.+14     	; 0xb4a <vfprintf+0x88>
     b3c:	21 60       	ori	r18, 0x01	; 1
     b3e:	26 c0       	rjmp	.+76     	; 0xb8c <vfprintf+0xca>
     b40:	22 60       	ori	r18, 0x02	; 2
     b42:	24 60       	ori	r18, 0x04	; 4
     b44:	23 c0       	rjmp	.+70     	; 0xb8c <vfprintf+0xca>
     b46:	28 60       	ori	r18, 0x08	; 8
     b48:	21 c0       	rjmp	.+66     	; 0xb8c <vfprintf+0xca>
     b4a:	27 fd       	sbrc	r18, 7
     b4c:	27 c0       	rjmp	.+78     	; 0xb9c <vfprintf+0xda>
     b4e:	30 ed       	ldi	r19, 0xD0	; 208
     b50:	38 0f       	add	r19, r24
     b52:	3a 30       	cpi	r19, 0x0A	; 10
     b54:	78 f4       	brcc	.+30     	; 0xb74 <vfprintf+0xb2>
     b56:	26 ff       	sbrs	r18, 6
     b58:	06 c0       	rjmp	.+12     	; 0xb66 <vfprintf+0xa4>
     b5a:	fa e0       	ldi	r31, 0x0A	; 10
     b5c:	5f 9e       	mul	r5, r31
     b5e:	30 0d       	add	r19, r0
     b60:	11 24       	eor	r1, r1
     b62:	53 2e       	mov	r5, r19
     b64:	13 c0       	rjmp	.+38     	; 0xb8c <vfprintf+0xca>
     b66:	8a e0       	ldi	r24, 0x0A	; 10
     b68:	38 9e       	mul	r3, r24
     b6a:	30 0d       	add	r19, r0
     b6c:	11 24       	eor	r1, r1
     b6e:	33 2e       	mov	r3, r19
     b70:	20 62       	ori	r18, 0x20	; 32
     b72:	0c c0       	rjmp	.+24     	; 0xb8c <vfprintf+0xca>
     b74:	8e 32       	cpi	r24, 0x2E	; 46
     b76:	21 f4       	brne	.+8      	; 0xb80 <vfprintf+0xbe>
     b78:	26 fd       	sbrc	r18, 6
     b7a:	6b c1       	rjmp	.+726    	; 0xe52 <vfprintf+0x390>
     b7c:	20 64       	ori	r18, 0x40	; 64
     b7e:	06 c0       	rjmp	.+12     	; 0xb8c <vfprintf+0xca>
     b80:	8c 36       	cpi	r24, 0x6C	; 108
     b82:	11 f4       	brne	.+4      	; 0xb88 <vfprintf+0xc6>
     b84:	20 68       	ori	r18, 0x80	; 128
     b86:	02 c0       	rjmp	.+4      	; 0xb8c <vfprintf+0xca>
     b88:	88 36       	cpi	r24, 0x68	; 104
     b8a:	41 f4       	brne	.+16     	; 0xb9c <vfprintf+0xda>
     b8c:	f6 01       	movw	r30, r12
     b8e:	93 fd       	sbrc	r25, 3
     b90:	85 91       	lpm	r24, Z+
     b92:	93 ff       	sbrs	r25, 3
     b94:	81 91       	ld	r24, Z+
     b96:	6f 01       	movw	r12, r30
     b98:	81 11       	cpse	r24, r1
     b9a:	c1 cf       	rjmp	.-126    	; 0xb1e <vfprintf+0x5c>
     b9c:	98 2f       	mov	r25, r24
     b9e:	9f 7d       	andi	r25, 0xDF	; 223
     ba0:	95 54       	subi	r25, 0x45	; 69
     ba2:	93 30       	cpi	r25, 0x03	; 3
     ba4:	28 f4       	brcc	.+10     	; 0xbb0 <vfprintf+0xee>
     ba6:	0c 5f       	subi	r16, 0xFC	; 252
     ba8:	1f 4f       	sbci	r17, 0xFF	; 255
     baa:	ff e3       	ldi	r31, 0x3F	; 63
     bac:	f9 83       	std	Y+1, r31	; 0x01
     bae:	0d c0       	rjmp	.+26     	; 0xbca <vfprintf+0x108>
     bb0:	83 36       	cpi	r24, 0x63	; 99
     bb2:	31 f0       	breq	.+12     	; 0xbc0 <vfprintf+0xfe>
     bb4:	83 37       	cpi	r24, 0x73	; 115
     bb6:	71 f0       	breq	.+28     	; 0xbd4 <vfprintf+0x112>
     bb8:	83 35       	cpi	r24, 0x53	; 83
     bba:	09 f0       	breq	.+2      	; 0xbbe <vfprintf+0xfc>
     bbc:	5b c0       	rjmp	.+182    	; 0xc74 <vfprintf+0x1b2>
     bbe:	22 c0       	rjmp	.+68     	; 0xc04 <vfprintf+0x142>
     bc0:	f8 01       	movw	r30, r16
     bc2:	80 81       	ld	r24, Z
     bc4:	89 83       	std	Y+1, r24	; 0x01
     bc6:	0e 5f       	subi	r16, 0xFE	; 254
     bc8:	1f 4f       	sbci	r17, 0xFF	; 255
     bca:	44 24       	eor	r4, r4
     bcc:	43 94       	inc	r4
     bce:	51 2c       	mov	r5, r1
     bd0:	54 01       	movw	r10, r8
     bd2:	15 c0       	rjmp	.+42     	; 0xbfe <vfprintf+0x13c>
     bd4:	38 01       	movw	r6, r16
     bd6:	f2 e0       	ldi	r31, 0x02	; 2
     bd8:	6f 0e       	add	r6, r31
     bda:	71 1c       	adc	r7, r1
     bdc:	f8 01       	movw	r30, r16
     bde:	a0 80       	ld	r10, Z
     be0:	b1 80       	ldd	r11, Z+1	; 0x01
     be2:	26 ff       	sbrs	r18, 6
     be4:	03 c0       	rjmp	.+6      	; 0xbec <vfprintf+0x12a>
     be6:	65 2d       	mov	r22, r5
     be8:	70 e0       	ldi	r23, 0x00	; 0
     bea:	02 c0       	rjmp	.+4      	; 0xbf0 <vfprintf+0x12e>
     bec:	6f ef       	ldi	r22, 0xFF	; 255
     bee:	7f ef       	ldi	r23, 0xFF	; 255
     bf0:	c5 01       	movw	r24, r10
     bf2:	2c 87       	std	Y+12, r18	; 0x0c
     bf4:	0e 94 3e 07 	call	0xe7c	; 0xe7c <strnlen>
     bf8:	2c 01       	movw	r4, r24
     bfa:	83 01       	movw	r16, r6
     bfc:	2c 85       	ldd	r18, Y+12	; 0x0c
     bfe:	2f 77       	andi	r18, 0x7F	; 127
     c00:	22 2e       	mov	r2, r18
     c02:	17 c0       	rjmp	.+46     	; 0xc32 <vfprintf+0x170>
     c04:	38 01       	movw	r6, r16
     c06:	f2 e0       	ldi	r31, 0x02	; 2
     c08:	6f 0e       	add	r6, r31
     c0a:	71 1c       	adc	r7, r1
     c0c:	f8 01       	movw	r30, r16
     c0e:	a0 80       	ld	r10, Z
     c10:	b1 80       	ldd	r11, Z+1	; 0x01
     c12:	26 ff       	sbrs	r18, 6
     c14:	03 c0       	rjmp	.+6      	; 0xc1c <vfprintf+0x15a>
     c16:	65 2d       	mov	r22, r5
     c18:	70 e0       	ldi	r23, 0x00	; 0
     c1a:	02 c0       	rjmp	.+4      	; 0xc20 <vfprintf+0x15e>
     c1c:	6f ef       	ldi	r22, 0xFF	; 255
     c1e:	7f ef       	ldi	r23, 0xFF	; 255
     c20:	c5 01       	movw	r24, r10
     c22:	2c 87       	std	Y+12, r18	; 0x0c
     c24:	0e 94 33 07 	call	0xe66	; 0xe66 <strnlen_P>
     c28:	2c 01       	movw	r4, r24
     c2a:	2c 85       	ldd	r18, Y+12	; 0x0c
     c2c:	20 68       	ori	r18, 0x80	; 128
     c2e:	22 2e       	mov	r2, r18
     c30:	83 01       	movw	r16, r6
     c32:	23 fc       	sbrc	r2, 3
     c34:	1b c0       	rjmp	.+54     	; 0xc6c <vfprintf+0x1aa>
     c36:	83 2d       	mov	r24, r3
     c38:	90 e0       	ldi	r25, 0x00	; 0
     c3a:	48 16       	cp	r4, r24
     c3c:	59 06       	cpc	r5, r25
     c3e:	b0 f4       	brcc	.+44     	; 0xc6c <vfprintf+0x1aa>
     c40:	b7 01       	movw	r22, r14
     c42:	80 e2       	ldi	r24, 0x20	; 32
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	0e 94 49 07 	call	0xe92	; 0xe92 <fputc>
     c4a:	3a 94       	dec	r3
     c4c:	f4 cf       	rjmp	.-24     	; 0xc36 <vfprintf+0x174>
     c4e:	f5 01       	movw	r30, r10
     c50:	27 fc       	sbrc	r2, 7
     c52:	85 91       	lpm	r24, Z+
     c54:	27 fe       	sbrs	r2, 7
     c56:	81 91       	ld	r24, Z+
     c58:	5f 01       	movw	r10, r30
     c5a:	b7 01       	movw	r22, r14
     c5c:	90 e0       	ldi	r25, 0x00	; 0
     c5e:	0e 94 49 07 	call	0xe92	; 0xe92 <fputc>
     c62:	31 10       	cpse	r3, r1
     c64:	3a 94       	dec	r3
     c66:	f1 e0       	ldi	r31, 0x01	; 1
     c68:	4f 1a       	sub	r4, r31
     c6a:	51 08       	sbc	r5, r1
     c6c:	41 14       	cp	r4, r1
     c6e:	51 04       	cpc	r5, r1
     c70:	71 f7       	brne	.-36     	; 0xc4e <vfprintf+0x18c>
     c72:	e5 c0       	rjmp	.+458    	; 0xe3e <vfprintf+0x37c>
     c74:	84 36       	cpi	r24, 0x64	; 100
     c76:	11 f0       	breq	.+4      	; 0xc7c <vfprintf+0x1ba>
     c78:	89 36       	cpi	r24, 0x69	; 105
     c7a:	39 f5       	brne	.+78     	; 0xcca <vfprintf+0x208>
     c7c:	f8 01       	movw	r30, r16
     c7e:	27 ff       	sbrs	r18, 7
     c80:	07 c0       	rjmp	.+14     	; 0xc90 <vfprintf+0x1ce>
     c82:	60 81       	ld	r22, Z
     c84:	71 81       	ldd	r23, Z+1	; 0x01
     c86:	82 81       	ldd	r24, Z+2	; 0x02
     c88:	93 81       	ldd	r25, Z+3	; 0x03
     c8a:	0c 5f       	subi	r16, 0xFC	; 252
     c8c:	1f 4f       	sbci	r17, 0xFF	; 255
     c8e:	08 c0       	rjmp	.+16     	; 0xca0 <vfprintf+0x1de>
     c90:	60 81       	ld	r22, Z
     c92:	71 81       	ldd	r23, Z+1	; 0x01
     c94:	07 2e       	mov	r0, r23
     c96:	00 0c       	add	r0, r0
     c98:	88 0b       	sbc	r24, r24
     c9a:	99 0b       	sbc	r25, r25
     c9c:	0e 5f       	subi	r16, 0xFE	; 254
     c9e:	1f 4f       	sbci	r17, 0xFF	; 255
     ca0:	2f 76       	andi	r18, 0x6F	; 111
     ca2:	72 2e       	mov	r7, r18
     ca4:	97 ff       	sbrs	r25, 7
     ca6:	09 c0       	rjmp	.+18     	; 0xcba <vfprintf+0x1f8>
     ca8:	90 95       	com	r25
     caa:	80 95       	com	r24
     cac:	70 95       	com	r23
     cae:	61 95       	neg	r22
     cb0:	7f 4f       	sbci	r23, 0xFF	; 255
     cb2:	8f 4f       	sbci	r24, 0xFF	; 255
     cb4:	9f 4f       	sbci	r25, 0xFF	; 255
     cb6:	20 68       	ori	r18, 0x80	; 128
     cb8:	72 2e       	mov	r7, r18
     cba:	2a e0       	ldi	r18, 0x0A	; 10
     cbc:	30 e0       	ldi	r19, 0x00	; 0
     cbe:	a4 01       	movw	r20, r8
     cc0:	0e 94 81 07 	call	0xf02	; 0xf02 <__ultoa_invert>
     cc4:	a8 2e       	mov	r10, r24
     cc6:	a8 18       	sub	r10, r8
     cc8:	44 c0       	rjmp	.+136    	; 0xd52 <vfprintf+0x290>
     cca:	85 37       	cpi	r24, 0x75	; 117
     ccc:	29 f4       	brne	.+10     	; 0xcd8 <vfprintf+0x216>
     cce:	2f 7e       	andi	r18, 0xEF	; 239
     cd0:	b2 2e       	mov	r11, r18
     cd2:	2a e0       	ldi	r18, 0x0A	; 10
     cd4:	30 e0       	ldi	r19, 0x00	; 0
     cd6:	25 c0       	rjmp	.+74     	; 0xd22 <vfprintf+0x260>
     cd8:	f2 2f       	mov	r31, r18
     cda:	f9 7f       	andi	r31, 0xF9	; 249
     cdc:	bf 2e       	mov	r11, r31
     cde:	8f 36       	cpi	r24, 0x6F	; 111
     ce0:	c1 f0       	breq	.+48     	; 0xd12 <vfprintf+0x250>
     ce2:	18 f4       	brcc	.+6      	; 0xcea <vfprintf+0x228>
     ce4:	88 35       	cpi	r24, 0x58	; 88
     ce6:	79 f0       	breq	.+30     	; 0xd06 <vfprintf+0x244>
     ce8:	b4 c0       	rjmp	.+360    	; 0xe52 <vfprintf+0x390>
     cea:	80 37       	cpi	r24, 0x70	; 112
     cec:	19 f0       	breq	.+6      	; 0xcf4 <vfprintf+0x232>
     cee:	88 37       	cpi	r24, 0x78	; 120
     cf0:	21 f0       	breq	.+8      	; 0xcfa <vfprintf+0x238>
     cf2:	af c0       	rjmp	.+350    	; 0xe52 <vfprintf+0x390>
     cf4:	2f 2f       	mov	r18, r31
     cf6:	20 61       	ori	r18, 0x10	; 16
     cf8:	b2 2e       	mov	r11, r18
     cfa:	b4 fe       	sbrs	r11, 4
     cfc:	0d c0       	rjmp	.+26     	; 0xd18 <vfprintf+0x256>
     cfe:	8b 2d       	mov	r24, r11
     d00:	84 60       	ori	r24, 0x04	; 4
     d02:	b8 2e       	mov	r11, r24
     d04:	09 c0       	rjmp	.+18     	; 0xd18 <vfprintf+0x256>
     d06:	24 ff       	sbrs	r18, 4
     d08:	0a c0       	rjmp	.+20     	; 0xd1e <vfprintf+0x25c>
     d0a:	9f 2f       	mov	r25, r31
     d0c:	96 60       	ori	r25, 0x06	; 6
     d0e:	b9 2e       	mov	r11, r25
     d10:	06 c0       	rjmp	.+12     	; 0xd1e <vfprintf+0x25c>
     d12:	28 e0       	ldi	r18, 0x08	; 8
     d14:	30 e0       	ldi	r19, 0x00	; 0
     d16:	05 c0       	rjmp	.+10     	; 0xd22 <vfprintf+0x260>
     d18:	20 e1       	ldi	r18, 0x10	; 16
     d1a:	30 e0       	ldi	r19, 0x00	; 0
     d1c:	02 c0       	rjmp	.+4      	; 0xd22 <vfprintf+0x260>
     d1e:	20 e1       	ldi	r18, 0x10	; 16
     d20:	32 e0       	ldi	r19, 0x02	; 2
     d22:	f8 01       	movw	r30, r16
     d24:	b7 fe       	sbrs	r11, 7
     d26:	07 c0       	rjmp	.+14     	; 0xd36 <vfprintf+0x274>
     d28:	60 81       	ld	r22, Z
     d2a:	71 81       	ldd	r23, Z+1	; 0x01
     d2c:	82 81       	ldd	r24, Z+2	; 0x02
     d2e:	93 81       	ldd	r25, Z+3	; 0x03
     d30:	0c 5f       	subi	r16, 0xFC	; 252
     d32:	1f 4f       	sbci	r17, 0xFF	; 255
     d34:	06 c0       	rjmp	.+12     	; 0xd42 <vfprintf+0x280>
     d36:	60 81       	ld	r22, Z
     d38:	71 81       	ldd	r23, Z+1	; 0x01
     d3a:	80 e0       	ldi	r24, 0x00	; 0
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	0e 5f       	subi	r16, 0xFE	; 254
     d40:	1f 4f       	sbci	r17, 0xFF	; 255
     d42:	a4 01       	movw	r20, r8
     d44:	0e 94 81 07 	call	0xf02	; 0xf02 <__ultoa_invert>
     d48:	a8 2e       	mov	r10, r24
     d4a:	a8 18       	sub	r10, r8
     d4c:	fb 2d       	mov	r31, r11
     d4e:	ff 77       	andi	r31, 0x7F	; 127
     d50:	7f 2e       	mov	r7, r31
     d52:	76 fe       	sbrs	r7, 6
     d54:	0b c0       	rjmp	.+22     	; 0xd6c <vfprintf+0x2aa>
     d56:	37 2d       	mov	r19, r7
     d58:	3e 7f       	andi	r19, 0xFE	; 254
     d5a:	a5 14       	cp	r10, r5
     d5c:	50 f4       	brcc	.+20     	; 0xd72 <vfprintf+0x2b0>
     d5e:	74 fe       	sbrs	r7, 4
     d60:	0a c0       	rjmp	.+20     	; 0xd76 <vfprintf+0x2b4>
     d62:	72 fc       	sbrc	r7, 2
     d64:	08 c0       	rjmp	.+16     	; 0xd76 <vfprintf+0x2b4>
     d66:	37 2d       	mov	r19, r7
     d68:	3e 7e       	andi	r19, 0xEE	; 238
     d6a:	05 c0       	rjmp	.+10     	; 0xd76 <vfprintf+0x2b4>
     d6c:	ba 2c       	mov	r11, r10
     d6e:	37 2d       	mov	r19, r7
     d70:	03 c0       	rjmp	.+6      	; 0xd78 <vfprintf+0x2b6>
     d72:	ba 2c       	mov	r11, r10
     d74:	01 c0       	rjmp	.+2      	; 0xd78 <vfprintf+0x2b6>
     d76:	b5 2c       	mov	r11, r5
     d78:	34 ff       	sbrs	r19, 4
     d7a:	0d c0       	rjmp	.+26     	; 0xd96 <vfprintf+0x2d4>
     d7c:	fe 01       	movw	r30, r28
     d7e:	ea 0d       	add	r30, r10
     d80:	f1 1d       	adc	r31, r1
     d82:	80 81       	ld	r24, Z
     d84:	80 33       	cpi	r24, 0x30	; 48
     d86:	11 f4       	brne	.+4      	; 0xd8c <vfprintf+0x2ca>
     d88:	39 7e       	andi	r19, 0xE9	; 233
     d8a:	09 c0       	rjmp	.+18     	; 0xd9e <vfprintf+0x2dc>
     d8c:	32 ff       	sbrs	r19, 2
     d8e:	06 c0       	rjmp	.+12     	; 0xd9c <vfprintf+0x2da>
     d90:	b3 94       	inc	r11
     d92:	b3 94       	inc	r11
     d94:	04 c0       	rjmp	.+8      	; 0xd9e <vfprintf+0x2dc>
     d96:	83 2f       	mov	r24, r19
     d98:	86 78       	andi	r24, 0x86	; 134
     d9a:	09 f0       	breq	.+2      	; 0xd9e <vfprintf+0x2dc>
     d9c:	b3 94       	inc	r11
     d9e:	33 fd       	sbrc	r19, 3
     da0:	13 c0       	rjmp	.+38     	; 0xdc8 <vfprintf+0x306>
     da2:	30 ff       	sbrs	r19, 0
     da4:	06 c0       	rjmp	.+12     	; 0xdb2 <vfprintf+0x2f0>
     da6:	5a 2c       	mov	r5, r10
     da8:	b3 14       	cp	r11, r3
     daa:	18 f4       	brcc	.+6      	; 0xdb2 <vfprintf+0x2f0>
     dac:	53 0c       	add	r5, r3
     dae:	5b 18       	sub	r5, r11
     db0:	b3 2c       	mov	r11, r3
     db2:	b3 14       	cp	r11, r3
     db4:	68 f4       	brcc	.+26     	; 0xdd0 <vfprintf+0x30e>
     db6:	b7 01       	movw	r22, r14
     db8:	80 e2       	ldi	r24, 0x20	; 32
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	3c 87       	std	Y+12, r19	; 0x0c
     dbe:	0e 94 49 07 	call	0xe92	; 0xe92 <fputc>
     dc2:	b3 94       	inc	r11
     dc4:	3c 85       	ldd	r19, Y+12	; 0x0c
     dc6:	f5 cf       	rjmp	.-22     	; 0xdb2 <vfprintf+0x2f0>
     dc8:	b3 14       	cp	r11, r3
     dca:	10 f4       	brcc	.+4      	; 0xdd0 <vfprintf+0x30e>
     dcc:	3b 18       	sub	r3, r11
     dce:	01 c0       	rjmp	.+2      	; 0xdd2 <vfprintf+0x310>
     dd0:	31 2c       	mov	r3, r1
     dd2:	34 ff       	sbrs	r19, 4
     dd4:	12 c0       	rjmp	.+36     	; 0xdfa <vfprintf+0x338>
     dd6:	b7 01       	movw	r22, r14
     dd8:	80 e3       	ldi	r24, 0x30	; 48
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	3c 87       	std	Y+12, r19	; 0x0c
     dde:	0e 94 49 07 	call	0xe92	; 0xe92 <fputc>
     de2:	3c 85       	ldd	r19, Y+12	; 0x0c
     de4:	32 ff       	sbrs	r19, 2
     de6:	17 c0       	rjmp	.+46     	; 0xe16 <vfprintf+0x354>
     de8:	31 fd       	sbrc	r19, 1
     dea:	03 c0       	rjmp	.+6      	; 0xdf2 <vfprintf+0x330>
     dec:	88 e7       	ldi	r24, 0x78	; 120
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	02 c0       	rjmp	.+4      	; 0xdf6 <vfprintf+0x334>
     df2:	88 e5       	ldi	r24, 0x58	; 88
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	b7 01       	movw	r22, r14
     df8:	0c c0       	rjmp	.+24     	; 0xe12 <vfprintf+0x350>
     dfa:	83 2f       	mov	r24, r19
     dfc:	86 78       	andi	r24, 0x86	; 134
     dfe:	59 f0       	breq	.+22     	; 0xe16 <vfprintf+0x354>
     e00:	31 ff       	sbrs	r19, 1
     e02:	02 c0       	rjmp	.+4      	; 0xe08 <vfprintf+0x346>
     e04:	8b e2       	ldi	r24, 0x2B	; 43
     e06:	01 c0       	rjmp	.+2      	; 0xe0a <vfprintf+0x348>
     e08:	80 e2       	ldi	r24, 0x20	; 32
     e0a:	37 fd       	sbrc	r19, 7
     e0c:	8d e2       	ldi	r24, 0x2D	; 45
     e0e:	b7 01       	movw	r22, r14
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	0e 94 49 07 	call	0xe92	; 0xe92 <fputc>
     e16:	a5 14       	cp	r10, r5
     e18:	38 f4       	brcc	.+14     	; 0xe28 <vfprintf+0x366>
     e1a:	b7 01       	movw	r22, r14
     e1c:	80 e3       	ldi	r24, 0x30	; 48
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	0e 94 49 07 	call	0xe92	; 0xe92 <fputc>
     e24:	5a 94       	dec	r5
     e26:	f7 cf       	rjmp	.-18     	; 0xe16 <vfprintf+0x354>
     e28:	aa 94       	dec	r10
     e2a:	f4 01       	movw	r30, r8
     e2c:	ea 0d       	add	r30, r10
     e2e:	f1 1d       	adc	r31, r1
     e30:	80 81       	ld	r24, Z
     e32:	b7 01       	movw	r22, r14
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	0e 94 49 07 	call	0xe92	; 0xe92 <fputc>
     e3a:	a1 10       	cpse	r10, r1
     e3c:	f5 cf       	rjmp	.-22     	; 0xe28 <vfprintf+0x366>
     e3e:	33 20       	and	r3, r3
     e40:	09 f4       	brne	.+2      	; 0xe44 <vfprintf+0x382>
     e42:	51 ce       	rjmp	.-862    	; 0xae6 <vfprintf+0x24>
     e44:	b7 01       	movw	r22, r14
     e46:	80 e2       	ldi	r24, 0x20	; 32
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	0e 94 49 07 	call	0xe92	; 0xe92 <fputc>
     e4e:	3a 94       	dec	r3
     e50:	f6 cf       	rjmp	.-20     	; 0xe3e <vfprintf+0x37c>
     e52:	f7 01       	movw	r30, r14
     e54:	86 81       	ldd	r24, Z+6	; 0x06
     e56:	97 81       	ldd	r25, Z+7	; 0x07
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <vfprintf+0x39c>
     e5a:	8f ef       	ldi	r24, 0xFF	; 255
     e5c:	9f ef       	ldi	r25, 0xFF	; 255
     e5e:	2c 96       	adiw	r28, 0x0c	; 12
     e60:	e2 e1       	ldi	r30, 0x12	; 18
     e62:	0c 94 fb 07 	jmp	0xff6	; 0xff6 <__epilogue_restores__>

00000e66 <strnlen_P>:
     e66:	fc 01       	movw	r30, r24
     e68:	05 90       	lpm	r0, Z+
     e6a:	61 50       	subi	r22, 0x01	; 1
     e6c:	70 40       	sbci	r23, 0x00	; 0
     e6e:	01 10       	cpse	r0, r1
     e70:	d8 f7       	brcc	.-10     	; 0xe68 <strnlen_P+0x2>
     e72:	80 95       	com	r24
     e74:	90 95       	com	r25
     e76:	8e 0f       	add	r24, r30
     e78:	9f 1f       	adc	r25, r31
     e7a:	08 95       	ret

00000e7c <strnlen>:
     e7c:	fc 01       	movw	r30, r24
     e7e:	61 50       	subi	r22, 0x01	; 1
     e80:	70 40       	sbci	r23, 0x00	; 0
     e82:	01 90       	ld	r0, Z+
     e84:	01 10       	cpse	r0, r1
     e86:	d8 f7       	brcc	.-10     	; 0xe7e <strnlen+0x2>
     e88:	80 95       	com	r24
     e8a:	90 95       	com	r25
     e8c:	8e 0f       	add	r24, r30
     e8e:	9f 1f       	adc	r25, r31
     e90:	08 95       	ret

00000e92 <fputc>:
     e92:	0f 93       	push	r16
     e94:	1f 93       	push	r17
     e96:	cf 93       	push	r28
     e98:	df 93       	push	r29
     e9a:	fb 01       	movw	r30, r22
     e9c:	23 81       	ldd	r18, Z+3	; 0x03
     e9e:	21 fd       	sbrc	r18, 1
     ea0:	03 c0       	rjmp	.+6      	; 0xea8 <fputc+0x16>
     ea2:	8f ef       	ldi	r24, 0xFF	; 255
     ea4:	9f ef       	ldi	r25, 0xFF	; 255
     ea6:	28 c0       	rjmp	.+80     	; 0xef8 <fputc+0x66>
     ea8:	22 ff       	sbrs	r18, 2
     eaa:	16 c0       	rjmp	.+44     	; 0xed8 <fputc+0x46>
     eac:	46 81       	ldd	r20, Z+6	; 0x06
     eae:	57 81       	ldd	r21, Z+7	; 0x07
     eb0:	24 81       	ldd	r18, Z+4	; 0x04
     eb2:	35 81       	ldd	r19, Z+5	; 0x05
     eb4:	42 17       	cp	r20, r18
     eb6:	53 07       	cpc	r21, r19
     eb8:	44 f4       	brge	.+16     	; 0xeca <fputc+0x38>
     eba:	a0 81       	ld	r26, Z
     ebc:	b1 81       	ldd	r27, Z+1	; 0x01
     ebe:	9d 01       	movw	r18, r26
     ec0:	2f 5f       	subi	r18, 0xFF	; 255
     ec2:	3f 4f       	sbci	r19, 0xFF	; 255
     ec4:	31 83       	std	Z+1, r19	; 0x01
     ec6:	20 83       	st	Z, r18
     ec8:	8c 93       	st	X, r24
     eca:	26 81       	ldd	r18, Z+6	; 0x06
     ecc:	37 81       	ldd	r19, Z+7	; 0x07
     ece:	2f 5f       	subi	r18, 0xFF	; 255
     ed0:	3f 4f       	sbci	r19, 0xFF	; 255
     ed2:	37 83       	std	Z+7, r19	; 0x07
     ed4:	26 83       	std	Z+6, r18	; 0x06
     ed6:	10 c0       	rjmp	.+32     	; 0xef8 <fputc+0x66>
     ed8:	eb 01       	movw	r28, r22
     eda:	09 2f       	mov	r16, r25
     edc:	18 2f       	mov	r17, r24
     ede:	00 84       	ldd	r0, Z+8	; 0x08
     ee0:	f1 85       	ldd	r31, Z+9	; 0x09
     ee2:	e0 2d       	mov	r30, r0
     ee4:	09 95       	icall
     ee6:	89 2b       	or	r24, r25
     ee8:	e1 f6       	brne	.-72     	; 0xea2 <fputc+0x10>
     eea:	8e 81       	ldd	r24, Y+6	; 0x06
     eec:	9f 81       	ldd	r25, Y+7	; 0x07
     eee:	01 96       	adiw	r24, 0x01	; 1
     ef0:	9f 83       	std	Y+7, r25	; 0x07
     ef2:	8e 83       	std	Y+6, r24	; 0x06
     ef4:	81 2f       	mov	r24, r17
     ef6:	90 2f       	mov	r25, r16
     ef8:	df 91       	pop	r29
     efa:	cf 91       	pop	r28
     efc:	1f 91       	pop	r17
     efe:	0f 91       	pop	r16
     f00:	08 95       	ret

00000f02 <__ultoa_invert>:
     f02:	fa 01       	movw	r30, r20
     f04:	aa 27       	eor	r26, r26
     f06:	28 30       	cpi	r18, 0x08	; 8
     f08:	51 f1       	breq	.+84     	; 0xf5e <__ultoa_invert+0x5c>
     f0a:	20 31       	cpi	r18, 0x10	; 16
     f0c:	81 f1       	breq	.+96     	; 0xf6e <__ultoa_invert+0x6c>
     f0e:	e8 94       	clt
     f10:	6f 93       	push	r22
     f12:	6e 7f       	andi	r22, 0xFE	; 254
     f14:	6e 5f       	subi	r22, 0xFE	; 254
     f16:	7f 4f       	sbci	r23, 0xFF	; 255
     f18:	8f 4f       	sbci	r24, 0xFF	; 255
     f1a:	9f 4f       	sbci	r25, 0xFF	; 255
     f1c:	af 4f       	sbci	r26, 0xFF	; 255
     f1e:	b1 e0       	ldi	r27, 0x01	; 1
     f20:	3e d0       	rcall	.+124    	; 0xf9e <__ultoa_invert+0x9c>
     f22:	b4 e0       	ldi	r27, 0x04	; 4
     f24:	3c d0       	rcall	.+120    	; 0xf9e <__ultoa_invert+0x9c>
     f26:	67 0f       	add	r22, r23
     f28:	78 1f       	adc	r23, r24
     f2a:	89 1f       	adc	r24, r25
     f2c:	9a 1f       	adc	r25, r26
     f2e:	a1 1d       	adc	r26, r1
     f30:	68 0f       	add	r22, r24
     f32:	79 1f       	adc	r23, r25
     f34:	8a 1f       	adc	r24, r26
     f36:	91 1d       	adc	r25, r1
     f38:	a1 1d       	adc	r26, r1
     f3a:	6a 0f       	add	r22, r26
     f3c:	71 1d       	adc	r23, r1
     f3e:	81 1d       	adc	r24, r1
     f40:	91 1d       	adc	r25, r1
     f42:	a1 1d       	adc	r26, r1
     f44:	20 d0       	rcall	.+64     	; 0xf86 <__ultoa_invert+0x84>
     f46:	09 f4       	brne	.+2      	; 0xf4a <__ultoa_invert+0x48>
     f48:	68 94       	set
     f4a:	3f 91       	pop	r19
     f4c:	2a e0       	ldi	r18, 0x0A	; 10
     f4e:	26 9f       	mul	r18, r22
     f50:	11 24       	eor	r1, r1
     f52:	30 19       	sub	r19, r0
     f54:	30 5d       	subi	r19, 0xD0	; 208
     f56:	31 93       	st	Z+, r19
     f58:	de f6       	brtc	.-74     	; 0xf10 <__ultoa_invert+0xe>
     f5a:	cf 01       	movw	r24, r30
     f5c:	08 95       	ret
     f5e:	46 2f       	mov	r20, r22
     f60:	47 70       	andi	r20, 0x07	; 7
     f62:	40 5d       	subi	r20, 0xD0	; 208
     f64:	41 93       	st	Z+, r20
     f66:	b3 e0       	ldi	r27, 0x03	; 3
     f68:	0f d0       	rcall	.+30     	; 0xf88 <__ultoa_invert+0x86>
     f6a:	c9 f7       	brne	.-14     	; 0xf5e <__ultoa_invert+0x5c>
     f6c:	f6 cf       	rjmp	.-20     	; 0xf5a <__ultoa_invert+0x58>
     f6e:	46 2f       	mov	r20, r22
     f70:	4f 70       	andi	r20, 0x0F	; 15
     f72:	40 5d       	subi	r20, 0xD0	; 208
     f74:	4a 33       	cpi	r20, 0x3A	; 58
     f76:	18 f0       	brcs	.+6      	; 0xf7e <__ultoa_invert+0x7c>
     f78:	49 5d       	subi	r20, 0xD9	; 217
     f7a:	31 fd       	sbrc	r19, 1
     f7c:	40 52       	subi	r20, 0x20	; 32
     f7e:	41 93       	st	Z+, r20
     f80:	02 d0       	rcall	.+4      	; 0xf86 <__ultoa_invert+0x84>
     f82:	a9 f7       	brne	.-22     	; 0xf6e <__ultoa_invert+0x6c>
     f84:	ea cf       	rjmp	.-44     	; 0xf5a <__ultoa_invert+0x58>
     f86:	b4 e0       	ldi	r27, 0x04	; 4
     f88:	a6 95       	lsr	r26
     f8a:	97 95       	ror	r25
     f8c:	87 95       	ror	r24
     f8e:	77 95       	ror	r23
     f90:	67 95       	ror	r22
     f92:	ba 95       	dec	r27
     f94:	c9 f7       	brne	.-14     	; 0xf88 <__ultoa_invert+0x86>
     f96:	00 97       	sbiw	r24, 0x00	; 0
     f98:	61 05       	cpc	r22, r1
     f9a:	71 05       	cpc	r23, r1
     f9c:	08 95       	ret
     f9e:	9b 01       	movw	r18, r22
     fa0:	ac 01       	movw	r20, r24
     fa2:	0a 2e       	mov	r0, r26
     fa4:	06 94       	lsr	r0
     fa6:	57 95       	ror	r21
     fa8:	47 95       	ror	r20
     faa:	37 95       	ror	r19
     fac:	27 95       	ror	r18
     fae:	ba 95       	dec	r27
     fb0:	c9 f7       	brne	.-14     	; 0xfa4 <__ultoa_invert+0xa2>
     fb2:	62 0f       	add	r22, r18
     fb4:	73 1f       	adc	r23, r19
     fb6:	84 1f       	adc	r24, r20
     fb8:	95 1f       	adc	r25, r21
     fba:	a0 1d       	adc	r26, r0
     fbc:	08 95       	ret

00000fbe <__prologue_saves__>:
     fbe:	2f 92       	push	r2
     fc0:	3f 92       	push	r3
     fc2:	4f 92       	push	r4
     fc4:	5f 92       	push	r5
     fc6:	6f 92       	push	r6
     fc8:	7f 92       	push	r7
     fca:	8f 92       	push	r8
     fcc:	9f 92       	push	r9
     fce:	af 92       	push	r10
     fd0:	bf 92       	push	r11
     fd2:	cf 92       	push	r12
     fd4:	df 92       	push	r13
     fd6:	ef 92       	push	r14
     fd8:	ff 92       	push	r15
     fda:	0f 93       	push	r16
     fdc:	1f 93       	push	r17
     fde:	cf 93       	push	r28
     fe0:	df 93       	push	r29
     fe2:	cd b7       	in	r28, 0x3d	; 61
     fe4:	de b7       	in	r29, 0x3e	; 62
     fe6:	ca 1b       	sub	r28, r26
     fe8:	db 0b       	sbc	r29, r27
     fea:	0f b6       	in	r0, 0x3f	; 63
     fec:	f8 94       	cli
     fee:	de bf       	out	0x3e, r29	; 62
     ff0:	0f be       	out	0x3f, r0	; 63
     ff2:	cd bf       	out	0x3d, r28	; 61
     ff4:	09 94       	ijmp

00000ff6 <__epilogue_restores__>:
     ff6:	2a 88       	ldd	r2, Y+18	; 0x12
     ff8:	39 88       	ldd	r3, Y+17	; 0x11
     ffa:	48 88       	ldd	r4, Y+16	; 0x10
     ffc:	5f 84       	ldd	r5, Y+15	; 0x0f
     ffe:	6e 84       	ldd	r6, Y+14	; 0x0e
    1000:	7d 84       	ldd	r7, Y+13	; 0x0d
    1002:	8c 84       	ldd	r8, Y+12	; 0x0c
    1004:	9b 84       	ldd	r9, Y+11	; 0x0b
    1006:	aa 84       	ldd	r10, Y+10	; 0x0a
    1008:	b9 84       	ldd	r11, Y+9	; 0x09
    100a:	c8 84       	ldd	r12, Y+8	; 0x08
    100c:	df 80       	ldd	r13, Y+7	; 0x07
    100e:	ee 80       	ldd	r14, Y+6	; 0x06
    1010:	fd 80       	ldd	r15, Y+5	; 0x05
    1012:	0c 81       	ldd	r16, Y+4	; 0x04
    1014:	1b 81       	ldd	r17, Y+3	; 0x03
    1016:	aa 81       	ldd	r26, Y+2	; 0x02
    1018:	b9 81       	ldd	r27, Y+1	; 0x01
    101a:	ce 0f       	add	r28, r30
    101c:	d1 1d       	adc	r29, r1
    101e:	0f b6       	in	r0, 0x3f	; 63
    1020:	f8 94       	cli
    1022:	de bf       	out	0x3e, r29	; 62
    1024:	0f be       	out	0x3f, r0	; 63
    1026:	cd bf       	out	0x3d, r28	; 61
    1028:	ed 01       	movw	r28, r26
    102a:	08 95       	ret

0000102c <_exit>:
    102c:	f8 94       	cli

0000102e <__stop_program>:
    102e:	ff cf       	rjmp	.-2      	; 0x102e <__stop_program>
