
DA5T3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000528  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004b4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  00000528  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000528  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000558  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000598  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000000db  00000000  00000000  000005c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000007f  00000000  00000000  0000069b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000000c8  00000000  00000000  0000071a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  000007e4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000164  00000000  00000000  00000818  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  0000097c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a6 30       	cpi	r26, 0x06	; 6
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 58 02 	jmp	0x4b0	; 0x4b0 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
volatile int ANGLE; // Variable for what angle to move to

int main()
{
	//PORTD pins as input
	DDRD = 0x00;
  90:	1a b8       	out	0x0a, r1	; 10
	//Enable internal pull ups
	PORTD = 0xFF;
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	8b b9       	out	0x0b, r24	; 11
	//Set PORTB1 pin as output
	DDRB = 0xFF;
  96:	84 b9       	out	0x04, r24	; 4
	//TOP = ICR1;
	//output compare OC1A 8 bit non inverted PWM
	//Clear OC1A on Compare Match, set OC1A at TOP
	//Fast PWM ....1000 bottom
	//ICR1 = 20000 defines 50Hz pwm
	ICR1 = 40000;
  98:	80 e4       	ldi	r24, 0x40	; 64
  9a:	9c e9       	ldi	r25, 0x9C	; 156
  9c:	90 93 87 00 	sts	0x0087, r25
  a0:	80 93 86 00 	sts	0x0086, r24
	OCR1A = 1000;
  a4:	88 ee       	ldi	r24, 0xE8	; 232
  a6:	93 e0       	ldi	r25, 0x03	; 3
  a8:	90 93 89 00 	sts	0x0089, r25
  ac:	80 93 88 00 	sts	0x0088, r24
	TCCR1A|=(0<<COM1A0)|(1<<COM1A1)|(0<<COM1B0)|(0<<COM1B1)|(0<<FOC1A)|(0<<FOC1B)|(1<<WGM11)|(0<<WGM10); //TCCR1A = 0x82
  b0:	e0 e8       	ldi	r30, 0x80	; 128
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	80 81       	ld	r24, Z
  b6:	82 68       	ori	r24, 0x82	; 130
  b8:	80 83       	st	Z, r24
	TCCR1B|=(0<<ICNC1)|(0<<ICES1)|(1<<WGM13)|(1<<WGM12)|(0<<CS12)|(1<<CS11)|(0<<CS10); //TCCR1B = 0x1A
  ba:	e1 e8       	ldi	r30, 0x81	; 129
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	80 81       	ld	r24, Z
  c0:	8a 61       	ori	r24, 0x1A	; 26
  c2:	80 83       	st	Z, r24
	// Orange = Signal
	while (1)
	{
		ADCvalue = 0;

		ADCSRA |= (1<<ADSC);// write one to ADSC bit to start conversion
  c4:	ca e7       	ldi	r28, 0x7A	; 122
  c6:	d0 e0       	ldi	r29, 0x00	; 0
		while(ADCSRA & (1<<ADSC))// wait until conversion is complete
		{
		}
		ADCvalue = ADC;// save voltage
  c8:	0f 2e       	mov	r0, r31
  ca:	f8 e7       	ldi	r31, 0x78	; 120
  cc:	ef 2e       	mov	r14, r31
  ce:	f1 2c       	mov	r15, r1
  d0:	f0 2d       	mov	r31, r0
		//ADCvalue = ADCvalue/1024; // Calculate what percent of maximum voltage is received
		ADCvalue = ADCvalue * 3.5156;
		ANGLE = ADCvalue+1000;
		OCR1A = ANGLE;
  d2:	08 e8       	ldi	r16, 0x88	; 136
  d4:	10 e0       	ldi	r17, 0x00	; 0
	//Brown = Ground
	// Red = Power
	// Orange = Signal
	while (1)
	{
		ADCvalue = 0;
  d6:	10 92 02 01 	sts	0x0102, r1
  da:	10 92 03 01 	sts	0x0103, r1
  de:	10 92 04 01 	sts	0x0104, r1
  e2:	10 92 05 01 	sts	0x0105, r1

		ADCSRA |= (1<<ADSC);// write one to ADSC bit to start conversion
  e6:	88 81       	ld	r24, Y
  e8:	80 64       	ori	r24, 0x40	; 64
  ea:	88 83       	st	Y, r24
		while(ADCSRA & (1<<ADSC))// wait until conversion is complete
  ec:	88 81       	ld	r24, Y
  ee:	86 fd       	sbrc	r24, 6
  f0:	fd cf       	rjmp	.-6      	; 0xec <main+0x5c>
		{
		}
		ADCvalue = ADC;// save voltage
  f2:	f7 01       	movw	r30, r14
  f4:	60 81       	ld	r22, Z
  f6:	71 81       	ldd	r23, Z+1	; 0x01
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	0e 94 5d 01 	call	0x2ba	; 0x2ba <__floatunsisf>
 100:	60 93 02 01 	sts	0x0102, r22
 104:	70 93 03 01 	sts	0x0103, r23
 108:	80 93 04 01 	sts	0x0104, r24
 10c:	90 93 05 01 	sts	0x0105, r25
		//ADCvalue = ADCvalue/1024; // Calculate what percent of maximum voltage is received
		ADCvalue = ADCvalue * 3.5156;
 110:	60 91 02 01 	lds	r22, 0x0102
 114:	70 91 03 01 	lds	r23, 0x0103
 118:	80 91 04 01 	lds	r24, 0x0104
 11c:	90 91 05 01 	lds	r25, 0x0105
 120:	27 e9       	ldi	r18, 0x97	; 151
 122:	3f ef       	ldi	r19, 0xFF	; 255
 124:	40 e6       	ldi	r20, 0x60	; 96
 126:	50 e4       	ldi	r21, 0x40	; 64
 128:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <__mulsf3>
 12c:	60 93 02 01 	sts	0x0102, r22
 130:	70 93 03 01 	sts	0x0103, r23
 134:	80 93 04 01 	sts	0x0104, r24
 138:	90 93 05 01 	sts	0x0105, r25
		ANGLE = ADCvalue+1000;
 13c:	60 91 02 01 	lds	r22, 0x0102
 140:	70 91 03 01 	lds	r23, 0x0103
 144:	80 91 04 01 	lds	r24, 0x0104
 148:	90 91 05 01 	lds	r25, 0x0105
 14c:	20 e0       	ldi	r18, 0x00	; 0
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	4a e7       	ldi	r20, 0x7A	; 122
 152:	54 e4       	ldi	r21, 0x44	; 68
 154:	0e 94 bb 00 	call	0x176	; 0x176 <__addsf3>
 158:	0e 94 27 01 	call	0x24e	; 0x24e <__fixsfsi>
 15c:	70 93 01 01 	sts	0x0101, r23
 160:	60 93 00 01 	sts	0x0100, r22
		OCR1A = ANGLE;
 164:	80 91 00 01 	lds	r24, 0x0100
 168:	90 91 01 01 	lds	r25, 0x0101
 16c:	f8 01       	movw	r30, r16
 16e:	91 83       	std	Z+1, r25	; 0x01
 170:	80 83       	st	Z, r24
	}
 172:	b1 cf       	rjmp	.-158    	; 0xd6 <main+0x46>

00000174 <__subsf3>:
 174:	50 58       	subi	r21, 0x80	; 128

00000176 <__addsf3>:
 176:	bb 27       	eor	r27, r27
 178:	aa 27       	eor	r26, r26
 17a:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <__addsf3x>
 17e:	0c 94 b1 01 	jmp	0x362	; 0x362 <__fp_round>
 182:	0e 94 a3 01 	call	0x346	; 0x346 <__fp_pscA>
 186:	38 f0       	brcs	.+14     	; 0x196 <__addsf3+0x20>
 188:	0e 94 aa 01 	call	0x354	; 0x354 <__fp_pscB>
 18c:	20 f0       	brcs	.+8      	; 0x196 <__addsf3+0x20>
 18e:	39 f4       	brne	.+14     	; 0x19e <__addsf3+0x28>
 190:	9f 3f       	cpi	r25, 0xFF	; 255
 192:	19 f4       	brne	.+6      	; 0x19a <__addsf3+0x24>
 194:	26 f4       	brtc	.+8      	; 0x19e <__addsf3+0x28>
 196:	0c 94 a0 01 	jmp	0x340	; 0x340 <__fp_nan>
 19a:	0e f4       	brtc	.+2      	; 0x19e <__addsf3+0x28>
 19c:	e0 95       	com	r30
 19e:	e7 fb       	bst	r30, 7
 1a0:	0c 94 9a 01 	jmp	0x334	; 0x334 <__fp_inf>

000001a4 <__addsf3x>:
 1a4:	e9 2f       	mov	r30, r25
 1a6:	0e 94 c2 01 	call	0x384	; 0x384 <__fp_split3>
 1aa:	58 f3       	brcs	.-42     	; 0x182 <__addsf3+0xc>
 1ac:	ba 17       	cp	r27, r26
 1ae:	62 07       	cpc	r22, r18
 1b0:	73 07       	cpc	r23, r19
 1b2:	84 07       	cpc	r24, r20
 1b4:	95 07       	cpc	r25, r21
 1b6:	20 f0       	brcs	.+8      	; 0x1c0 <__addsf3x+0x1c>
 1b8:	79 f4       	brne	.+30     	; 0x1d8 <__addsf3x+0x34>
 1ba:	a6 f5       	brtc	.+104    	; 0x224 <__addsf3x+0x80>
 1bc:	0c 94 e4 01 	jmp	0x3c8	; 0x3c8 <__fp_zero>
 1c0:	0e f4       	brtc	.+2      	; 0x1c4 <__addsf3x+0x20>
 1c2:	e0 95       	com	r30
 1c4:	0b 2e       	mov	r0, r27
 1c6:	ba 2f       	mov	r27, r26
 1c8:	a0 2d       	mov	r26, r0
 1ca:	0b 01       	movw	r0, r22
 1cc:	b9 01       	movw	r22, r18
 1ce:	90 01       	movw	r18, r0
 1d0:	0c 01       	movw	r0, r24
 1d2:	ca 01       	movw	r24, r20
 1d4:	a0 01       	movw	r20, r0
 1d6:	11 24       	eor	r1, r1
 1d8:	ff 27       	eor	r31, r31
 1da:	59 1b       	sub	r21, r25
 1dc:	99 f0       	breq	.+38     	; 0x204 <__addsf3x+0x60>
 1de:	59 3f       	cpi	r21, 0xF9	; 249
 1e0:	50 f4       	brcc	.+20     	; 0x1f6 <__addsf3x+0x52>
 1e2:	50 3e       	cpi	r21, 0xE0	; 224
 1e4:	68 f1       	brcs	.+90     	; 0x240 <__addsf3x+0x9c>
 1e6:	1a 16       	cp	r1, r26
 1e8:	f0 40       	sbci	r31, 0x00	; 0
 1ea:	a2 2f       	mov	r26, r18
 1ec:	23 2f       	mov	r18, r19
 1ee:	34 2f       	mov	r19, r20
 1f0:	44 27       	eor	r20, r20
 1f2:	58 5f       	subi	r21, 0xF8	; 248
 1f4:	f3 cf       	rjmp	.-26     	; 0x1dc <__addsf3x+0x38>
 1f6:	46 95       	lsr	r20
 1f8:	37 95       	ror	r19
 1fa:	27 95       	ror	r18
 1fc:	a7 95       	ror	r26
 1fe:	f0 40       	sbci	r31, 0x00	; 0
 200:	53 95       	inc	r21
 202:	c9 f7       	brne	.-14     	; 0x1f6 <__addsf3x+0x52>
 204:	7e f4       	brtc	.+30     	; 0x224 <__addsf3x+0x80>
 206:	1f 16       	cp	r1, r31
 208:	ba 0b       	sbc	r27, r26
 20a:	62 0b       	sbc	r22, r18
 20c:	73 0b       	sbc	r23, r19
 20e:	84 0b       	sbc	r24, r20
 210:	ba f0       	brmi	.+46     	; 0x240 <__addsf3x+0x9c>
 212:	91 50       	subi	r25, 0x01	; 1
 214:	a1 f0       	breq	.+40     	; 0x23e <__addsf3x+0x9a>
 216:	ff 0f       	add	r31, r31
 218:	bb 1f       	adc	r27, r27
 21a:	66 1f       	adc	r22, r22
 21c:	77 1f       	adc	r23, r23
 21e:	88 1f       	adc	r24, r24
 220:	c2 f7       	brpl	.-16     	; 0x212 <__addsf3x+0x6e>
 222:	0e c0       	rjmp	.+28     	; 0x240 <__addsf3x+0x9c>
 224:	ba 0f       	add	r27, r26
 226:	62 1f       	adc	r22, r18
 228:	73 1f       	adc	r23, r19
 22a:	84 1f       	adc	r24, r20
 22c:	48 f4       	brcc	.+18     	; 0x240 <__addsf3x+0x9c>
 22e:	87 95       	ror	r24
 230:	77 95       	ror	r23
 232:	67 95       	ror	r22
 234:	b7 95       	ror	r27
 236:	f7 95       	ror	r31
 238:	9e 3f       	cpi	r25, 0xFE	; 254
 23a:	08 f0       	brcs	.+2      	; 0x23e <__addsf3x+0x9a>
 23c:	b0 cf       	rjmp	.-160    	; 0x19e <__addsf3+0x28>
 23e:	93 95       	inc	r25
 240:	88 0f       	add	r24, r24
 242:	08 f0       	brcs	.+2      	; 0x246 <__addsf3x+0xa2>
 244:	99 27       	eor	r25, r25
 246:	ee 0f       	add	r30, r30
 248:	97 95       	ror	r25
 24a:	87 95       	ror	r24
 24c:	08 95       	ret

0000024e <__fixsfsi>:
 24e:	0e 94 2e 01 	call	0x25c	; 0x25c <__fixunssfsi>
 252:	68 94       	set
 254:	b1 11       	cpse	r27, r1
 256:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__fp_szero>
 25a:	08 95       	ret

0000025c <__fixunssfsi>:
 25c:	0e 94 ca 01 	call	0x394	; 0x394 <__fp_splitA>
 260:	88 f0       	brcs	.+34     	; 0x284 <__fixunssfsi+0x28>
 262:	9f 57       	subi	r25, 0x7F	; 127
 264:	98 f0       	brcs	.+38     	; 0x28c <__fixunssfsi+0x30>
 266:	b9 2f       	mov	r27, r25
 268:	99 27       	eor	r25, r25
 26a:	b7 51       	subi	r27, 0x17	; 23
 26c:	b0 f0       	brcs	.+44     	; 0x29a <__fixunssfsi+0x3e>
 26e:	e1 f0       	breq	.+56     	; 0x2a8 <__fixunssfsi+0x4c>
 270:	66 0f       	add	r22, r22
 272:	77 1f       	adc	r23, r23
 274:	88 1f       	adc	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	1a f0       	brmi	.+6      	; 0x280 <__fixunssfsi+0x24>
 27a:	ba 95       	dec	r27
 27c:	c9 f7       	brne	.-14     	; 0x270 <__fixunssfsi+0x14>
 27e:	14 c0       	rjmp	.+40     	; 0x2a8 <__fixunssfsi+0x4c>
 280:	b1 30       	cpi	r27, 0x01	; 1
 282:	91 f0       	breq	.+36     	; 0x2a8 <__fixunssfsi+0x4c>
 284:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <__fp_zero>
 288:	b1 e0       	ldi	r27, 0x01	; 1
 28a:	08 95       	ret
 28c:	0c 94 e4 01 	jmp	0x3c8	; 0x3c8 <__fp_zero>
 290:	67 2f       	mov	r22, r23
 292:	78 2f       	mov	r23, r24
 294:	88 27       	eor	r24, r24
 296:	b8 5f       	subi	r27, 0xF8	; 248
 298:	39 f0       	breq	.+14     	; 0x2a8 <__fixunssfsi+0x4c>
 29a:	b9 3f       	cpi	r27, 0xF9	; 249
 29c:	cc f3       	brlt	.-14     	; 0x290 <__fixunssfsi+0x34>
 29e:	86 95       	lsr	r24
 2a0:	77 95       	ror	r23
 2a2:	67 95       	ror	r22
 2a4:	b3 95       	inc	r27
 2a6:	d9 f7       	brne	.-10     	; 0x29e <__fixunssfsi+0x42>
 2a8:	3e f4       	brtc	.+14     	; 0x2b8 <__fixunssfsi+0x5c>
 2aa:	90 95       	com	r25
 2ac:	80 95       	com	r24
 2ae:	70 95       	com	r23
 2b0:	61 95       	neg	r22
 2b2:	7f 4f       	sbci	r23, 0xFF	; 255
 2b4:	8f 4f       	sbci	r24, 0xFF	; 255
 2b6:	9f 4f       	sbci	r25, 0xFF	; 255
 2b8:	08 95       	ret

000002ba <__floatunsisf>:
 2ba:	e8 94       	clt
 2bc:	09 c0       	rjmp	.+18     	; 0x2d0 <__floatsisf+0x12>

000002be <__floatsisf>:
 2be:	97 fb       	bst	r25, 7
 2c0:	3e f4       	brtc	.+14     	; 0x2d0 <__floatsisf+0x12>
 2c2:	90 95       	com	r25
 2c4:	80 95       	com	r24
 2c6:	70 95       	com	r23
 2c8:	61 95       	neg	r22
 2ca:	7f 4f       	sbci	r23, 0xFF	; 255
 2cc:	8f 4f       	sbci	r24, 0xFF	; 255
 2ce:	9f 4f       	sbci	r25, 0xFF	; 255
 2d0:	99 23       	and	r25, r25
 2d2:	a9 f0       	breq	.+42     	; 0x2fe <__floatsisf+0x40>
 2d4:	f9 2f       	mov	r31, r25
 2d6:	96 e9       	ldi	r25, 0x96	; 150
 2d8:	bb 27       	eor	r27, r27
 2da:	93 95       	inc	r25
 2dc:	f6 95       	lsr	r31
 2de:	87 95       	ror	r24
 2e0:	77 95       	ror	r23
 2e2:	67 95       	ror	r22
 2e4:	b7 95       	ror	r27
 2e6:	f1 11       	cpse	r31, r1
 2e8:	f8 cf       	rjmp	.-16     	; 0x2da <__floatsisf+0x1c>
 2ea:	fa f4       	brpl	.+62     	; 0x32a <__floatsisf+0x6c>
 2ec:	bb 0f       	add	r27, r27
 2ee:	11 f4       	brne	.+4      	; 0x2f4 <__floatsisf+0x36>
 2f0:	60 ff       	sbrs	r22, 0
 2f2:	1b c0       	rjmp	.+54     	; 0x32a <__floatsisf+0x6c>
 2f4:	6f 5f       	subi	r22, 0xFF	; 255
 2f6:	7f 4f       	sbci	r23, 0xFF	; 255
 2f8:	8f 4f       	sbci	r24, 0xFF	; 255
 2fa:	9f 4f       	sbci	r25, 0xFF	; 255
 2fc:	16 c0       	rjmp	.+44     	; 0x32a <__floatsisf+0x6c>
 2fe:	88 23       	and	r24, r24
 300:	11 f0       	breq	.+4      	; 0x306 <__floatsisf+0x48>
 302:	96 e9       	ldi	r25, 0x96	; 150
 304:	11 c0       	rjmp	.+34     	; 0x328 <__floatsisf+0x6a>
 306:	77 23       	and	r23, r23
 308:	21 f0       	breq	.+8      	; 0x312 <__floatsisf+0x54>
 30a:	9e e8       	ldi	r25, 0x8E	; 142
 30c:	87 2f       	mov	r24, r23
 30e:	76 2f       	mov	r23, r22
 310:	05 c0       	rjmp	.+10     	; 0x31c <__floatsisf+0x5e>
 312:	66 23       	and	r22, r22
 314:	71 f0       	breq	.+28     	; 0x332 <__floatsisf+0x74>
 316:	96 e8       	ldi	r25, 0x86	; 134
 318:	86 2f       	mov	r24, r22
 31a:	70 e0       	ldi	r23, 0x00	; 0
 31c:	60 e0       	ldi	r22, 0x00	; 0
 31e:	2a f0       	brmi	.+10     	; 0x32a <__floatsisf+0x6c>
 320:	9a 95       	dec	r25
 322:	66 0f       	add	r22, r22
 324:	77 1f       	adc	r23, r23
 326:	88 1f       	adc	r24, r24
 328:	da f7       	brpl	.-10     	; 0x320 <__floatsisf+0x62>
 32a:	88 0f       	add	r24, r24
 32c:	96 95       	lsr	r25
 32e:	87 95       	ror	r24
 330:	97 f9       	bld	r25, 7
 332:	08 95       	ret

00000334 <__fp_inf>:
 334:	97 f9       	bld	r25, 7
 336:	9f 67       	ori	r25, 0x7F	; 127
 338:	80 e8       	ldi	r24, 0x80	; 128
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	60 e0       	ldi	r22, 0x00	; 0
 33e:	08 95       	ret

00000340 <__fp_nan>:
 340:	9f ef       	ldi	r25, 0xFF	; 255
 342:	80 ec       	ldi	r24, 0xC0	; 192
 344:	08 95       	ret

00000346 <__fp_pscA>:
 346:	00 24       	eor	r0, r0
 348:	0a 94       	dec	r0
 34a:	16 16       	cp	r1, r22
 34c:	17 06       	cpc	r1, r23
 34e:	18 06       	cpc	r1, r24
 350:	09 06       	cpc	r0, r25
 352:	08 95       	ret

00000354 <__fp_pscB>:
 354:	00 24       	eor	r0, r0
 356:	0a 94       	dec	r0
 358:	12 16       	cp	r1, r18
 35a:	13 06       	cpc	r1, r19
 35c:	14 06       	cpc	r1, r20
 35e:	05 06       	cpc	r0, r21
 360:	08 95       	ret

00000362 <__fp_round>:
 362:	09 2e       	mov	r0, r25
 364:	03 94       	inc	r0
 366:	00 0c       	add	r0, r0
 368:	11 f4       	brne	.+4      	; 0x36e <__fp_round+0xc>
 36a:	88 23       	and	r24, r24
 36c:	52 f0       	brmi	.+20     	; 0x382 <__fp_round+0x20>
 36e:	bb 0f       	add	r27, r27
 370:	40 f4       	brcc	.+16     	; 0x382 <__fp_round+0x20>
 372:	bf 2b       	or	r27, r31
 374:	11 f4       	brne	.+4      	; 0x37a <__fp_round+0x18>
 376:	60 ff       	sbrs	r22, 0
 378:	04 c0       	rjmp	.+8      	; 0x382 <__fp_round+0x20>
 37a:	6f 5f       	subi	r22, 0xFF	; 255
 37c:	7f 4f       	sbci	r23, 0xFF	; 255
 37e:	8f 4f       	sbci	r24, 0xFF	; 255
 380:	9f 4f       	sbci	r25, 0xFF	; 255
 382:	08 95       	ret

00000384 <__fp_split3>:
 384:	57 fd       	sbrc	r21, 7
 386:	90 58       	subi	r25, 0x80	; 128
 388:	44 0f       	add	r20, r20
 38a:	55 1f       	adc	r21, r21
 38c:	59 f0       	breq	.+22     	; 0x3a4 <__fp_splitA+0x10>
 38e:	5f 3f       	cpi	r21, 0xFF	; 255
 390:	71 f0       	breq	.+28     	; 0x3ae <__fp_splitA+0x1a>
 392:	47 95       	ror	r20

00000394 <__fp_splitA>:
 394:	88 0f       	add	r24, r24
 396:	97 fb       	bst	r25, 7
 398:	99 1f       	adc	r25, r25
 39a:	61 f0       	breq	.+24     	; 0x3b4 <__fp_splitA+0x20>
 39c:	9f 3f       	cpi	r25, 0xFF	; 255
 39e:	79 f0       	breq	.+30     	; 0x3be <__fp_splitA+0x2a>
 3a0:	87 95       	ror	r24
 3a2:	08 95       	ret
 3a4:	12 16       	cp	r1, r18
 3a6:	13 06       	cpc	r1, r19
 3a8:	14 06       	cpc	r1, r20
 3aa:	55 1f       	adc	r21, r21
 3ac:	f2 cf       	rjmp	.-28     	; 0x392 <__fp_split3+0xe>
 3ae:	46 95       	lsr	r20
 3b0:	f1 df       	rcall	.-30     	; 0x394 <__fp_splitA>
 3b2:	08 c0       	rjmp	.+16     	; 0x3c4 <__fp_splitA+0x30>
 3b4:	16 16       	cp	r1, r22
 3b6:	17 06       	cpc	r1, r23
 3b8:	18 06       	cpc	r1, r24
 3ba:	99 1f       	adc	r25, r25
 3bc:	f1 cf       	rjmp	.-30     	; 0x3a0 <__fp_splitA+0xc>
 3be:	86 95       	lsr	r24
 3c0:	71 05       	cpc	r23, r1
 3c2:	61 05       	cpc	r22, r1
 3c4:	08 94       	sec
 3c6:	08 95       	ret

000003c8 <__fp_zero>:
 3c8:	e8 94       	clt

000003ca <__fp_szero>:
 3ca:	bb 27       	eor	r27, r27
 3cc:	66 27       	eor	r22, r22
 3ce:	77 27       	eor	r23, r23
 3d0:	cb 01       	movw	r24, r22
 3d2:	97 f9       	bld	r25, 7
 3d4:	08 95       	ret

000003d6 <__mulsf3>:
 3d6:	0e 94 fe 01 	call	0x3fc	; 0x3fc <__mulsf3x>
 3da:	0c 94 b1 01 	jmp	0x362	; 0x362 <__fp_round>
 3de:	0e 94 a3 01 	call	0x346	; 0x346 <__fp_pscA>
 3e2:	38 f0       	brcs	.+14     	; 0x3f2 <__mulsf3+0x1c>
 3e4:	0e 94 aa 01 	call	0x354	; 0x354 <__fp_pscB>
 3e8:	20 f0       	brcs	.+8      	; 0x3f2 <__mulsf3+0x1c>
 3ea:	95 23       	and	r25, r21
 3ec:	11 f0       	breq	.+4      	; 0x3f2 <__mulsf3+0x1c>
 3ee:	0c 94 9a 01 	jmp	0x334	; 0x334 <__fp_inf>
 3f2:	0c 94 a0 01 	jmp	0x340	; 0x340 <__fp_nan>
 3f6:	11 24       	eor	r1, r1
 3f8:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__fp_szero>

000003fc <__mulsf3x>:
 3fc:	0e 94 c2 01 	call	0x384	; 0x384 <__fp_split3>
 400:	70 f3       	brcs	.-36     	; 0x3de <__mulsf3+0x8>

00000402 <__mulsf3_pse>:
 402:	95 9f       	mul	r25, r21
 404:	c1 f3       	breq	.-16     	; 0x3f6 <__mulsf3+0x20>
 406:	95 0f       	add	r25, r21
 408:	50 e0       	ldi	r21, 0x00	; 0
 40a:	55 1f       	adc	r21, r21
 40c:	62 9f       	mul	r22, r18
 40e:	f0 01       	movw	r30, r0
 410:	72 9f       	mul	r23, r18
 412:	bb 27       	eor	r27, r27
 414:	f0 0d       	add	r31, r0
 416:	b1 1d       	adc	r27, r1
 418:	63 9f       	mul	r22, r19
 41a:	aa 27       	eor	r26, r26
 41c:	f0 0d       	add	r31, r0
 41e:	b1 1d       	adc	r27, r1
 420:	aa 1f       	adc	r26, r26
 422:	64 9f       	mul	r22, r20
 424:	66 27       	eor	r22, r22
 426:	b0 0d       	add	r27, r0
 428:	a1 1d       	adc	r26, r1
 42a:	66 1f       	adc	r22, r22
 42c:	82 9f       	mul	r24, r18
 42e:	22 27       	eor	r18, r18
 430:	b0 0d       	add	r27, r0
 432:	a1 1d       	adc	r26, r1
 434:	62 1f       	adc	r22, r18
 436:	73 9f       	mul	r23, r19
 438:	b0 0d       	add	r27, r0
 43a:	a1 1d       	adc	r26, r1
 43c:	62 1f       	adc	r22, r18
 43e:	83 9f       	mul	r24, r19
 440:	a0 0d       	add	r26, r0
 442:	61 1d       	adc	r22, r1
 444:	22 1f       	adc	r18, r18
 446:	74 9f       	mul	r23, r20
 448:	33 27       	eor	r19, r19
 44a:	a0 0d       	add	r26, r0
 44c:	61 1d       	adc	r22, r1
 44e:	23 1f       	adc	r18, r19
 450:	84 9f       	mul	r24, r20
 452:	60 0d       	add	r22, r0
 454:	21 1d       	adc	r18, r1
 456:	82 2f       	mov	r24, r18
 458:	76 2f       	mov	r23, r22
 45a:	6a 2f       	mov	r22, r26
 45c:	11 24       	eor	r1, r1
 45e:	9f 57       	subi	r25, 0x7F	; 127
 460:	50 40       	sbci	r21, 0x00	; 0
 462:	9a f0       	brmi	.+38     	; 0x48a <__mulsf3_pse+0x88>
 464:	f1 f0       	breq	.+60     	; 0x4a2 <__mulsf3_pse+0xa0>
 466:	88 23       	and	r24, r24
 468:	4a f0       	brmi	.+18     	; 0x47c <__mulsf3_pse+0x7a>
 46a:	ee 0f       	add	r30, r30
 46c:	ff 1f       	adc	r31, r31
 46e:	bb 1f       	adc	r27, r27
 470:	66 1f       	adc	r22, r22
 472:	77 1f       	adc	r23, r23
 474:	88 1f       	adc	r24, r24
 476:	91 50       	subi	r25, 0x01	; 1
 478:	50 40       	sbci	r21, 0x00	; 0
 47a:	a9 f7       	brne	.-22     	; 0x466 <__mulsf3_pse+0x64>
 47c:	9e 3f       	cpi	r25, 0xFE	; 254
 47e:	51 05       	cpc	r21, r1
 480:	80 f0       	brcs	.+32     	; 0x4a2 <__mulsf3_pse+0xa0>
 482:	0c 94 9a 01 	jmp	0x334	; 0x334 <__fp_inf>
 486:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__fp_szero>
 48a:	5f 3f       	cpi	r21, 0xFF	; 255
 48c:	e4 f3       	brlt	.-8      	; 0x486 <__mulsf3_pse+0x84>
 48e:	98 3e       	cpi	r25, 0xE8	; 232
 490:	d4 f3       	brlt	.-12     	; 0x486 <__mulsf3_pse+0x84>
 492:	86 95       	lsr	r24
 494:	77 95       	ror	r23
 496:	67 95       	ror	r22
 498:	b7 95       	ror	r27
 49a:	f7 95       	ror	r31
 49c:	e7 95       	ror	r30
 49e:	9f 5f       	subi	r25, 0xFF	; 255
 4a0:	c1 f7       	brne	.-16     	; 0x492 <__mulsf3_pse+0x90>
 4a2:	fe 2b       	or	r31, r30
 4a4:	88 0f       	add	r24, r24
 4a6:	91 1d       	adc	r25, r1
 4a8:	96 95       	lsr	r25
 4aa:	87 95       	ror	r24
 4ac:	97 f9       	bld	r25, 7
 4ae:	08 95       	ret

000004b0 <_exit>:
 4b0:	f8 94       	cli

000004b2 <__stop_program>:
 4b2:	ff cf       	rjmp	.-2      	; 0x4b2 <__stop_program>
